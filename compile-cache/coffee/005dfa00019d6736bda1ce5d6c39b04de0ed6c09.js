(function() {
  var Main;

  Main = require('../lib/main');

  describe('Console Service', function() {
    var create, focus, model, remove, _ref;
    model = null;
    _ref = [], focus = _ref[0], create = _ref[1], remove = _ref[2];
    beforeEach(function() {
      Main.provideInput().OutputModules.reset();
      jasmine.attachToDOM(atom.views.getView(atom.workspace));
      spyOn(Main.provideInput().OutputModules.modules.console, 'activate').andCallThrough();
      model = Main.provideConsole();
      focus = jasmine.createSpy('focus');
      create = jasmine.createSpy('create');
      remove = jasmine.createSpy('remove');
      model.onFocusTab(focus);
      model.onCreateTab(create);
      return model.onRemoveTab(remove);
    });
    afterEach(function() {
      return Main.provideInput().OutputModules.deactivate('console');
    });
    it('initializes the console', function() {
      expect(Main.provideInput().OutputModules.modules.console.activate).toHaveBeenCalled();
      return expect(model).toBeDefined();
    });
    return describe('when creating a new tab', function() {
      var close, tab;
      tab = null;
      close = null;
      beforeEach(function() {
        tab = model.createCustomTab('Test Tab');
        close = jasmine.createSpy('close');
        return tab.onClose(close);
      });
      it('emits a create event', function() {
        return expect(create).toHaveBeenCalledWith(tab);
      });
      describe('on clear', function() {
        return it('clears the view', function() {
          tab.view.text('Hello');
          expect(tab.view.text()).toBe('Hello');
          tab.clear();
          return expect(tab.view.text()).toBe('');
        });
      });
      describe('on setIcon', function() {
        return it('sets the icon', function() {
          tab.setIcon('x');
          return expect(tab.header.icon.hasClass('icon-x')).toBe(true);
        });
      });
      describe('on setHeader', function() {
        return it('sets the header', function() {
          tab.setHeader('Hello');
          expect(tab.header.name.text()).toBe('Hello');
          return expect(tab.title.innerText).toBe('Hello');
        });
      });
      describe('on printLine', function() {
        return it('prints a line', function() {
          tab.printLine('<div>Hello World!</div>');
          return expect(tab.view.text()).toBe('Hello World!');
        });
      });
      describe('on focus', function() {
        beforeEach(function() {
          return tab.focus();
        });
        return it('calls the focus event', function() {
          expect(focus).toHaveBeenCalledWith(tab);
          return expect(model.activeTab).toBe(tab);
        });
      });
      return describe('on close', function() {
        beforeEach(function() {
          return tab.close();
        });
        it('calls the close event', function() {
          return expect(close).toHaveBeenCalled();
        });
        return it('calls the remove event', function() {
          return expect(remove).toHaveBeenCalledWith(tab);
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvY2hhbXAvLmF0b20vcGFja2FnZXMvYnVpbGQtdG9vbHMvc3BlYy9jb25zb2xlLXNlcnZpY2Utc3BlYy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsSUFBQTs7QUFBQSxFQUFBLElBQUEsR0FBTyxPQUFBLENBQVEsYUFBUixDQUFQLENBQUE7O0FBQUEsRUFFQSxRQUFBLENBQVMsaUJBQVQsRUFBNEIsU0FBQSxHQUFBO0FBQzFCLFFBQUEsa0NBQUE7QUFBQSxJQUFBLEtBQUEsR0FBUSxJQUFSLENBQUE7QUFBQSxJQUNBLE9BQTBCLEVBQTFCLEVBQUMsZUFBRCxFQUFRLGdCQUFSLEVBQWdCLGdCQURoQixDQUFBO0FBQUEsSUFHQSxVQUFBLENBQVcsU0FBQSxHQUFBO0FBQ1QsTUFBQSxJQUFJLENBQUMsWUFBTCxDQUFBLENBQW1CLENBQUMsYUFBYSxDQUFDLEtBQWxDLENBQUEsQ0FBQSxDQUFBO0FBQUEsTUFDQSxPQUFPLENBQUMsV0FBUixDQUFvQixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQVgsQ0FBbUIsSUFBSSxDQUFDLFNBQXhCLENBQXBCLENBREEsQ0FBQTtBQUFBLE1BRUEsS0FBQSxDQUFNLElBQUksQ0FBQyxZQUFMLENBQUEsQ0FBbUIsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLE9BQWhELEVBQXlELFVBQXpELENBQW9FLENBQUMsY0FBckUsQ0FBQSxDQUZBLENBQUE7QUFBQSxNQUdBLEtBQUEsR0FBUSxJQUFJLENBQUMsY0FBTCxDQUFBLENBSFIsQ0FBQTtBQUFBLE1BSUEsS0FBQSxHQUFRLE9BQU8sQ0FBQyxTQUFSLENBQWtCLE9BQWxCLENBSlIsQ0FBQTtBQUFBLE1BS0EsTUFBQSxHQUFTLE9BQU8sQ0FBQyxTQUFSLENBQWtCLFFBQWxCLENBTFQsQ0FBQTtBQUFBLE1BTUEsTUFBQSxHQUFTLE9B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

//# sourceURL=/home/champ/.atom/packages/build-tools/spec/console-service-spec.coffee
