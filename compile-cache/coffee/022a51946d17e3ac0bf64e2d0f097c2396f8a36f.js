(function() {
  var Emitter, Tab, TabItem, TabView;

  TabView = require('./tab-view');

  TabItem = require('./tab-item');

  Emitter = require('atom').Emitter;

  module.exports = Tab = (function() {
    function Tab(command) {
      this.command = command;
      this.emitter = new Emitter;
      this.header = new TabItem(this.command.project, this.command.name, (function(_this) {
        return function() {
          return _this.close();
        };
      })(this));
      this.view = new TabView;
      this.header.setHeader("" + this.command.name + " of " + this.command.project);
      this.focus = null;
      this.console = null;
      this.input = null;
    }

    Tab.prototype.destroy = function() {
      this.emitter.dispose();
      this.input = null;
      this.focus = null;
      this.console = null;
      this.header = null;
      this.view = null;
      this.title = null;
      return this.command = null;
    };

    Tab.prototype.clear = function() {
      this.view.clear();
      this.error = null;
      return this.code = null;
    };

    Tab.prototype.setInput = function(input) {
      this.input = input;
    };

    Tab.prototype.setRunning = function() {
      return this.header.setIcon('sync');
    };

    Tab.prototype.setError = function(error) {
      this.error = error;
      this.header.setIcon('x');
      this.code = -1;
      return this.getHeader();
    };

    Tab.prototype.setFinished = function(code) {
      this.code = code;
      if (this.code === 0) {
        return this.header.setIcon('check');
      } else {
        this.header.setIcon('x');
        return this.getHeader();
      }
    };

    Tab.prototype.setCancelled = function() {
      this.header.setIcon('x');
      this.code = -2;
      return this.getHeader();
    };

    Tab.prototype.unlock = function() {
      return this.view.unlock();
    };

    Tab.prototype.lock = function() {
      this.input = null;
      return this.view.lock();
    };

    Tab.prototype.newLine = function() {
      return this.view.printLine('<div></div>');
    };

    Tab.prototype.scroll = function() {
      return this.view.scroll();
    };

    Tab.prototype.finishConsole = function() {
      return this.view.finishConsole();
    };

    Tab.prototype.hasFocus = function() {
      if (this.console == null) {
        return true;
      }
      return this === this.console.activeTab;
    };

    Tab.prototype.getHeader = function() {
      var s;
      if (this.title == null) {
        this.title = document.createElement('span');
      }
      this.title.innerText = "" + this.command.name + " of " + this.command.project;
      if (this.code == null) {
        return this.title;
      }
      if (this.code !== 0) {
        s = document.createElement('span');
        this.title.innerText += ': ';
        s.className = 'error';
        if (this.code > 0) {
          s.innerText = 'finished with exit code ' + this.code;
        } else if (this.code === -1) {
          s.innerText = 'received ' + this.error;
        } else {
          s.innerText = 'aborted by user or package';
        }
        this.title.appendChild(s);
      }
      return this.title;
    };

    Tab.prototype.close = function() {
      return this.emitter.emit('close');
    };

    Tab.prototype.onClose = function(callback) {
      return this.emitter.on('close', callback);
    };

    return Tab;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvY2hhbXAvLmF0b20vcGFja2FnZXMvYnVpbGQtdG9vbHMvbGliL2NvbnNvbGUvdGFiLmNvZmZlZSIKICBdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUEsTUFBQSw4QkFBQTs7QUFBQSxFQUFBLE9BQUEsR0FBVSxPQUFBLENBQVEsWUFBUixDQUFWLENBQUE7O0FBQUEsRUFDQSxPQUFBLEdBQVUsT0FBQSxDQUFRLFlBQVIsQ0FEVixDQUFBOztBQUFBLEVBR0MsVUFBVyxPQUFBLENBQVEsTUFBUixFQUFYLE9BSEQsQ0FBQTs7QUFBQSxFQUtBLE1BQU0sQ0FBQyxPQUFQLEdBQ1E7QUFDUyxJQUFBLGFBQUUsT0FBRixHQUFBO0FBQ1gsTUFEWSxJQUFDLENBQUEsVUFBQSxPQUNiLENBQUE7QUFBQSxNQUFBLElBQUMsQ0FBQSxPQUFELEdBQVcsR0FBQSxDQUFBLE9BQVgsQ0FBQTtBQUFBLE1BQ0EsSUFBQyxDQUFBLE1BQUQsR0FBYyxJQUFBLE9BQUEsQ0FBUSxJQUFDLENBQUEsT0FBTyxDQUFDLE9BQWpCLEVBQTBCLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBbkMsRUFBeUMsQ0FBQSxTQUFBLEtBQUEsR0FBQTtlQUFBLFNBQUEsR0FBQTtpQkFBRyxLQUFDLENBQUEsS0FBRCxDQUFBLEVBQUg7UUFBQSxFQUFBO01BQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUF6QyxDQURkLENBQUE7QUFBQSxNQUVBLElBQUMsQ0FBQSxJQUFELEdBQVEsR0FBQSxDQUFBLE9BRlIsQ0FBQTtBQUFBLE1BR0EsSUFBQyxDQUFBLE1BQU0sQ0FBQyxTQUFSLENBQWtCLEVBQUEsR0FBRyxJQUFDLENBQUEsT0FBTyxDQUFDLElBQVosR0FBaUIsTUFBakIsR0FBdUIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxPQUFsRCxDQUhBLENBQUE7QUFBQSxNQUlBLElBQUMsQ0FBQSxLQUFE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

//# sourceURL=/home/champ/.atom/packages/build-tools/lib/console/tab.coffee
