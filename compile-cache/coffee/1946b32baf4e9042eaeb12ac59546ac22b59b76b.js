(function() {
  var Console;

  Console = require('../lib/console/console');

  describe('Output Module - Console', function() {
    var create, focus, model, remove, tab, _ref;
    model = null;
    tab = null;
    _ref = [], focus = _ref[0], create = _ref[1], remove = _ref[2];
    beforeEach(function() {
      model = new Console;
      focus = jasmine.createSpy('focus');
      create = jasmine.createSpy('create');
      remove = jasmine.createSpy('remove');
      model.onFocusTab(focus);
      model.onCreateTab(create);
      model.onRemoveTab(remove);
      return tab = model.getTab({
        project: 'foo',
        name: 'bar'
      });
    });
    afterEach(function() {
      return model.destroy();
    });
    it('adds a tab', function() {
      return expect(model.tabs['foo']['bar']).toBeDefined();
    });
    it('calls the create callback', function() {
      return expect(create).toHaveBeenCalled();
    });
    it('returns the same tab for the same command', function() {
      return expect(model.getTab({
        project: 'foo',
        name: 'bar'
      })).toEqual(tab);
    });
    describe('on focus', function() {
      beforeEach(function() {
        return tab.focus();
      });
      return it('emits the focus event', function() {
        return expect(focus).toHaveBeenCalledWith(tab);
      });
    });
    return describe('when close icon is clicked', function() {
      beforeEach(function() {
        return tab.header.find('.close').click();
      });
      it('removes the tab', function() {
        return expect(model.tabs['foo']['bar']).toBeUndefined();
      });
      return it('calls the remove callback', function() {
        return expect(remove).toHaveBeenCalledWith(tab);
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvY2hhbXAvLmF0b20vcGFja2FnZXMvYnVpbGQtdG9vbHMvc3BlYy9jb25zb2xlLXNwZWMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLE9BQUE7O0FBQUEsRUFBQSxPQUFBLEdBQVUsT0FBQSxDQUFRLHdCQUFSLENBQVYsQ0FBQTs7QUFBQSxFQUVBLFFBQUEsQ0FBUyx5QkFBVCxFQUFvQyxTQUFBLEdBQUE7QUFDbEMsUUFBQSx1Q0FBQTtBQUFBLElBQUEsS0FBQSxHQUFRLElBQVIsQ0FBQTtBQUFBLElBQ0EsR0FBQSxHQUFNLElBRE4sQ0FBQTtBQUFBLElBRUEsT0FBMEIsRUFBMUIsRUFBQyxlQUFELEVBQVEsZ0JBQVIsRUFBZ0IsZ0JBRmhCLENBQUE7QUFBQSxJQUlBLFVBQUEsQ0FBVyxTQUFBLEdBQUE7QUFDVCxNQUFBLEtBQUEsR0FBUSxHQUFBLENBQUEsT0FBUixDQUFBO0FBQUEsTUFDQSxLQUFBLEdBQVEsT0FBTyxDQUFDLFNBQVIsQ0FBa0IsT0FBbEIsQ0FEUixDQUFBO0FBQUEsTUFFQSxNQUFBLEdBQVMsT0FBTyxDQUFDLFNBQVIsQ0FBa0IsUUFBbEIsQ0FGVCxDQUFBO0FBQUEsTUFHQSxNQUFBLEdBQVMsT0FBTyxDQUFDLFNBQVIsQ0FBa0IsUUFBbEIsQ0FIVCxDQUFBO0FBQUEsTUFJQSxLQUFLLENBQUMsVUFBTixDQUFpQixLQUFqQixDQUpBLENBQUE7QUFBQSxNQUtBLEtBQUssQ0FBQyxXQUFOLENBQWtCLE1BQWxCLENBTEEsQ0FBQTtBQUFBLE1BTUEsS0FBSyxDQUFDLFdBQU4sQ0FBa0IsTUFBbEIsQ0FOQSxDQUFBO2FBT0EsR0FBQSxHQUFNLEtBQUssQ0FBQyxNQUFOLENBQWE7QUFBQSxRQUFBLE9BQUEsRUFBUyxLQUFUO0FBQUEsUUFBZ0IsSUFBQSxFQUFNLEtBQXRCO09BQWIsRUFSRztJQUFBLENBQVgsQ0FKQSxDQUFBO0FBQUEsSUFjQSxTQUFBLENBQVUsU0FBQSxHQUFBO2FBQ1IsS0FBSyxDQUFDLE9BQU4sQ0FBQSxFQURRO0lBQUEsQ0FBVixDQWRBLENBQUE7QUFBQSxJQWlCQSxFQUFBLENBQUcsWUFBSCxFQUFpQixTQUFBLEdBQUE7YUFDZixNQUFBLENBQU8sS0FBSyxDQUFDLElBQUssQ0FBQSxLQUFBLENBQU8sQ0FBQSxLQUFBLENBQXpCLENBQWdDLENBQUMsV0FBakMsQ0FBQSxFQURlO0lBQUEsQ0FBakIsQ0FqQkEsQ0FBQTtBQUFBLElBb0JBLEVBQUEsQ0FBRywyQkFBSCxFQUFnQyxTQUFBLEdBQUE7YUFDOUIsTUFBQSxDQUFPLE1BQVAsQ0FBYyxDQUFDLGdCQUFmLENBQUEsRUFEOEI7SUFBQSxDQUFoQyxDQXBCQSxDQUFBO0FBQUEsSUF1QkEsRUFBQSxDQUFHLDJDQUFILEVBQWdELFNBQUEsR0FBQTthQUM5QyxNQUFBLENBQU8sS0FBSyxDQUFDLE1BQU4sQ0FBYTtBQUFBLFFBQUEsT0FBQSxFQUFTLEtBQVQ7QUFBQSxRQUFnQixJQUFBLEVBQU0sS0FBdEI7T0FBYixDQUFQLENBQWlELENBQUMsT0FBbEQsQ0FBMEQsR0FBMUQsRUFEOEM7SUFBQSxDQUFoRCxDQXZCQSxDQUFBO0FBQUEsSUEwQkEsUUFBQSxDQUFTLFVBQVQsRUFBcUIsU0FBQSxHQUFBO0FBRW5CLE1BQUEsVUFBQSxDQUFXLFNBQUEsR0FBQTtlQUNULEdBQUcsQ0FBQyxLQUFKLENBQUEsRUFEUztNQUFBLENBQVgsQ0FBQSxDQUFBO2FBR0EsRUFBQSxDQUFHLHVCQUFILEVBQTRCLFNBQUEsR0FBQTtlQUMxQixNQUFBLENBQU8sS0FBUCxDQUFhLENBQUMsb0JBQWQsQ0FBbUMsR0FBbkMsRUFEMEI7TUFBQSxDQUE1QixFQUxtQjtJQUFBLENBQXJCLENBMUJBLENBQUE7V0FrQ0EsUUFBQSxDQUFTLDRCQUFULEVBQXVDLFNBQUEsR0FBQTtBQUVyQyxNQUFBLFVBQUEsQ0FBVyxTQUFBLEdBQUE7ZUFDVCxHQUFHLENBQUMsTUFBTSxDQUFDLElBQVgsQ0FBZ0IsUUFBaEIsQ0FBeUIsQ0FBQyxLQUExQixDQUFBLEVBRFM7TUFBQSxDQUFYLENBQUEsQ0FBQTtBQUFBLE1BR0EsRUFBQSxDQUFHLGlCQUFILEVBQXNCLFNBQUEsR0FBQTtlQUNwQixNQUFBLENBQU8sS0FBSyxDQUFDLElBQUssQ0FBQSxLQUFBLENBQU8sQ0FBQSxLQUFBLENBQXpCLENBQWdDLENBQUMsYUFBakMsQ0FBQSxFQURvQjtNQUFBLENBQXRCLENBSEEsQ0FBQTthQU1BLEVBQUEsQ0FBRywyQkFBSCxFQUFnQyxTQUFBLEdBQUE7ZUFDOUIsTUFBQSxDQUFPLE1BQVAsQ0FBYyxDQUFDLG9CQUFmLENBQW9DLEdBQXBDLEVBRDhCO01BQUEsQ0FBaEMsRUFScUM7SUFBQSxDQUF2QyxFQW5Da0M7RUFBQSxDQUFwQyxDQUZBLENBQUE7QUFBQSIKfQ==

//# sourceURL=/home/champ/.atom/packages/build-tools/spec/console-spec.coffee
