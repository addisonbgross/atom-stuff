(function() {
  var AnsiParser;

  AnsiParser = require('../lib/output/ansi-parser');

  describe('AnsiParser', function() {
    var elements;
    elements = null;
    beforeEach(function() {
      var element;
      element = document.createElement('div');
      element.innerHTML = '<div></div>';
      return elements = [element];
    });
    describe('On single line with escape code at the beginning and end', function() {
      var ret;
      ret = null;
      beforeEach(function() {
        return ret = AnsiParser.getDelim('\x1b[32mHello \x1b[35;41mbeautiful\x1b[33m world!\x1b[0m', elements, 0);
      });
      it('has one empty style', function() {
        return expect(ret[0]).toEqual([[0, 0, 0], 0, 0]);
      });
      it('has the correct styling for "Hello"', function() {
        return expect(ret[1]).toEqual([[32, 0, 0], 0, 5]);
      });
      it('has the correct styling for "beautiful"', function() {
        return expect(ret[2]).toEqual([[35, 41, 0], 11, 19]);
      });
      it('has the correct styling for "world!"', function() {
        return expect(ret[3]).toEqual([[33, 41, 0], 28, 33]);
      });
      return it('has one empty style at the end', function() {
        return expect(ret[4]).toEqual([[0, 0, 0], 40, 44]);
      });
    });
    describe('On multi line', function() {
      beforeEach(function() {
        return AnsiParser.parseAnsi('\x1b[32mHello\x1b[41m', elements, 0);
      });
      it('has the correct style', function() {
        expect(elements[0].children.length).toBe(2);
        expect(elements[0].children[1].innerText).toBe('Hello');
        return expect(elements[0].children[1].className).toBe('a32 a0 a0');
      });
      it('has the correct attributes', function() {
        return expect(elements[0].children[1].getAttribute('nextStyle')).toBe('a32 a41 a0');
      });
      return describe('On second line', function() {
        beforeEach(function() {
          elements.push(document.createElement('div'));
          return AnsiParser.parseAnsi('World\x1b[', elements, 1);
        });
        it('has the correct style', function() {
          expect(elements[1].children.length).toBe(1);
          expect(elements[1].children[0].innerText).toBe('World');
          return expect(elements[1].children[0].className).toBe('a32 a41 a0');
        });
        it('has the correct attributes', function() {
          return expect(elements[1].children[0].getAttribute('endsWithAnsi')).toBe('\x1b[');
        });
        return describe('On third line', function() {
          beforeEach(function() {
            elements.push(document.createElement('div'));
            return AnsiParser.parseAnsi('01;33m!\x1b[0m', elements, 2);
          });
          it('has the correct style', function() {
            expect(elements[2].children.length).toBe(1);
            expect(elements[2].children[0].innerText).toBe('!');
            return expect(elements[2].children[0].className).toBe('a33 a41 a1');
          });
          return it('has the correct attributes', function() {
            return expect(elements[2].children[0].getAttribute('nextStyle')).toBe('a0 a0 a0');
          });
        });
      });
    });
    return describe('On multi line with unsupported code', function() {
      beforeEach(function() {
        return AnsiParser.parseAnsi('\x1b[32mHello\x1b[24m\x1b[0K', elements, 0);
      });
      it('has the correct style', function() {
        expect(elements[0].children.length).toBe(3);
        expect(elements[0].children[1].innerText).toBe('Hello');
        expect(elements[0].children[2].innerText).toBe('\x1b[0K');
        expect(elements[0].children[1].className).toBe('a32 a0 a0');
        return expect(elements[0].children[2].className).toBe('a32 a0 a24');
      });
      return describe('On second line', function() {
        beforeEach(function() {
          elements.push(document.createElement('div'));
          return AnsiParser.parseAnsi('World\x1b[', elements, 1);
        });
        it('has the correct style', function() {
          expect(elements[1].children.length).toBe(1);
          expect(elements[1].children[0].innerText).toBe('World');
          return expect(elements[1].children[0].className).toBe('a32 a0 a24');
        });
        return it('has the correct attributes', function() {
          return expect(elements[1].children[0].getAttribute('endsWithAnsi')).toBe('\x1b[');
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvY2hhbXAvLmF0b20vcGFja2FnZXMvYnVpbGQtdG9vbHMvc3BlYy9hbnNpLXBhcnNlci1zcGVjLmNvZmZlZSIKICBdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUEsTUFBQSxVQUFBOztBQUFBLEVBQUEsVUFBQSxHQUFhLE9BQUEsQ0FBUSwyQkFBUixDQUFiLENBQUE7O0FBQUEsRUFFQSxRQUFBLENBQVMsWUFBVCxFQUF1QixTQUFBLEdBQUE7QUFDckIsUUFBQSxRQUFBO0FBQUEsSUFBQSxRQUFBLEdBQVcsSUFBWCxDQUFBO0FBQUEsSUFFQSxVQUFBLENBQVcsU0FBQSxHQUFBO0FBQ1QsVUFBQSxPQUFBO0FBQUEsTUFBQSxPQUFBLEdBQVUsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBVixDQUFBO0FBQUEsTUFDQSxPQUFPLENBQUMsU0FBUixHQUFvQixhQURwQixDQUFBO2FBRUEsUUFBQSxHQUFXLENBQUMsT0FBRCxFQUhGO0lBQUEsQ0FBWCxDQUZBLENBQUE7QUFBQSxJQU9BLFFBQUEsQ0FBUywwREFBVCxFQUFxRSxTQUFBLEdBQUE7QUFDbkUsVUFBQSxHQUFBO0FBQUEsTUFBQSxHQUFBLEdBQU0sSUFBTixDQUFBO0FBQUEsTUFFQSxVQUFBLENBQVcsU0FBQSxHQUFBO2VBQ1QsR0FBQSxHQUFNLFVBQVUsQ0FBQyxRQUFYLENBQW9CLDBEQUFwQixFQUFnRixRQUFoRixFQUEwRixDQUExRixFQURHO01BQUEsQ0FBWCxDQUZBLENBQUE7QUFBQSxNQUtBLEVBQUEsQ0FBRyxxQkFBSCxFQUEwQixTQUFBLEdBQUE7ZUFDeEIsTUFBQSxDQUFPLEdBQUksQ0FBQSxDQUFBLENBQVgsQ0FBYyxDQUFDLE9BQWYsQ0FBdUIsQ0FBQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUFELEVBQVksQ0FBWixFQUFlLENBQWYsQ0FBdkIs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

//# sourceURL=/home/champ/.atom/packages/build-tools/spec/ansi-parser-spec.coffee
