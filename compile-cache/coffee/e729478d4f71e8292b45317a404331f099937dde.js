(function() {
  var CommandInfoPane;

  CommandInfoPane = require('../lib/view/command-info-pane');

  describe('Command Info Pane', function() {
    var command, down, edit, remove, up, view;
    view = null;
    command = null;
    up = null;
    down = null;
    edit = null;
    remove = null;
    beforeEach(function() {
      up = jasmine.createSpy('up');
      down = jasmine.createSpy('down');
      edit = jasmine.createSpy('edit');
      remove = jasmine.createSpy('remove');
      command = {
        project: atom.project.getPaths()[0],
        oldname: 'Test 1',
        name: 'Test 1',
        command: 'echo test',
        wd: '.',
        stdout: {
          highlighting: 'nh'
        },
        stderr: {
          highlighting: 'hc',
          profile: 'python'
        },
        output: {
          console: {
            close_success: true
          }
        }
      };
      view = new CommandInfoPane(command);
      view.setCallbacks(up, down, edit, remove);
      return jasmine.attachToDOM(view.element);
    });
    it('has a pane', function() {
      return expect(view.element).toBeDefined();
    });
    it('has 5 panes', function() {
      return expect(view.element.children[1].children.length).toBe(3);
    });
    it('has the correct values', function() {
      expect(view.info.find('.module')[0].children[1].children[0].innerText).toBe('echo test');
      expect(view.info.find('.module')[1].children[1].children[0].innerText).toBe('No highlighting - Ignore ANSI Color Codes');
      expect(view.info.find('.module')[2].children[1].children[0].innerText).toBe('true');
      return expect(view.info.find('.panel-heading')[2].innerText).toBe('Output: Console');
    });
    describe('On up click', function() {
      beforeEach(function() {
        return view.find('.icon-triangle-up').click();
      });
      return it('executes the up callback', function() {
        return expect(up).toHaveBeenCalled();
      });
    });
    describe('On down click', function() {
      beforeEach(function() {
        return view.find('.icon-triangle-down').click();
      });
      return it('executes the down callback', function() {
        return expect(down).toHaveBeenCalled();
      });
    });
    describe('On edit click', function() {
      beforeEach(function() {
        return view.find('.icon-pencil').click();
      });
      return it('executes the edit callback', function() {
        return expect(edit).toHaveBeenCalled();
      });
    });
    return describe('On remove click', function() {
      beforeEach(function() {
        return view.find('.icon-x').click();
      });
      return it('executes the remove callback', function() {
        return expect(remove).toHaveBeenCalled();
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvY2hhbXAvLmF0b20vcGFja2FnZXMvYnVpbGQtdG9vbHMvc3BlYy9jb21tYW5kLWluZm8tcGFuZS1zcGVjLmNvZmZlZSIKICBdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUEsTUFBQSxlQUFBOztBQUFBLEVBQUEsZUFBQSxHQUFrQixPQUFBLENBQVEsK0JBQVIsQ0FBbEIsQ0FBQTs7QUFBQSxFQUVBLFFBQUEsQ0FBUyxtQkFBVCxFQUE4QixTQUFBLEdBQUE7QUFDNUIsUUFBQSxxQ0FBQTtBQUFBLElBQUEsSUFBQSxHQUFPLElBQVAsQ0FBQTtBQUFBLElBQ0EsT0FBQSxHQUFVLElBRFYsQ0FBQTtBQUFBLElBRUEsRUFBQSxHQUFLLElBRkwsQ0FBQTtBQUFBLElBR0EsSUFBQSxHQUFPLElBSFAsQ0FBQTtBQUFBLElBSUEsSUFBQSxHQUFPLElBSlAsQ0FBQTtBQUFBLElBS0EsTUFBQSxHQUFTLElBTFQsQ0FBQTtBQUFBLElBT0EsVUFBQSxDQUFXLFNBQUEsR0FBQTtBQUNULE1BQUEsRUFBQSxHQUFLLE9BQU8sQ0FBQyxTQUFSLENBQWtCLElBQWxCLENBQUwsQ0FBQTtBQUFBLE1BQ0EsSUFBQSxHQUFPLE9BQU8sQ0FBQyxTQUFSLENBQWtCLE1BQWxCLENBRFAsQ0FBQTtBQUFBLE1BRUEsSUFBQSxHQUFPLE9BQU8sQ0FBQyxTQUFSLENBQWtCLE1BQWxCLENBRlAsQ0FBQTtBQUFBLE1BR0EsTUFBQSxHQUFTLE9BQU8sQ0FBQyxTQUFSLENBQWtCLFFBQWxCLENBSFQsQ0FBQTtBQUFBLE1BSUEsT0FBQSxHQUNFO0FBQUEsUUFBQSxPQUFBLEVBQVMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFiLENBQUEsQ0FBd0IsQ0FBQSxDQUFBLENBQWpDO0FBQUEsUUFDQSxPQUFBLEVBQVMsUUFEVDtBQUFBLFFBRUEsSUFBQSxFQUFNLFFBRk47QUFBQSxRQUdB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

//# sourceURL=/home/champ/.atom/packages/build-tools/spec/command-info-pane-spec.coffee
