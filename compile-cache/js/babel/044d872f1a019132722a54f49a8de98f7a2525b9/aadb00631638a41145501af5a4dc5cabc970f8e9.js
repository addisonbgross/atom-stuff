'use babel';
'use strict';

var SelectListView = require('atom-space-pen-views').SelectListView;
var cscompatability = require('./cscompatability');

module.exports = (function () {
  function TargetsView() {
    SelectListView.apply(this, arguments);
    this.show();
  }

  cscompatability['extends'](TargetsView, SelectListView);

  TargetsView.prototype.initialize = function () {
    TargetsView.__super__.initialize.apply(this, arguments);
    this.list.addClass('mark-active');
  };

  TargetsView.prototype.show = function () {
    this.panel = atom.workspace.addModalPanel({
      item: this
    });
    this.panel.show();
    this.focusFilterEditor();
  };

  TargetsView.prototype.hide = function () {
    this.panel.hide();
  };

  TargetsView.prototype.setItems = function () {
    TargetsView.__super__.setItems.apply(this, arguments);

    var activeItemView = this.find('.active');
    if (0 < activeItemView.length) {
      this.selectItemView(activeItemView);
      this.scrollToItemView(activeItemView);
    }
  };

  TargetsView.prototype.setActiveTarget = function (target) {
    this.activeTarget = target;
  };

  TargetsView.prototype.viewForItem = function (targetName) {
    var activeTarget = this.activeTarget;
    return TargetsView.render(function () {
      var activeClass = targetName === activeTarget ? 'active' : '';
      this.li({ 'class': activeClass + ' build-target' }, targetName);
    });
  };

  TargetsView.prototype.getEmptyMessage = function (itemCount, filteredItemCount) {
    return 0 === itemCount ? 'No targets found.' : 'No matches';
  };

  TargetsView.prototype.awaitSelection = function () {
    var _this = this;

    return new Promise(function (resolve, reject) {
      _this.resolveFunction = resolve;
    });
  };

  TargetsView.prototype.confirmed = function (target) {
    if (this.resolveFunction) {
      this.resolveFunction(target);
      this.resolveFunction = null;
    }
    this.hide();
  };

  TargetsView.prototype.cancelled = function () {
    this.hide();
  };

  return TargetsView;
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2NoYW1wLy5hdG9tL3BhY2thZ2VzL2J1aWxkL2xpYi90YXJnZXRzLXZpZXcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxDQUFDO0FBQ1osWUFBWSxDQUFDOztBQUViLElBQUksY0FBYyxHQUFHLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLGNBQWMsQ0FBQztBQUNwRSxJQUFJLGVBQWUsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQzs7QUFFbkQsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLFlBQVc7QUFDM0IsV0FBUyxXQUFXLEdBQUc7QUFDckIsa0JBQWMsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBQ3RDLFFBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztHQUNiOztBQUVELGlCQUFlLFdBQVEsQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7O0FBRXJELGFBQVcsQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLFlBQVk7QUFDN0MsZUFBVyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztBQUN4RCxRQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQztHQUNuQyxDQUFDOztBQUVGLGFBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLFlBQVc7QUFDdEMsUUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQztBQUN4QyxVQUFJLEVBQUUsSUFBSTtLQUNYLENBQUMsQ0FBQztBQUNILFFBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDbEIsUUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7R0FDMUIsQ0FBQzs7QUFFRixhQUFXLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxZQUFZO0FBQ3ZDLFFBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7R0FDbkIsQ0FBQzs7QUFFRixhQUFXLENBQUMsU0FBUyxDQUFDLFFBQVEsR0FBRyxZQUFZO0FBQzNDLGVBQVcsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7O0FBRXRELFFBQUksY0FBYyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDMUMsUUFBSSxDQUFDLEdBQUcsY0FBYyxDQUFDLE1BQU0sRUFBRTtBQUM3QixVQUFJLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3BDLFVBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsQ0FBQztLQUN2QztHQUNGLENBQUM7O0FBRUYsYUFBVyxDQUFDLFNBQVMsQ0FBQyxlQUFlLEdBQUcsVUFBVSxNQUFNLEVBQUU7QUFDeEQsUUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUM7R0FDNUIsQ0FBQzs7QUFFRixhQUFXLENBQUMsU0FBUyxDQUFDLFdBQVcsR0FBRyxVQUFTLFVBQVUsRUFBRTtBQUN2RCxRQUFJLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO0FBQ3JDLFdBQU8sV0FBVyxDQUFDLE1BQU0sQ0FBQyxZQUFXO0FBQ25DLFVBQUksV0FBVyxHQUFJLFVBQVUsS0FBSyxZQUFZLEdBQUcsUUFBUSxHQUFHLEVBQUUsQUFBQyxDQUFDO0FBQ2hFLFVBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxTQUFPLFdBQVcsR0FBRyxlQUFlLEVBQUUsRUFBRSxVQUFVLENBQUMsQ0FBQztLQUMvRCxDQUFDLENBQUM7R0FDSixDQUFDOztBQUVGLGFBQVcsQ0FBQyxTQUFTLENBQUMsZUFBZSxHQUFHLFVBQVMsU0FBUyxFQUFFLGlCQUFpQixFQUFFO0FBQzdFLFdBQU8sQUFBQyxDQUFDLEtBQUssU0FBUyxHQUFJLG1CQUFtQixHQUFHLFlBQVksQ0FBQztHQUMvRCxDQUFDOztBQUVGLGFBQVcsQ0FBQyxTQUFTLENBQUMsY0FBYyxHQUFHLFlBQVk7OztBQUNqRCxXQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBSztBQUN0QyxZQUFLLGVBQWUsR0FBRyxPQUFPLENBQUM7S0FDaEMsQ0FBQyxDQUFDO0dBQ0osQ0FBQzs7QUFFRixhQUFXLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxVQUFTLE1BQU0sRUFBRTtBQUNqRCxRQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7QUFDeEIsVUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3QixVQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztLQUM3QjtBQUNELFFBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztHQUNiLENBQUM7O0FBRUYsYUFBVyxDQUFDLFNBQVMsQ0FBQyxTQUFTLEdBQUcsWUFBVztBQUMzQyxRQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7R0FDYixDQUFDOztBQUVGLFNBQU8sV0FBVyxDQUFDO0NBQ3BCLENBQUEsRUFBRyxDQUFDIiwiZmlsZSI6Ii9ob21lL2NoYW1wLy5hdG9tL3BhY2thZ2VzL2J1aWxkL2xpYi90YXJnZXRzLXZpZXcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbid1c2Ugc3RyaWN0JztcblxudmFyIFNlbGVjdExpc3RWaWV3ID0gcmVxdWlyZSgnYXRvbS1zcGFjZS1wZW4tdmlld3MnKS5TZWxlY3RMaXN0VmlldztcbnZhciBjc2NvbXBhdGFiaWxpdHkgPSByZXF1aXJlKCcuL2NzY29tcGF0YWJpbGl0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gVGFyZ2V0c1ZpZXcoKSB7XG4gICAgU2VsZWN0TGlzdFZpZXcuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB0aGlzLnNob3coKTtcbiAgfVxuXG4gIGNzY29tcGF0YWJpbGl0eS5leHRlbmRzKFRhcmdldHNWaWV3LCBTZWxlY3RMaXN0Vmlldyk7XG5cbiAgVGFyZ2V0c1ZpZXcucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgVGFyZ2V0c1ZpZXcuX19zdXBlcl9fLmluaXRpYWxpemUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB0aGlzLmxpc3QuYWRkQ2xhc3MoJ21hcmstYWN0aXZlJyk7XG4gIH07XG5cbiAgVGFyZ2V0c1ZpZXcucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnBhbmVsID0gYXRvbS53b3Jrc3BhY2UuYWRkTW9kYWxQYW5lbCh7XG4gICAgICBpdGVtOiB0aGlzXG4gICAgfSk7XG4gICAgdGhpcy5wYW5lbC5zaG93KCk7XG4gICAgdGhpcy5mb2N1c0ZpbHRlckVkaXRvcigpO1xuICB9O1xuXG4gIFRhcmdldHNWaWV3LnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMucGFuZWwuaGlkZSgpO1xuICB9O1xuXG4gIFRhcmdldHNWaWV3LnByb3RvdHlwZS5zZXRJdGVtcyA9IGZ1bmN0aW9uICgpIHtcbiAgICBUYXJnZXRzVmlldy5fX3N1cGVyX18uc2V0SXRlbXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgIHZhciBhY3RpdmVJdGVtVmlldyA9IHRoaXMuZmluZCgnLmFjdGl2ZScpO1xuICAgIGlmICgwIDwgYWN0aXZlSXRlbVZpZXcubGVuZ3RoKSB7XG4gICAgICB0aGlzLnNlbGVjdEl0ZW1WaWV3KGFjdGl2ZUl0ZW1WaWV3KTtcbiAgICAgIHRoaXMuc2Nyb2xsVG9JdGVtVmlldyhhY3RpdmVJdGVtVmlldyk7XG4gICAgfVxuICB9O1xuXG4gIFRhcmdldHNWaWV3LnByb3RvdHlwZS5zZXRBY3RpdmVUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgdGhpcy5hY3RpdmVUYXJnZXQgPSB0YXJnZXQ7XG4gIH07XG5cbiAgVGFyZ2V0c1ZpZXcucHJvdG90eXBlLnZpZXdGb3JJdGVtID0gZnVuY3Rpb24odGFyZ2V0TmFtZSkge1xuICAgIHZhciBhY3RpdmVUYXJnZXQgPSB0aGlzLmFjdGl2ZVRhcmdldDtcbiAgICByZXR1cm4gVGFyZ2V0c1ZpZXcucmVuZGVyKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGFjdGl2ZUNsYXNzID0gKHRhcmdldE5hbWUgPT09IGFjdGl2ZVRhcmdldCA/ICdhY3RpdmUnIDogJycpO1xuICAgICAgdGhpcy5saSh7IGNsYXNzOiBhY3RpdmVDbGFzcyArICcgYnVpbGQtdGFyZ2V0JyB9LCB0YXJnZXROYW1lKTtcbiAgICB9KTtcbiAgfTtcblxuICBUYXJnZXRzVmlldy5wcm90b3R5cGUuZ2V0RW1wdHlNZXNzYWdlID0gZnVuY3Rpb24oaXRlbUNvdW50LCBmaWx0ZXJlZEl0ZW1Db3VudCkge1xuICAgIHJldHVybiAoMCA9PT0gaXRlbUNvdW50KSA/ICdObyB0YXJnZXRzIGZvdW5kLicgOiAnTm8gbWF0Y2hlcyc7XG4gIH07XG5cbiAgVGFyZ2V0c1ZpZXcucHJvdG90eXBlLmF3YWl0U2VsZWN0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLnJlc29sdmVGdW5jdGlvbiA9IHJlc29sdmU7XG4gICAgfSk7XG4gIH07XG5cbiAgVGFyZ2V0c1ZpZXcucHJvdG90eXBlLmNvbmZpcm1lZCA9IGZ1bmN0aW9uKHRhcmdldCkge1xuICAgIGlmICh0aGlzLnJlc29sdmVGdW5jdGlvbikge1xuICAgICAgdGhpcy5yZXNvbHZlRnVuY3Rpb24odGFyZ2V0KTtcbiAgICAgIHRoaXMucmVzb2x2ZUZ1bmN0aW9uID0gbnVsbDtcbiAgICB9XG4gICAgdGhpcy5oaWRlKCk7XG4gIH07XG5cbiAgVGFyZ2V0c1ZpZXcucHJvdG90eXBlLmNhbmNlbGxlZCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuaGlkZSgpO1xuICB9O1xuXG4gIHJldHVybiBUYXJnZXRzVmlldztcbn0pKCk7XG4iXX0=
//# sourceURL=/home/champ/.atom/packages/build/lib/targets-view.js
