'use babel';
'use strict';

var View = require('atom-space-pen-views').View;
var cscompatability = require('./cscompatability');

module.exports = (function () {
  function SaveConfirmView() {
    View.apply(this, arguments);
  }

  cscompatability['extends'](SaveConfirmView, View);

  SaveConfirmView.content = function () {
    SaveConfirmView.div({ 'class': 'build-confirm overlay from-top' }, function () {
      SaveConfirmView.h3('You have unsaved changes');
      SaveConfirmView.div({ 'class': 'btn-container pull-right' }, function () {
        SaveConfirmView.button({ 'class': 'btn btn-success', outlet: 'saveBuildButton', title: 'Save and Build', click: 'saveAndConfirm' }, 'Save and build');
        SaveConfirmView.button({ 'class': 'btn btn-info', title: 'Build Without Saving', click: 'confirmWithoutSave' }, 'Build Without Saving');
      });
      SaveConfirmView.div({ 'class': 'btn-container pull-left' }, function () {
        SaveConfirmView.button({ 'class': 'btn btn-info', title: 'Cancel', click: 'cancel' }, 'Cancel');
      });
    });
  };

  SaveConfirmView.prototype.destroy = function () {
    this.confirmcb = undefined;
    this.cancelcb = undefined;
    if (this.panel) {
      this.panel.destroy();
      this.panel = null;
    }
  };

  SaveConfirmView.prototype.show = function (confirmcb, cancelcb) {
    this.confirmcb = confirmcb;
    this.cancelcb = cancelcb;

    this.panel = atom.workspace.addTopPanel({
      item: this
    });
    this.saveBuildButton.focus();
  };

  SaveConfirmView.prototype.cancel = function () {
    this.destroy();
    if (this.cancelcb) {
      this.cancelcb();
    }
  };

  SaveConfirmView.prototype.saveAndConfirm = function () {
    if (this.confirmcb) {
      this.confirmcb(true);
    }
    this.destroy();
  };

  SaveConfirmView.prototype.confirmWithoutSave = function () {
    if (this.confirmcb) {
      this.confirmcb(false);
    }
    this.destroy();
  };

  return SaveConfirmView;
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2NoYW1wLy5hdG9tL3BhY2thZ2VzL2J1aWxkL2xpYi9zYXZlLWNvbmZpcm0tdmlldy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLENBQUM7QUFDWixZQUFZLENBQUM7O0FBRWIsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ2hELElBQUksZUFBZSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDOztBQUVuRCxNQUFNLENBQUMsT0FBTyxHQUFHLENBQUMsWUFBVztBQUMzQixXQUFTLGVBQWUsR0FBRztBQUN6QixRQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztHQUM3Qjs7QUFFRCxpQkFBZSxXQUFRLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxDQUFDOztBQUUvQyxpQkFBZSxDQUFDLE9BQU8sR0FBRyxZQUFXO0FBQ25DLG1CQUFlLENBQUMsR0FBRyxDQUFDLEVBQUUsU0FBTyxnQ0FBZ0MsRUFBRSxFQUFFLFlBQVc7QUFDMUUscUJBQWUsQ0FBQyxFQUFFLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUMvQyxxQkFBZSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFNBQU8sMEJBQTBCLEVBQUUsRUFBRSxZQUFXO0FBQ3BFLHVCQUFlLENBQUMsTUFBTSxDQUFDLEVBQUUsU0FBTyxpQkFBaUIsRUFBRSxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxnQkFBZ0IsRUFBRSxFQUFFLGdCQUFnQixDQUFDLENBQUM7QUFDcEosdUJBQWUsQ0FBQyxNQUFNLENBQUMsRUFBRSxTQUFPLGNBQWMsRUFBRSxLQUFLLEVBQUUsc0JBQXNCLEVBQUUsS0FBSyxFQUFFLG9CQUFvQixFQUFFLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztPQUN2SSxDQUFDLENBQUM7QUFDSCxxQkFBZSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFNBQU8seUJBQXlCLEVBQUUsRUFBRSxZQUFXO0FBQ25FLHVCQUFlLENBQUMsTUFBTSxDQUFDLEVBQUUsU0FBTyxjQUFjLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7T0FDL0YsQ0FBQyxDQUFDO0tBQ0osQ0FBQyxDQUFDO0dBQ0osQ0FBQzs7QUFFRixpQkFBZSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsWUFBVztBQUM3QyxRQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztBQUMzQixRQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQztBQUMxQixRQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7QUFDZCxVQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ3JCLFVBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0tBQ25CO0dBQ0YsQ0FBQzs7QUFFRixpQkFBZSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsVUFBUyxTQUFTLEVBQUUsUUFBUSxFQUFFO0FBQzdELFFBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBQzNCLFFBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDOztBQUV6QixRQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDO0FBQ3RDLFVBQUksRUFBRSxJQUFJO0tBQ1gsQ0FBQyxDQUFDO0FBQ0gsUUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztHQUM5QixDQUFDOztBQUVGLGlCQUFlLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxZQUFXO0FBQzVDLFFBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUNmLFFBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtBQUNqQixVQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7S0FDakI7R0FDRixDQUFDOztBQUVGLGlCQUFlLENBQUMsU0FBUyxDQUFDLGNBQWMsR0FBRyxZQUFXO0FBQ3BELFFBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtBQUNsQixVQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3RCO0FBQ0QsUUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0dBQ2hCLENBQUM7O0FBRUYsaUJBQWUsQ0FBQyxTQUFTLENBQUMsa0JBQWtCLEdBQUksWUFBVztBQUN6RCxRQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7QUFDbEIsVUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN2QjtBQUNELFFBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztHQUNoQixDQUFDOztBQUVGLFNBQU8sZUFBZSxDQUFDO0NBQ3hCLENBQUEsRUFBRyxDQUFDIiwiZmlsZSI6Ii9ob21lL2NoYW1wLy5hdG9tL3BhY2thZ2VzL2J1aWxkL2xpYi9zYXZlLWNvbmZpcm0tdmlldy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVmlldyA9IHJlcXVpcmUoJ2F0b20tc3BhY2UtcGVuLXZpZXdzJykuVmlldztcbnZhciBjc2NvbXBhdGFiaWxpdHkgPSByZXF1aXJlKCcuL2NzY29tcGF0YWJpbGl0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gU2F2ZUNvbmZpcm1WaWV3KCkge1xuICAgIFZpZXcuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIGNzY29tcGF0YWJpbGl0eS5leHRlbmRzKFNhdmVDb25maXJtVmlldywgVmlldyk7XG5cbiAgU2F2ZUNvbmZpcm1WaWV3LmNvbnRlbnQgPSBmdW5jdGlvbigpIHtcbiAgICBTYXZlQ29uZmlybVZpZXcuZGl2KHsgY2xhc3M6ICdidWlsZC1jb25maXJtIG92ZXJsYXkgZnJvbS10b3AnIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgU2F2ZUNvbmZpcm1WaWV3LmgzKCdZb3UgaGF2ZSB1bnNhdmVkIGNoYW5nZXMnKTtcbiAgICAgIFNhdmVDb25maXJtVmlldy5kaXYoeyBjbGFzczogJ2J0bi1jb250YWluZXIgcHVsbC1yaWdodCcgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgIFNhdmVDb25maXJtVmlldy5idXR0b24oe8KgY2xhc3M6ICdidG4gYnRuLXN1Y2Nlc3MnLCBvdXRsZXQ6ICdzYXZlQnVpbGRCdXR0b24nLCB0aXRsZTogJ1NhdmUgYW5kIEJ1aWxkJywgY2xpY2s6ICdzYXZlQW5kQ29uZmlybScgfSwgJ1NhdmUgYW5kIGJ1aWxkJyk7XG4gICAgICAgIFNhdmVDb25maXJtVmlldy5idXR0b24oe8KgY2xhc3M6ICdidG4gYnRuLWluZm8nLCB0aXRsZTogJ0J1aWxkIFdpdGhvdXQgU2F2aW5nJywgY2xpY2s6ICdjb25maXJtV2l0aG91dFNhdmUnIH0sICdCdWlsZCBXaXRob3V0IFNhdmluZycpO1xuICAgICAgfSk7XG4gICAgICBTYXZlQ29uZmlybVZpZXcuZGl2KHsgY2xhc3M6ICdidG4tY29udGFpbmVyIHB1bGwtbGVmdCcgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgIFNhdmVDb25maXJtVmlldy5idXR0b24oe8KgY2xhc3M6ICdidG4gYnRuLWluZm8nLCB0aXRsZTogJ0NhbmNlbCcsIGNsaWNrOiAnY2FuY2VsJyB9LCAnQ2FuY2VsJyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBTYXZlQ29uZmlybVZpZXcucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmNvbmZpcm1jYiA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLmNhbmNlbGNiID0gdW5kZWZpbmVkO1xuICAgIGlmICh0aGlzLnBhbmVsKSB7XG4gICAgICB0aGlzLnBhbmVsLmRlc3Ryb3koKTtcbiAgICAgIHRoaXMucGFuZWwgPSBudWxsO1xuICAgIH1cbiAgfTtcblxuICBTYXZlQ29uZmlybVZpZXcucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbihjb25maXJtY2IsIGNhbmNlbGNiKSB7XG4gICAgdGhpcy5jb25maXJtY2IgPSBjb25maXJtY2I7XG4gICAgdGhpcy5jYW5jZWxjYiA9IGNhbmNlbGNiO1xuXG4gICAgdGhpcy5wYW5lbCA9IGF0b20ud29ya3NwYWNlLmFkZFRvcFBhbmVsKHtcbiAgICAgIGl0ZW06IHRoaXNcbiAgICB9KTtcbiAgICB0aGlzLnNhdmVCdWlsZEJ1dHRvbi5mb2N1cygpO1xuICB9O1xuXG4gIFNhdmVDb25maXJtVmlldy5wcm90b3R5cGUuY2FuY2VsID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5kZXN0cm95KCk7XG4gICAgaWYgKHRoaXMuY2FuY2VsY2IpIHtcbiAgICAgIHRoaXMuY2FuY2VsY2IoKTtcbiAgICB9XG4gIH07XG5cbiAgU2F2ZUNvbmZpcm1WaWV3LnByb3RvdHlwZS5zYXZlQW5kQ29uZmlybSA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLmNvbmZpcm1jYikge1xuICAgICAgdGhpcy5jb25maXJtY2IodHJ1ZSk7XG4gICAgfVxuICAgIHRoaXMuZGVzdHJveSgpO1xuICB9O1xuXG4gIFNhdmVDb25maXJtVmlldy5wcm90b3R5cGUuY29uZmlybVdpdGhvdXRTYXZlID0gIGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLmNvbmZpcm1jYikge1xuICAgICAgdGhpcy5jb25maXJtY2IoZmFsc2UpO1xuICAgIH1cbiAgICB0aGlzLmRlc3Ryb3koKTtcbiAgfTtcblxuICByZXR1cm4gU2F2ZUNvbmZpcm1WaWV3O1xufSkoKTtcbiJdfQ==
//# sourceURL=/home/champ/.atom/packages/build/lib/save-confirm-view.js
