{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":18,"width":1366,"height":750,"maximized":true},"grammars":{"grammarOverridesByPath":{"/home/champ/Git/cpen331/os161/kern/arch/sys161/main/start.S":"source.mips"}},"project":{"deserializer":"Project","paths":["/home/champ/Git/cpen331/os161","/home/champ/Git/crows"],"buffers":[{"id":"f63bf30413194ca7eb1856128458bb44","text":"/*\n * Copyright (c) 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009\n *\tThe President and Fellows of Harvard College.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#include <types.h>\n#include <kern/errno.h>\n#include <lib.h>\n#include <spl.h>\n#include <spinlock.h>\n#include <proc.h>\n#include <current.h>\n#include <mips/tlb.h>\n#include <addrspace.h>\n#include <vm.h>\n\n// struct addrspace *\n// proc_getas(void)\n// {\n// \treturn curproc->p_addrspace;\n// }\n\nstruct addrspace *\nas_create(void)\n{\n\tstruct addrspace *as;\n\n\tas = kmalloc(sizeof(struct addrspace));\n\tif (as == NULL) {\n\t\treturn NULL;\n\t}\n\n\tas->as_vbase1 = 0;\n\tas->as_pbase1 = 0;\n\tas->as_npages1 = 0;\n\tas->as_vbase2 = 0;\n\tas->as_pbase2 = 0;\n\tas->as_npages2 = 0;\n\tas->as_stackpbase = 0;\n\n\treturn as;\n}\n\nint\nas_copy(struct addrspace *old, struct addrspace **ret)\n{\n\tstruct addrspace *newas;\n\n\tnewas = as_create();\n\tif (newas==NULL) {\n\t\treturn ENOMEM;\n\t}\n\n\t/*\n\t * Write this.\n\t */\n\n\t(void)old;\n\n\t*ret = newas;\n\treturn 0;\n}\n\nvoid\nas_destroy(struct addrspace *as)\n{\n\t/*\n\t * Clean up as needed.\n\t */\n\n\tkfree(as);\n}\n\nvoid\nas_activate(void)\n{\n\tint i, spl;\n\tstruct addrspace *as;\n\n\tas = proc_getas();\n\tif (as == NULL) {\n\t\treturn;\n\t}\n\n\t/* Disable interrupts on this CPU while frobbing the TLB. */\n\tspl = splhigh();\n\n\tfor (i=0; i<NUM_TLB; i++) {\n\t\ttlb_write(TLBHI_INVALID(i), TLBLO_INVALID(), i);\n\t}\n\n\tsplx(spl);\n}\n\nvoid\nas_deactivate(void)\n{\n\t/*\n\t * Write this. For many designs it won't need to actually do\n\t * anything. See proc.c for an explanation of why it (might)\n\t * be needed.\n\t */\n}\n\nstatic\nvoid\nas_zero_region(paddr_t paddr, unsigned npages)\n{\n\tbzero((void *)PADDR_TO_KVADDR(paddr), npages * PAGE_SIZE);\n}\n\n/*\n * Set up a segment at virtual address VADDR of size MEMSIZE. The\n * segment in memory extends from VADDR up to (but not including)\n * VADDR+MEMSIZE.\n *\n * The READABLE, WRITEABLE, and EXECUTABLE flags are set if read,\n * write, or execute permission should be set on the segment. At the\n * moment, these are ignored. When you write the VM system, you may\n * want to implement them.\n */\nint\nas_define_region(struct addrspace *as, vaddr_t vaddr, size_t sz,\n\t\t int readable, int writeable, int executable)\n{\n\tsize_t npages;\n\n\t/* Align the region. First, the base... */\n\tsz += vaddr & ~(vaddr_t)PAGE_FRAME;\n\tvaddr &= PAGE_FRAME;\n\n\t/* ...and now the length. */\n\tsz = (sz + PAGE_SIZE - 1) & PAGE_FRAME;\n\n\tnpages = sz / PAGE_SIZE;\n\n\t/* We don't use these - all pages are read-write */\n\t(void)readable;\n\t(void)writeable;\n\t(void)executable;\n\n\tif (as->as_vbase1 == 0) {\n\t\tas->as_vbase1 = vaddr;\n\t\tas->as_npages1 = npages;\n\t\treturn 0;\n\t}\n\n\tif (as->as_vbase2 == 0) {\n\t\tas->as_vbase2 = vaddr;\n\t\tas->as_npages2 = npages;\n\t\treturn 0;\n\t}\n\n\t/*\n\t * Support for more than two regions is not available.\n\t */\n\tkprintf(\"genericvm: Warning: too many regions\\n\");\n\treturn ENOSYS;\n}\n\nint\nas_prepare_load(struct addrspace *as)\n{\n\tKASSERT(as->as_pbase1 == 0);\n\tKASSERT(as->as_pbase2 == 0);\n\tKASSERT(as->as_stackpbase == 0);\n\n\tas->as_pbase1 = getppages(as->as_npages1);\n\tif (as->as_pbase1 == 0) {\n\t\treturn ENOMEM;\n\t}\n\n\tas->as_pbase2 = getppages(as->as_npages2);\n\tif (as->as_pbase2 == 0) {\n\t\treturn ENOMEM;\n\t}\n\n\tas->as_stackpbase = getppages(VM_STACKPAGES);\n\tif (as->as_stackpbase == 0) {\n\t\treturn ENOMEM;\n\t}\n\n\tas_zero_region(as->as_pbase1, as->as_npages1);\n\tas_zero_region(as->as_pbase2, as->as_npages2);\n\tas_zero_region(as->as_stackpbase, VM_STACKPAGES);\n\n\treturn 0;\n}\n\nint\nas_complete_load(struct addrspace *as)\n{\n\t/*\n\t * Write this.\n\t */\n\n\t(void)as;\n\treturn 0;\n}\n\nint\nas_define_stack(struct addrspace *as, vaddr_t *stackptr)\n{\n\tKASSERT(as->as_stackpbase != 0);\n\n\t*stackptr = USERSTACK;\n\treturn 0;\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"2":{"range":{"start":{"row":232,"column":0},"end":{"row":232,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"3":{"range":{"start":{"row":232,"column":0},"end":{"row":232,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"574":{"range":{"start":{"row":42,"column":0},"end":{"row":44,"column":3}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"832":{"range":{"start":{"row":32,"column":0},"end":{"row":37,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"833":{"range":{"start":{"row":40,"column":0},"end":{"row":45,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"834":{"range":{"start":{"row":56,"column":0},"end":{"row":63,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"835":{"range":{"start":{"row":100,"column":0},"end":{"row":101,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"836":{"range":{"start":{"row":103,"column":0},"end":{"row":104,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"837":{"range":{"start":{"row":104,"column":0},"end":{"row":104,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"838":{"range":{"start":{"row":108,"column":0},"end":{"row":116,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"839":{"range":{"start":{"row":128,"column":0},"end":{"row":135,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"840":{"range":{"start":{"row":149,"column":0},"end":{"row":150,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"841":{"range":{"start":{"row":151,"column":0},"end":{"row":161,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"842":{"range":{"start":{"row":164,"column":0},"end":{"row":182,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"843":{"range":{"start":{"row":187,"column":0},"end":{"row":209,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"844":{"range":{"start":{"row":209,"column":0},"end":{"row":209,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"845":{"range":{"start":{"row":227,"column":0},"end":{"row":228,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"846":{"range":{"start":{"row":228,"column":0},"end":{"row":228,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"847":{"range":{"start":{"row":229,"column":0},"end":{"row":229,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"848":{"range":{"start":{"row":231,"column":0},"end":{"row":231,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":178,"column":17},"end":{"row":178,"column":17}},"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2},"8":{"id":"8","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":9,"history":{"version":3,"nextCheckpointId":172,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[258,0],[402,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[258,0],[258,0]],"newRange":[[258,0],[258,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[259,0],[259,0]],"newRange":[[259,0],[259,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[260,0],[260,0]],"newRange":[[260,0],[260,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[261,0],[261,0]],"newRange":[[261,0],[261,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[262,0],[262,0]],"newRange":[[262,0],[262,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[263,0],[263,0]],"newRange":[[263,0],[263,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[264,0],[264,0]],"newRange":[[264,0],[264,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[265,0],[265,0]],"newRange":[[265,0],[265,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[266,0],[266,0]],"newRange":[[266,0],[266,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[267,0],[267,0]],"newRange":[[267,0],[267,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[268,0],[268,0]],"newRange":[[268,0],[268,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[269,0],[269,0]],"newRange":[[269,0],[269,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[270,0],[270,0]],"newRange":[[270,0],[270,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[271,0],[271,0]],"newRange":[[271,0],[271,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[272,0],[272,0]],"newRange":[[272,0],[272,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[273,0],[273,0]],"newRange":[[273,0],[273,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[274,0],[274,0]],"newRange":[[274,0],[274,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[275,0],[275,0]],"newRange":[[275,0],[275,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[276,0],[276,0]],"newRange":[[276,0],[276,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[277,0],[277,0]],"newRange":[[277,0],[277,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[278,0],[278,0]],"newRange":[[278,0],[278,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[279,0],[279,0]],"newRange":[[279,0],[279,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[280,0],[280,0]],"newRange":[[280,0],[280,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[281,0],[281,0]],"newRange":[[281,0],[281,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[282,0],[282,0]],"newRange":[[282,0],[282,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[283,0],[283,0]],"newRange":[[283,0],[283,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[284,0],[284,0]],"newRange":[[284,0],[284,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[285,0],[285,0]],"newRange":[[285,0],[285,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[286,0],[286,0]],"newRange":[[286,0],[286,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[287,0],[287,0]],"newRange":[[287,0],[287,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[288,0],[288,0]],"newRange":[[288,0],[288,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[289,0],[289,0]],"newRange":[[289,0],[289,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[290,0],[290,0]],"newRange":[[290,0],[290,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[291,0],[291,0]],"newRange":[[291,0],[291,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[292,0],[292,0]],"newRange":[[292,0],[292,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[293,0],[293,0]],"newRange":[[293,0],[293,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[294,0],[294,0]],"newRange":[[294,0],[294,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[295,0],[295,0]],"newRange":[[295,0],[295,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[296,0],[296,0]],"newRange":[[296,0],[296,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[297,0],[297,0]],"newRange":[[297,0],[297,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[298,0],[298,0]],"newRange":[[298,0],[298,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[299,0],[299,0]],"newRange":[[299,0],[299,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[300,0],[300,0]],"newRange":[[300,0],[300,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[301,0],[301,0]],"newRange":[[301,0],[301,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[302,0],[302,0]],"newRange":[[302,0],[302,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[303,0],[303,0]],"newRange":[[303,0],[303,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[304,0],[304,0]],"newRange":[[304,0],[304,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[305,0],[305,0]],"newRange":[[305,0],[305,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[306,0],[306,0]],"newRange":[[306,0],[306,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[307,0],[307,0]],"newRange":[[307,0],[307,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[308,0],[308,0]],"newRange":[[308,0],[308,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[309,0],[309,0]],"newRange":[[309,0],[309,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[310,0],[310,0]],"newRange":[[310,0],[310,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[311,0],[311,0]],"newRange":[[311,0],[311,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[312,0],[312,0]],"newRange":[[312,0],[312,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[313,0],[313,0]],"newRange":[[313,0],[313,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[314,0],[314,0]],"newRange":[[314,0],[314,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[315,0],[315,0]],"newRange":[[315,0],[315,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[316,0],[316,0]],"newRange":[[316,0],[316,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[317,0],[317,0]],"newRange":[[317,0],[317,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[318,0],[318,0]],"newRange":[[318,0],[318,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[319,0],[319,0]],"newRange":[[319,0],[319,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[320,0],[320,0]],"newRange":[[320,0],[320,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[321,0],[321,0]],"newRange":[[321,0],[321,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[322,0],[322,0]],"newRange":[[322,0],[322,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[323,0],[323,0]],"newRange":[[323,0],[323,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[324,0],[324,0]],"newRange":[[324,0],[324,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[325,0],[325,0]],"newRange":[[325,0],[325,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[326,0],[326,0]],"newRange":[[326,0],[326,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[327,0],[327,0]],"newRange":[[327,0],[327,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[328,0],[328,0]],"newRange":[[328,0],[328,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[329,0],[329,0]],"newRange":[[329,0],[329,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[330,0],[330,0]],"newRange":[[330,0],[330,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[331,0],[331,0]],"newRange":[[331,0],[331,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[332,0],[332,0]],"newRange":[[332,0],[332,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[333,0],[333,0]],"newRange":[[333,0],[333,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[334,0],[334,0]],"newRange":[[334,0],[334,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[335,0],[335,0]],"newRange":[[335,0],[335,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[336,0],[336,0]],"newRange":[[336,0],[336,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[337,0],[337,0]],"newRange":[[337,0],[337,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[338,0],[338,0]],"newRange":[[338,0],[338,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[339,0],[339,0]],"newRange":[[339,0],[339,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[340,0],[340,0]],"newRange":[[340,0],[340,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[341,0],[341,0]],"newRange":[[341,0],[341,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[342,0],[342,0]],"newRange":[[342,0],[342,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[343,0],[343,0]],"newRange":[[343,0],[343,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[344,0],[344,0]],"newRange":[[344,0],[344,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[345,0],[345,0]],"newRange":[[345,0],[345,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[346,0],[346,0]],"newRange":[[346,0],[346,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[347,0],[347,0]],"newRange":[[347,0],[347,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[348,0],[348,0]],"newRange":[[348,0],[348,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[349,0],[349,0]],"newRange":[[349,0],[349,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[350,0],[350,0]],"newRange":[[350,0],[350,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[351,0],[351,0]],"newRange":[[351,0],[351,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[352,0],[352,0]],"newRange":[[352,0],[352,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[353,0],[353,0]],"newRange":[[353,0],[353,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[354,0],[354,0]],"newRange":[[354,0],[354,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[355,0],[355,0]],"newRange":[[355,0],[355,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[356,0],[356,0]],"newRange":[[356,0],[356,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[357,0],[357,0]],"newRange":[[357,0],[357,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[358,0],[358,0]],"newRange":[[358,0],[358,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[359,0],[359,0]],"newRange":[[359,0],[359,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[360,0],[360,0]],"newRange":[[360,0],[360,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[361,0],[361,0]],"newRange":[[361,0],[361,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[362,0],[362,0]],"newRange":[[362,0],[362,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[363,0],[363,0]],"newRange":[[363,0],[363,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[364,0],[364,0]],"newRange":[[364,0],[364,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[365,0],[365,0]],"newRange":[[365,0],[365,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[366,0],[366,0]],"newRange":[[366,0],[366,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[367,0],[367,0]],"newRange":[[367,0],[367,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[368,0],[368,0]],"newRange":[[368,0],[368,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[369,0],[369,0]],"newRange":[[369,0],[369,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[370,0],[370,0]],"newRange":[[370,0],[370,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[371,0],[371,0]],"newRange":[[371,0],[371,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[372,0],[372,0]],"newRange":[[372,0],[372,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[373,0],[373,0]],"newRange":[[373,0],[373,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[374,0],[374,0]],"newRange":[[374,0],[374,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[375,0],[375,0]],"newRange":[[375,0],[375,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[376,0],[376,0]],"newRange":[[376,0],[376,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[377,0],[377,0]],"newRange":[[377,0],[377,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[378,0],[378,0]],"newRange":[[378,0],[378,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[379,0],[379,0]],"newRange":[[379,0],[379,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[380,0],[380,0]],"newRange":[[380,0],[380,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[381,0],[381,0]],"newRange":[[381,0],[381,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[382,0],[382,0]],"newRange":[[382,0],[382,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[383,0],[383,0]],"newRange":[[383,0],[383,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[384,0],[384,0]],"newRange":[[384,0],[384,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[385,0],[385,0]],"newRange":[[385,0],[385,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[386,0],[386,0]],"newRange":[[386,0],[386,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[387,0],[387,0]],"newRange":[[387,0],[387,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[388,0],[388,0]],"newRange":[[388,0],[388,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[389,0],[389,0]],"newRange":[[389,0],[389,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[390,0],[390,0]],"newRange":[[390,0],[390,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[391,0],[391,0]],"newRange":[[391,0],[391,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[392,0],[392,0]],"newRange":[[392,0],[392,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[393,0],[393,0]],"newRange":[[393,0],[393,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[394,0],[394,0]],"newRange":[[394,0],[394,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[395,0],[395,0]],"newRange":[[395,0],[395,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[396,0],[396,0]],"newRange":[[396,0],[396,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[397,0],[397,0]],"newRange":[[397,0],[397,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[398,0],[398,0]],"newRange":[[398,0],[398,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[399,0],[399,0]],"newRange":[[399,0],[399,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[400,0],[400,0]],"newRange":[[400,0],[400,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[401,0],[401,0]],"newRange":[[401,0],[401,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[402,0],[402,0]],"newRange":[[402,0],[402,3]],"oldText":"","newText":"// "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[258,0],[402,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[349,33],[349,33]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[398,2],[398,3]],"newRange":[[398,2],[398,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[385,2],[385,3]],"newRange":[[385,2],[385,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[382,2],[382,3]],"newRange":[[382,2],[382,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[379,2],[379,3]],"newRange":[[379,2],[379,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[366,2],[366,3]],"newRange":[[366,2],[366,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[359,2],[359,3]],"newRange":[[359,2],[359,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[345,2],[345,3]],"newRange":[[345,2],[345,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[336,2],[336,3]],"newRange":[[336,2],[336,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[327,2],[327,3]],"newRange":[[327,2],[327,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[316,2],[316,3]],"newRange":[[316,2],[316,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[314,2],[314,3]],"newRange":[[314,2],[314,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[312,2],[312,3]],"newRange":[[312,2],[312,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[301,2],[301,3]],"newRange":[[301,2],[301,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[294,2],[294,3]],"newRange":[[294,2],[294,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[282,2],[282,3]],"newRange":[[282,2],[282,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[274,2],[274,3]],"newRange":[[274,2],[274,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[267,2],[267,3]],"newRange":[[267,2],[267,2]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[261,2],[261,3]],"newRange":[[261,2],[261,2]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[349,33],[349,33]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,0],[64,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,0],[64,1]],"newRange":[[40,0],[40,0]],"oldText":"/*\n * Note! If OPT_DUMBVM is set, as is the case until you start the VM\n * assignment, this file is not compiled or linked or in any way\n * used. The cheesy hack versions in dumbvm.c are used instead.\n */\n\n#define VM_STACKPAGES    18\n\n/*\n * Wrap ram_stealmem in a spinlock.\n */\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n\tpaddr_t addr;\n\tspinlock_acquire(&stealmem_lock);\n\n\taddr = ram_stealmem(npages);\n\n\tspinlock_release(&stealmem_lock);\n\treturn addr;\n}","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,0],[40,0]],"newRange":[[39,0],[39,0]],"oldText":"\n","newText":""}},{"type":"change","content":{"oldRange":[[38,15],[39,0]],"newRange":[[38,15],[38,15]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[38,15],[38,15]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,0],[39,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[40,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[41,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[52,0]],"oldText":"","newText":"static\npaddr_t\ngetppages(unsigned long npages)\n{\n\tpaddr_t addr;\n\tspinlock_acquire(&stealmem_lock);\n\n\taddr = ram_stealmem(npages);\n\n\tspinlock_release(&stealmem_lock);\n\treturn addr;\n}\n"}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[52,0],[52,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,0],[39,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[40,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[41,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[43,60]],"oldText":"","newText":"/*\n * Wrap ram_stealmem in a spinlock.\n */\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;"}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,60],[43,60]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,0],[56,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,0],[56,1]],"newRange":[[40,0],[40,0]],"oldText":"/*\n * Wrap ram_stealmem in a spinlock.\n */\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n\tpaddr_t addr;\n\tspinlock_acquire(&stealmem_lock);\n\n\taddr = ram_stealmem(npages);\n\n\tspinlock_release(&stealmem_lock);\n\treturn addr;\n}","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,0],[40,0]],"newRange":[[39,0],[39,0]],"oldText":"\n","newText":""}},{"type":"change","content":{"oldRange":[[38,15],[39,0]],"newRange":[[38,15],[38,15]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[38,15],[38,15]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,0],[39,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[38,15],[39,0]],"newRange":[[38,15],[38,15]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[38,15],[38,15]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,0],[39,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[40,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[41,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,1]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[40,1],[40,1]],"newRange":[[40,1],[40,2]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[40,2],[40,2]],"newRange":[[40,2],[40,3]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[40,3],[40,3]],"newRange":[[40,3],[40,4]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[40,4],[40,4]],"newRange":[[40,4],[40,5]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[40,5],[40,5]],"newRange":[[40,5],[40,6]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[40,6],[40,6]],"newRange":[[40,6],[40,7]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,7],[40,7]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,7],[40,7]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,7],[40,7]],"newRange":[[40,7],[40,8]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[40,8],[40,8]],"newRange":[[40,8],[40,9]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[40,9],[40,9]],"newRange":[[40,9],[40,10]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[40,10],[40,10]],"newRange":[[40,10],[40,11]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[40,11],[40,11]],"newRange":[[40,11],[40,12]],"oldText":"","newText":"t"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,12],[40,12]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,12],[40,12]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,11],[40,12]],"newRange":[[40,11],[40,11]],"oldText":"t","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,11],[40,11]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,11],[40,11]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,11],[40,11]],"newRange":[[40,11],[40,12]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[40,12],[40,12]],"newRange":[[40,12],[40,13]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[40,13],[40,13]],"newRange":[[40,13],[40,14]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[40,14],[40,14]],"newRange":[[40,14],[40,15]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[40,15],[40,15]],"newRange":[[40,15],[40,16]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,16],[40,16]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,16],[40,16]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,16],[40,16]],"newRange":[[40,16],[40,17]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,17],[40,17]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,17],[40,17]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,17],[40,17]],"newRange":[[40,17],[40,18]],"oldText":"","newText":"*"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,18],[40,18]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,18],[40,18]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,18],[40,18]],"newRange":[[40,18],[41,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,1]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[41,1],[41,1]],"newRange":[[41,1],[41,2]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[41,2],[41,2]],"newRange":[[41,2],[41,3]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[41,3],[41,3]],"newRange":[[41,3],[41,4]],"oldText":"","newText":"c"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,4],[41,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,4],[41,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,4],[41,4]],"newRange":[[41,4],[41,5]],"oldText":"","newText":"_"}},{"type":"change","content":{"oldRange":[[41,5],[41,5]],"newRange":[[41,5],[41,6]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[41,6],[41,6]],"newRange":[[41,6],[41,7]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[41,7],[41,7]],"newRange":[[41,7],[41,8]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[41,8],[41,8]],"newRange":[[41,8],[41,9]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[41,9],[41,9]],"newRange":[[41,9],[41,10]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,10],[41,10]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,10],[41,10]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,10],[41,10]],"newRange":[[41,10],[41,12]],"oldText":"","newText":"()"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,12],[41,12]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,11],[41,11]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,11],[41,11]],"newRange":[[41,11],[41,12]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[41,12],[41,12]],"newRange":[[41,12],[41,13]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[41,13],[41,13]],"newRange":[[41,13],[41,14]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[41,14],[41,14]],"newRange":[[41,14],[41,15]],"oldText":"","newText":"d"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,15],[41,15]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,16],[41,16]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,16],[41,16]],"newRange":[[41,16],[42,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[42,0],[42,0]],"newRange":[[42,0],[42,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[42,0],[42,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[42,0],[42,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[42,0],[42,0]],"newRange":[[42,0],[42,2]],"oldText":"","newText":"{}"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[42,2],[42,2]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[42,1],[42,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[42,1],[42,1]],"newRange":[[42,1],[44,0]],"oldText":"","newText":"\n\n"}},{"type":"change","content":{"oldRange":[[43,0],[43,0]],"newRange":[[43,0],[43,1]],"oldText":"","newText":"\t"}},{"type":"change","content":{"oldRange":[[44,0],[44,0]],"newRange":[[44,0],[44,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,1],[43,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,1],[43,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,1],[43,1]],"newRange":[[43,1],[43,2]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[43,2],[43,2]],"newRange":[[43,2],[43,3]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[43,3],[43,3]],"newRange":[[43,3],[43,4]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[43,4],[43,4]],"newRange":[[43,4],[43,5]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[43,5],[43,5]],"newRange":[[43,5],[43,6]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[43,6],[43,6]],"newRange":[[43,6],[43,7]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[43,7],[43,7]],"newRange":[[43,7],[43,8]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,8],[43,8]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,8],[43,8]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,8],[43,8]],"newRange":[[43,8],[43,9]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[43,9],[43,9]],"newRange":[[43,9],[43,10]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[43,10],[43,10]],"newRange":[[43,10],[43,11]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[43,11],[43,11]],"newRange":[[43,11],[43,12]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[43,12],[43,12]],"newRange":[[43,12],[43,13]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[43,13],[43,13]],"newRange":[[43,13],[43,14]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[43,14],[43,14]],"newRange":[[43,14],[43,15]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[43,15],[43,15]],"newRange":[[43,15],[43,16]],"oldText":"","newText":"0"}},{"type":"change","content":{"oldRange":[[43,16],[43,16]],"newRange":[[43,16],[43,17]],"oldText":"","newText":"-"}},{"type":"change","content":{"oldRange":[[43,17],[43,17]],"newRange":[[43,17],[43,18]],"oldText":"","newText":">"}},{"type":"change","content":{"oldRange":[[43,17],[43,18]],"newRange":[[43,17],[43,17]],"oldText":">","newText":""}},{"type":"change","content":{"oldRange":[[43,16],[43,17]],"newRange":[[43,16],[43,16]],"oldText":"-","newText":""}},{"type":"change","content":{"oldRange":[[43,15],[43,16]],"newRange":[[43,15],[43,15]],"oldText":"0","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,15],[43,15]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,15],[43,15]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,15],[43,15]],"newRange":[[43,15],[43,16]],"oldText":"","newText":"-"}},{"type":"change","content":{"oldRange":[[43,16],[43,16]],"newRange":[[43,16],[43,17]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,17],[43,17]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,17],[43,17]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,17],[43,17]],"newRange":[[43,17],[43,18]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[43,18],[43,18]],"newRange":[[43,18],[43,19]],"oldText":"","newText":"_"}},{"type":"change","content":{"oldRange":[[43,19],[43,19]],"newRange":[[43,19],[43,20]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[43,20],[43,20]],"newRange":[[43,20],[43,21]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[43,21],[43,21]],"newRange":[[43,21],[43,22]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[43,22],[43,22]],"newRange":[[43,22],[43,23]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[43,23],[43,23]],"newRange":[[43,23],[43,24]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[43,24],[43,24]],"newRange":[[43,24],[43,25]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,25],[43,25]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,25],[43,25]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,24],[43,25]],"newRange":[[43,24],[43,24]],"oldText":"s","newText":""}},{"type":"change","content":{"oldRange":[[43,23],[43,24]],"newRange":[[43,23],[43,23]],"oldText":"p","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,23],[43,23]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,23],[43,23]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,23],[43,23]],"newRange":[[43,23],[43,24]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[43,24],[43,24]],"newRange":[[43,24],[43,25]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[43,25],[43,25]],"newRange":[[43,25],[43,26]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[43,26],[43,26]],"newRange":[[43,26],[43,27]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[43,27],[43,27]],"newRange":[[43,27],[43,28]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[43,28],[43,28]],"newRange":[[43,28],[43,29]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,29],[43,29]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,1],[44,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[42,0],[42,0]],"newRange":[[42,0],[42,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[43,0],[43,0]],"newRange":[[43,0],[43,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[44,0],[44,0]],"newRange":[[44,0],[44,3]],"oldText":"","newText":"// "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,4],[44,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[97,0],[100,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[97,0],[97,0]],"newRange":[[97,0],[97,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[98,0],[98,0]],"newRange":[[98,0],[98,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[99,0],[99,0]],"newRange":[[99,0],[99,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[100,0],[100,0]],"newRange":[[100,0],[100,3]],"oldText":"","newText":"// "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[97,0],[100,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[96,0],[100,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[96,0],[100,4]],"newRange":[[96,0],[96,0]],"oldText":"\n// struct addrspace * curproc_getas()\n// {\n// \treturn NULL;\n// }","newText":""}},{"type":"change","content":{"oldRange":[[95,1],[96,0]],"newRange":[[95,1],[95,1]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[95,1],[95,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[232,0],[377,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[232,0],[377,4]],"newRange":[[232,0],[232,0]],"oldText":"\n// /*\n//  * GENERIC VM STUFF\n//  */\n//\n// void\n// vm_bootstrap(void)\n// {\n// \t// TODO\n// }\n//\n// void\n// vm_tlbshootdown_all(void)\n// {\n// \t// TODO\n// \tpanic(\"dumbvm tried to do tlb shootdown?!\\n\");\n// }\n//\n// void\n// vm_tlbshootdown(const struct tlbshootdown *ts)\n// {\n// \t// TODO\n// \t(void)ts;\n// \tpanic(\"dumbvm tried to do tlb shootdown?!\\n\");\n// }\n//\n// vaddr_t\n// alloc_kpages(unsigned npages)\n// {\n// \t// TODO\n// \tpaddr_t pa;\n// \tpa = getppages(npages);\n// \tif (pa==0) {\n// \t\treturn 0;\n// \t}\n// \treturn PADDR_TO_KVADDR(pa);\n// }\n//\n// void\n// free_kpages(vaddr_t addr)\n// {\n// \t// TODO\n// \t(void)addr;\n// }\n//\n// int\n// vm_fault(int faulttype, vaddr_t faultaddress)\n// {\n// \t// TODO\n// \tvaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n// \tpaddr_t paddr;\n// \tint i;\n// \tuint32_t ehi, elo;\n// \tstruct addrspace *as;\n// \tint spl;\n//\n// \tfaultaddress &= PAGE_FRAME;\n//\n// \tDEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n//\n// \tswitch (faulttype) {\n// \t    case VM_FAULT_READONLY:\n// \t\t/* We always create pages read-write, so we can't get this */\n// \t\tpanic(\"genericvm: got VM_FAULT_READONLY\\n\");\n// \t    case VM_FAULT_READ:\n// \t    case VM_FAULT_WRITE:\n// \t\tbreak;\n// \t    default:\n// \t\treturn EINVAL;\n// \t}\n//\n// \tif (curproc == NULL) {\n// \t\t/*\n// \t\t * No process. This is probably a kernel fault early\n// \t\t * in boot. Return EFAULT so as to panic instead of\n// \t\t * getting into an infinite faulting loop.\n// \t\t */\n// \t\treturn EFAULT;\n// \t}\n//\n// \tas = proc_getas();\n// \tif (as == NULL) {\n// \t\t/*\n// \t\t * No address space set up. This is probably also a\n// \t\t * kernel fault early in boot.\n// \t\t */\n// \t\treturn EFAULT;\n// \t}\n//\n// \t/* Assert that the address space has been set up properly. */\n// \tKASSERT(as->as_vbase1 != 0);\n// \tKASSERT(as->as_pbase1 != 0);\n// \tKASSERT(as->as_npages1 != 0);\n// \tKASSERT(as->as_vbase2 != 0);\n// \tKASSERT(as->as_pbase2 != 0);\n// \tKASSERT(as->as_npages2 != 0);\n// \tKASSERT(as->as_stackpbase != 0);\n// \tKASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n// \tKASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n// \tKASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n// \tKASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n// \tKASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n//\n// \tvbase1 = as->as_vbase1;\n// \tvtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n// \tvbase2 = as->as_vbase2;\n// \tvtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n// \tstackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n// \tstacktop = USERSTACK;\n//\n// \tif (faultaddress >= vbase1 && faultaddress < vtop1) {\n// \t\tpaddr = (faultaddress - vbase1) + as->as_pbase1;\n// \t}\n// \telse if (faultaddress >= vbase2 && faultaddress < vtop2) {\n// \t\tpaddr = (faultaddress - vbase2) + as->as_pbase2;\n// \t}\n// \telse if (faultaddress >= stackbase && faultaddress < stacktop) {\n// \t\tpaddr = (faultaddress - stackbase) + as->as_stackpbase;\n// \t}\n// \telse {\n// \t\treturn EFAULT;\n// \t}\n//\n// \t/* make sure it's page-aligned */\n// \tKASSERT((paddr & PAGE_FRAME) == paddr);\n//\n// \t/* Disable interrupts on this CPU while frobbing the TLB. */\n// \tspl = splhigh();\n//\n// \tfor (i=0; i<NUM_TLB; i++) {\n// \t\ttlb_read(&ehi, &elo, i);\n// \t\tif (elo & TLBLO_VALID) {\n// \t\t\tcontinue;\n// \t\t}\n// \t\tehi = faultaddress;\n// \t\telo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n// \t\tDEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n// \t\ttlb_write(ehi, elo, i);\n// \t\tsplx(spl);\n// \t\treturn 0;\n// \t}\n//\n// \tkprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n// \tsplx(spl);\n// \treturn EFAULT;\n// }","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[232,0],[232,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[232,0],[232,0]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[231,1],[232,0]],"newRange":[[231,1],[231,1]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[231,1],[231,1]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[180,10],[180,14]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[180,10],[180,14]],"newRange":[[180,10],[180,11]],"oldText":"dumb","newText":"g"}},{"type":"change","content":{"oldRange":[[180,11],[180,11]],"newRange":[[180,11],[180,12]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[180,12],[180,12]],"newRange":[[180,12],[180,13]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[180,13],[180,13]],"newRange":[[180,13],[180,14]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[180,14],[180,14]],"newRange":[[180,14],[180,15]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[180,15],[180,15]],"newRange":[[180,15],[180,16]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[180,16],[180,16]],"newRange":[[180,16],[180,17]],"oldText":"","newText":"c"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[180,17],[180,17]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/champ/Git/cpen331/os161/kern/vm/addrspace.c","digestWhenLastPersisted":"3bf308f2af65896ceaf949411643e15d32f1233d","preferredLineEnding":null,"nextMarkerId":849,"deserializer":"TextBuffer","version":5},{"id":"9ce4d43f0479ef6803f261fb30989be6","text":"/*\n * Copyright (c) 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009\n *\tThe President and Fellows of Harvard College.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n/*\n * Main.\n */\n\n#include <types.h>\n#include <kern/errno.h>\n#include <kern/reboot.h>\n#include <kern/unistd.h>\n#include <lib.h>\n#include <spl.h>\n#include <clock.h>\n#include <thread.h>\n#include <proc.h>\n#include <current.h>\n#include <synch.h>\n#include <vm.h>\n#include <mainbus.h>\n#include <vfs.h>\n#include <device.h>\n#include <syscall.h>\n#include <test.h>\n#include <version.h>\n#include \"autoconf.h\"  // for pseudoconfig\n\n\n/*\n * These two pieces of data are maintained by the makefiles and build system.\n * buildconfig is the name of the config file the kernel was configured with.\n * buildversion starts at 1 and is incremented every time you link a kernel.\n *\n * The purpose is not to show off how many kernels you've linked, but\n * to make it easy to make sure that the kernel you just booted is the\n * same one you just built.\n */\nextern const int buildversion;\nextern const char buildconfig[];\n\n/*\n * Copyright message for the OS/161 base code.\n */\nstatic const char harvard_copyright[] =\n    \"Copyright (c) 2000, 2001-2005, 2008-2011, 2013, 2014\\n\"\n    \"   President and Fellows of Harvard College.  All rights reserved.\\n\";\n\n\n/*\n * Initial boot sequence.\n */\nstatic\nvoid\nboot(void)\n{\n\t/*\n\t * The order of these is important!\n\t * Don't go changing it without thinking about the consequences.\n\t *\n\t * Among other things, be aware that console output gets\n\t * buffered up at first and does not actually appear until\n\t * mainbus_bootstrap() attaches the console device. This can\n\t * be remarkably confusing if a bug occurs at this point. So\n\t * don't put new code before mainbus_bootstrap if you don't\n\t * absolutely have to.\n\t *\n\t * Also note that the buffer for this is only 1k. If you\n\t * overflow it, the system will crash without printing\n\t * anything at all. You can make it larger though (it's in\n\t * dev/generic/console.c).\n\t */\n\n\tkprintf(\"\\n\");\n\tkprintf(\"OS/161 base system version %s\\n\", BASE_VERSION);\n\tkprintf(\"%s\", harvard_copyright);\n\tkprintf(\"\\n\");\n\n\tkprintf(\"Team Rocket's system version %s (%s #%d)\\n\",\n\t\tGROUP_VERSION, buildconfig, buildversion);\n\tkprintf(\"\\n\");\n\n\t/* Early initialization. */\n\tram_bootstrap();\n\tproc_bootstrap();\n\tthread_bootstrap();\n\thardclock_bootstrap();\n\tvfs_bootstrap();\n\tkheap_nextgeneration();\n\n\t/* Probe and initialize devices. Interrupts should come on. */\n\tkprintf(\"Device probe...\\n\");\n\tKASSERT(curthread->t_curspl > 0);\n\tmainbus_bootstrap();\n\tKASSERT(curthread->t_curspl == 0);\n\t/* Now do pseudo-devices. */\n\tpseudoconfig();\n\tkprintf(\"\\n\");\n\tkheap_nextgeneration();\n\n\t/* Late phase of initialization. */\n\tvm_bootstrap();\n\tkprintf_bootstrap();\n\tthread_start_cpus();\n\n\t/* Default bootfs - but ignore failure, in case emu0 doesn't exist */\n\tvfs_setbootfs(\"emu0\");\n\n\tkheap_nextgeneration();\n\n\t/*\n\t * Make sure various things aren't screwed up.\n\t */\n\tCOMPILE_ASSERT(sizeof(userptr_t) == sizeof(char *));\n\tCOMPILE_ASSERT(sizeof(*(userptr_t)0) == sizeof(char));\n}\n\n/*\n * Shutdown sequence. Opposite to boot().\n */\nstatic\nvoid\nshutdown(void)\n{\n\tkprintf(\"Shutting down.\\n\");\n\n\tvfs_clearbootfs();\n\tvfs_clearcurdir();\n\tvfs_unmountall();\n\n\tthread_shutdown();\n\n\tsplhigh();\n}\n\n/*****************************************/\n\n/*\n * reboot() system call.\n *\n * Note: this is here because it's directly related to the code above,\n * not because this is where system call code should go. Other syscall\n * code should probably live in the \"syscall\" directory.\n */\nint\nsys_reboot(int code)\n{\n\tswitch (code) {\n\t    case RB_REBOOT:\n\t    case RB_HALT:\n\t    case RB_POWEROFF:\n\t\tbreak;\n\t    default:\n\t\treturn EINVAL;\n\t}\n\n\tshutdown();\n\n\tswitch (code) {\n\t    case RB_HALT:\n\t\tkprintf(\"The system is halted.\\n\");\n\t\tmainbus_halt();\n\t\tbreak;\n\t    case RB_REBOOT:\n\t\tkprintf(\"Rebooting...\\n\");\n\t\tmainbus_reboot();\n\t\tbreak;\n\t    case RB_POWEROFF:\n\t\tkprintf(\"The system is halted.\\n\");\n\t\tmainbus_poweroff();\n\t\tbreak;\n\t}\n\n\tpanic(\"reboot operation failed\\n\");\n\treturn 0;\n}\n\n/*\n * Kernel main. Boot up, then fork the menu thread; wait for a reboot\n * request, and then shut down.\n */\nvoid\nkmain(char *arguments)\n{\n\tboot();\n\n\tmenu(arguments);\n\n\t/* Should not get here */\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"3":{"range":{"start":{"row":215,"column":0},"end":{"row":215,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"48":{"range":{"start":{"row":148,"column":0},"end":{"row":148,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":66,"column":2},"end":{"row":66,"column":2}},"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":29,"undoStack":[],"redoStack":[{"type":"group-end","snapshot":{"2":{"1":{"range":[[211,13],[211,13]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[211,0],[211,4]],"newRange":[[211,0],[211,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[211,0],[211,0]],"newRange":[[211,0],[212,0]],"oldText":"","newText":"    while(1);\n"}},{"type":"change","content":{"oldRange":[[212,0],[213,0]],"newRange":[[212,0],[212,0]],"oldText":"    while(1);\n","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[212,13],[212,13]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[212,13],[212,13]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[212,0],[212,4]],"newRange":[[212,0],[212,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[212,0],[212,0]],"newRange":[[212,0],[213,0]],"oldText":"","newText":"    while(1);\n"}},{"type":"change","content":{"oldRange":[[213,0],[214,0]],"newRange":[[213,0],[213,0]],"oldText":"    while(1);\n","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[213,13],[213,13]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[213,13],[213,13]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[213,12],[213,12]],"newRange":[[213,12],[213,13]],"oldText":"","newText":";"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[213,12],[213,12]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[213,11],[213,11]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[213,10],[213,10]],"newRange":[[213,10],[213,11]],"oldText":"","newText":"1"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[213,10],[213,10]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[213,11],[213,11]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[213,9],[213,9]],"newRange":[[213,9],[213,11]],"oldText":"","newText":"()"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[213,9],[213,9]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[213,9],[213,9]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[213,8],[213,8]],"newRange":[[213,8],[213,9]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[213,7],[213,7]],"newRange":[[213,7],[213,8]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[213,6],[213,6]],"newRange":[[213,6],[213,7]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[213,5],[213,5]],"newRange":[[213,5],[213,6]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[213,4],[213,4]],"newRange":[[213,4],[213,5]],"oldText":"","newText":"w"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[213,4],[213,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[213,4],[213,4]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[212,0],[212,4]],"newRange":[[212,0],[212,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[213,0],[213,0]],"newRange":[[213,0],[213,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[212,4],[212,4]],"newRange":[[212,4],[213,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[212,0],[212,0]],"newRange":[[212,0],[212,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[211,17],[211,17]],"newRange":[[211,17],[212,0]],"oldText":"","newText":"\n"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[211,17],[211,17]],"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}]},"encoding":"utf8","filePath":"/home/champ/Git/cpen331/os161/kern/main/main.c","digestWhenLastPersisted":"3f3e276d5e97c5c4ca15e89faf37a05155adfa77","preferredLineEnding":null,"nextMarkerId":49,"deserializer":"TextBuffer","version":5},{"id":"eb686caef40a27ebc079c36d2e52fcb7","text":"/*\n * Copyright (c) 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009\n *\tThe President and Fellows of Harvard College.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#include <types.h>\n#include <lib.h>\n#include <vm.h>\n#include <mainbus.h>\n\n\nvaddr_t firstfree;   /* first free virtual address; set by start.S */\n\nstatic paddr_t firstpaddr;  /* address of first free physical page */\nstatic paddr_t lastpaddr;   /* one past end of last free physical page */\n\n/*\n * Called very early in system boot to figure out how much physical\n * RAM is available.\n */\nvoid\nram_bootstrap(void)\n{\n\tsize_t ramsize;\n\n\t/* Get size of RAM. */\n\tramsize = mainbus_ramsize();\n\n\t/*\n\t * This is the same as the last physical address, as long as\n\t * we have less than 512 megabytes of memory. If we had more,\n\t * we wouldn't be able to access it all through kseg0 and\n\t * everything would get a lot more complicated. This is not a\n\t * case we are going to worry about.\n\t */\n\tif (ramsize > 512*1024*1024) {\n\t\tramsize = 512*1024*1024;\n\t}\n\n\tlastpaddr = ramsize;\n\n\t/*\n\t * Get first free virtual address from where start.S saved it.\n\t * Convert to physical address.\n\t */\n\tfirstpaddr = firstfree - MIPS_KSEG0;\n\n\tkprintf(\"%uk physical memory available\\n\",\n\t\t(lastpaddr-firstpaddr)/1024);\n}\n\n/*\n * This function is for allocating physical memory prior to VM\n * initialization.\n *\n * The pages it hands back will not be reported to the VM system when\n * the VM system calls ram_getsize(). If it's desired to free up these\n * pages later on after bootup is complete, some mechanism for adding\n * them to the VM system's page management must be implemented.\n * Alternatively, one can do enough VM initialization early so that\n * this function is never needed.\n *\n * Note: while the error return value of 0 is a legal physical address,\n * it's not a legal *allocatable* physical address, because it's the\n * page with the exception handlers on it.\n *\n * This function should not be called once the VM system is initialized,\n * so it is not synchronized.\n */\npaddr_t\nram_stealmem(unsigned long npages)\n{\n\tsize_t size;\n\tpaddr_t paddr;\n\n\tsize = npages * PAGE_SIZE;\n\n\tif (firstpaddr + size > lastpaddr) {\n\t\treturn 0;\n\t}\n\n\tpaddr = firstpaddr;\n\tfirstpaddr += size;\n\n\treturn paddr;\n}\n\n/*\n * This function is intended to be called by the VM system when it\n * initializes in order to find out what memory it has available to\n * manage. Physical memory begins at physical address 0 and ends with\n * the address returned by this function. We assume that physical\n * memory is contiguous. This is not universally true, but is true on\n * the MIPS platforms we intend to run on.\n *\n * lastpaddr is constant once set by ram_bootstrap(), so this function\n * need not be synchronized.\n *\n * It is recommended, however, that this function be used only to\n * initialize the VM system, after which the VM system should take\n * charge of knowing what memory exists.\n */\npaddr_t\nram_getsize(void)\n{\n\treturn lastpaddr;\n}\n\n/*\n * This function is intended to be called by the VM system when it\n * initializes in order to find out what memory it has available to\n * manage.\n *\n * It can only be called once, and once called ram_stealmem() will\n * no longer work, as that would invalidate the result it returned\n * and lead to multiple things using the same memory.\n *\n * This function should not be called once the VM system is initialized,\n * so it is not synchronized.\n */\npaddr_t\nram_getfirstfree(void)\n{\n\tpaddr_t ret;\n\n\tret = firstpaddr;\n\tfirstpaddr = lastpaddr = 0;\n\treturn ret;\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":81,"column":51},"end":{"row":81,"column":51}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2},"8":{"id":"8","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":9,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/champ/Git/cpen331/os161/kern/arch/mips/vm/ram.c","digestWhenLastPersisted":"a9c001d15b9ae5ca8e358d2f1df6f7951e179862","preferredLineEnding":null,"nextMarkerId":58,"deserializer":"TextBuffer","version":5},{"id":"413092bef1d95b2c9f32adab99596230","text":"/*\n * Copyright (c) 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009\n *\tThe President and Fellows of Harvard College.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#ifndef _ADDRSPACE_H_\n#define _ADDRSPACE_H_\n\n/*\n * Address space structure and operations.\n */\n\n#include <vm.h>\n#include \"opt-dumbvm.h\"\n\nstruct vnode;\n\n/*\n * Address space - data structure associated with the virtual memory\n * space of a process.\n *\n * You write this.\n */\n// TODO\nstruct addrspace {\n    vaddr_t as_vbase1;\n    paddr_t as_pbase1;\n    size_t as_npages1;\n    vaddr_t as_vbase2;\n    paddr_t as_pbase2;\n    size_t as_npages2;\n    paddr_t as_stackpbase;\n};\n\n/*\n * Functions in addrspace.c:\n *\n *    as_create - create a new empty address space. You need to make\n *                sure this gets called in all the right places. You\n *                may find you want to change the argument list. May\n *                return NULL on out-of-memory error.\n *\n *    as_copy   - create a new address space that is an exact copy of\n *                an old one. Probably calls as_create to get a new\n *                empty address space and fill it in, but that's up to\n *                you.\n *\n *    as_activate - make curproc's address space the one currently\n *                \"seen\" by the processor.\n *\n *    as_deactivate - unload curproc's address space so it isn't\n *                currently \"seen\" by the processor. This is used to\n *                avoid potentially \"seeing\" it while it's being\n *                destroyed.\n *\n *    as_destroy - dispose of an address space. You may need to change\n *                the way this works if implementing user-level threads.\n *\n *    as_define_region - set up a region of memory within the address\n *                space.\n *\n *    as_prepare_load - this is called before actually loading from an\n *                executable into the address space.\n *\n *    as_complete_load - this is called when loading from an executable\n *                is complete.\n *\n *    as_define_stack - set up the stack region in the address space.\n *                (Normally called *after* as_complete_load().) Hands\n *                back the initial stack pointer for the new process.\n *\n * Note that when using dumbvm, addrspace.c is not used and these\n * functions are found in dumbvm.c.\n */\n\n// fetch the addrspace of the currently running process\nstruct addrspace *proc_getas(void);\n\nstruct addrspace *as_create(void);\nint               as_copy(struct addrspace *src, struct addrspace **ret);\nvoid              as_activate(void);\nvoid              as_deactivate(void);\nvoid              as_destroy(struct addrspace *);\n\nint               as_define_region(struct addrspace *as,\n                                   vaddr_t vaddr, size_t sz,\n                                   int readable,\n                                   int writeable,\n                                   int executable);\nint               as_prepare_load(struct addrspace *as);\nint               as_complete_load(struct addrspace *as);\nint               as_define_stack(struct addrspace *as, vaddr_t *initstackptr);\n\n/*\n * Functions in loadelf.c\n *    load_elf - load an ELF user program executable into the current\n *               address space. Returns the entry point (initial PC)\n *               in the space pointed to by ENTRYPOINT.\n */\n\nint load_elf(struct vnode *v, vaddr_t *entrypoint);\n\n#endif /* _ADDRSPACE_H_ */\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"145":{"range":{"start":{"row":35,"column":0},"end":{"row":35,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"146":{"range":{"start":{"row":40,"column":0},"end":{"row":40,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"147":{"range":{"start":{"row":47,"column":0},"end":{"row":48,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"148":{"range":{"start":{"row":49,"column":0},"end":{"row":56,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"149":{"range":{"start":{"row":99,"column":0},"end":{"row":102,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"150":{"range":{"start":{"row":116,"column":0},"end":{"row":116,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"151":{"range":{"start":{"row":125,"column":0},"end":{"row":125,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":79,"column":62},"end":{"row":79,"column":62}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":95,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[98,13],[98,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[130,0]],"newRange":[[0,0],[0,0]],"oldText":"/*\n * Copyright (c) 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009\n *\tThe President and Fellows of Harvard College.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#ifndef _ADDRSPACE_H_\n#define _ADDRSPACE_H_\n\n/*\n * Address space structure and operations.\n */\n\n\n#include <vm.h>\n#include \"opt-dumbvm.h\"\n\nstruct vnode;\n\n/*\n * GENERIC VM\n */\nstruct addrspace * curproc_getas(void);\n\n/*\n * Address space - data structure associated with the virtual memory\n * space of a process.\n *\n * You write this.\n */\n// TODO\nstruct addrspace {\n    vaddr_t as_vbase1;\n    paddr_t as_pbase1;\n    size_t as_npages1;\n    vaddr_t as_vbase2;\n    paddr_t as_pbase2;\n    size_t as_npages2;\n    paddr_t as_stackpbase;\n};\n\n/*\n * Functions in addrspace.c:\n *\n *    as_create - create a new empty address space. You need to make\n *                sure this gets called in all the right places. You\n *                may find you want to change the argument list. May\n *                return NULL on out-of-memory error.\n *\n *    as_copy   - create a new address space that is an exact copy of\n *                an old one. Probably calls as_create to get a new\n *                empty address space and fill it in, but that's up to\n *                you.\n *\n *    as_activate - make curproc's address space the one currently\n *                \"seen\" by the processor.\n *\n *    as_deactivate - unload curproc's address space so it isn't\n *                currently \"seen\" by the processor. This is used to\n *                avoid potentially \"seeing\" it while it's being\n *                destroyed.\n *\n *    as_destroy - dispose of an address space. You may need to change\n *                the way this works if implementing user-level threads.\n *\n *    as_define_region - set up a region of memory within the address\n *                space.\n *\n *    as_prepare_load - this is called before actually loading from an\n *                executable into the address space.\n *\n *    as_complete_load - this is called when loading from an executable\n *                is complete.\n *\n *    as_define_stack - set up the stack region in the address space.\n *                (Normally called *after* as_complete_load().) Hands\n *                back the initial stack pointer for the new process.\n *\n * Note that when using dumbvm, addrspace.c is not used and these\n * functions are found in dumbvm.c.\n */\n\nstruct addrspace *as_create(void);\nint               as_copy(struct addrspace *src, struct addrspace **ret);\nvoid              as_activate(void);\nvoid              as_deactivate(void);\nvoid              as_destroy(struct addrspace *);\n\nint               as_define_region(struct addrspace *as,\n                                   vaddr_t vaddr, size_t sz,\n                                   int readable,\n                                   int writeable,\n                                   int executable);\nint               as_prepare_load(struct addrspace *as);\nint               as_complete_load(struct addrspace *as);\nint               as_define_stack(struct addrspace *as, vaddr_t *initstackptr);\n\n/*\n * Functions in loadelf.c\n *    load_elf - load an ELF user program executable into the current\n *               address space. Returns the entry point (initial PC)\n *               in the space pointed to by ENTRYPOINT.\n */\n\nint load_elf(struct vnode *v, vaddr_t *entrypoint);\n\n#endif /* _ADDRSPACE_H_ */\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[130,0]],"oldText":"","newText":"/*\n * Copyright (c) 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009\n *\tThe President and Fellows of Harvard College.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#ifndef _ADDRSPACE_H_\n#define _ADDRSPACE_H_\n\n/*\n * Address space structure and operations.\n */\n\n\n#include <vm.h>\n#include \"opt-dumbvm.h\"\n\nstruct vnode;\n\n/*\n * GENERIC VM\n */\nstruct addrspace * curproc_getas(void);\n\n/*\n * Address space - data structure associated with the virtual memory\n * space of a process.\n *\n * You write this.\n */\n// TODO\nstruct addrspace {\n    vaddr_t as_vbase1;\n    paddr_t as_pbase1;\n    size_t as_npages1;\n    vaddr_t as_vbase2;\n    paddr_t as_pbase2;\n    size_t as_npages2;\n    paddr_t as_stackpbase;\n};\n\n/*\n * Functions in addrspace.c:\n *\n *    as_create - create a new empty address space. You need to make\n *                sure this gets called in all the right places. You\n *                may find you want to change the argument list. May\n *                return NULL on out-of-memory error.\n *\n *    as_copy   - create a new address space that is an exact copy of\n *                an old one. Probably calls as_create to get a new\n *                empty address space and fill it in, but that's up to\n *                you.\n *\n *    as_activate - make curproc's address space the one currently\n *                \"seen\" by the processor.\n *\n *    as_deactivate - unload curproc's address space so it isn't\n *                currently \"seen\" by the processor. This is used to\n *                avoid potentially \"seeing\" it while it's being\n *                destroyed.\n *\n *    as_destroy - dispose of an address space. You may need to change\n *                the way this works if implementing user-level threads.\n *\n *    as_define_region - set up a region of memory within the address\n *                space.\n *\n *    as_prepare_load - this is called before actually loading from an\n *                executable into the address space.\n *\n *    as_complete_load - this is called when loading from an executable\n *                is complete.\n *\n *    as_define_stack - set up the stack region in the address space.\n *                (Normally called *after* as_complete_load().) Hands\n *                back the initial stack pointer for the new process.\n *\n * Note that when using dumbvm, addrspace.c is not used and these\n * functions are found in dumbvm.c.\n */\n\nstruct addrspace *as_create(void);\nint               as_copy(struct addrspace *src, struct addrspace **ret);\nvoid              as_activate(void);\nvoid              as_deactivate(void);\nvoid              as_destroy(struct addrspace *);\n\nint               as_define_region(struct addrspace *as,\n                                   vaddr_t vaddr, size_t sz,\n                                   int readable,\n                                   int writeable,\n                                   int executable);\nint               as_prepare_load(struct addrspace *as);\nint               as_complete_load(struct addrspace *as);\nint               as_define_stack(struct addrspace *as, vaddr_t *initstackptr);\n\n/*\n * Functions in loadelf.c\n *    load_elf - load an ELF user program executable into the current\n *               address space. Returns the entry point (initial PC)\n *               in the space pointed to by ENTRYPOINT.\n */\n\nint load_elf(struct vnode *v, vaddr_t *entrypoint);\n\n#endif /* _ADDRSPACE_H_ */\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[130,0],[130,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[104,0],[104,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[104,0],[104,0]],"newRange":[[104,0],[105,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[105,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[104,0],[104,0]],"newRange":[[104,0],[104,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[106,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[106,0],[106,0]],"newRange":[[106,0],[106,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[105,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[106,0],[106,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,0],[105,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[106,17]],"oldText":"","newText":"struct addrspace *\n proc_getas(void)"}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[105,1]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[106,17],[106,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[107,0],[107,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[106,17],[107,0]],"newRange":[[106,17],[106,17]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[106,17],[106,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[106,1],[106,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[106,0],[106,1]],"newRange":[[106,0],[106,0]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[106,0],[106,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[106,0],[106,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,19],[106,0]],"newRange":[[105,19],[105,19]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,19],[105,19]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,1],[105,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,0],[105,1]],"newRange":[[105,0],[105,0]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,0],[105,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,34],[105,34]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,34],[105,34]],"newRange":[[105,34],[105,35]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,35],[105,35]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,35],[105,35]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,35],[105,35]],"newRange":[[105,35],[106,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[106,0],[106,0]],"newRange":[[106,0],[106,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[106,0],[106,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[104,0],[104,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[104,0],[104,0]],"newRange":[[104,0],[105,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[105,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[104,0],[104,0]],"newRange":[[104,0],[104,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,0],[105,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,0],[105,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[105,1]],"oldText":"","newText":"/"}},{"type":"change","content":{"oldRange":[[105,1],[105,1]],"newRange":[[105,1],[105,2]],"oldText":"","newText":"/"}},{"type":"change","content":{"oldRange":[[105,2],[105,2]],"newRange":[[105,2],[105,3]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[105,3],[105,3]],"newRange":[[105,3],[105,4]],"oldText":"","newText":"g"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,4],[105,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,4],[105,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,3],[105,4]],"newRange":[[105,3],[105,3]],"oldText":"g","newText":""}},{"type":"change","content":{"oldRange":[[105,3],[105,3]],"newRange":[[105,3],[105,4]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[105,4],[105,4]],"newRange":[[105,4],[105,5]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[105,5],[105,5]],"newRange":[[105,5],[105,6]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[105,6],[105,6]],"newRange":[[105,6],[105,7]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[105,7],[105,7]],"newRange":[[105,7],[105,8]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[105,8],[105,8]],"newRange":[[105,8],[105,9]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[105,9],[105,9]],"newRange":[[105,9],[105,10]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[105,10],[105,10]],"newRange":[[105,10],[105,11]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[105,11],[105,11]],"newRange":[[105,11],[105,12]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[105,12],[105,12]],"newRange":[[105,12],[105,13]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,13],[105,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,13],[105,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,13],[105,13]],"newRange":[[105,13],[105,14]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[105,14],[105,14]],"newRange":[[105,14],[105,15]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[105,15],[105,15]],"newRange":[[105,15],[105,16]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[105,16],[105,16]],"newRange":[[105,16],[105,17]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[105,17],[105,17]],"newRange":[[105,17],[105,18]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[105,18],[105,18]],"newRange":[[105,18],[105,19]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[105,19],[105,19]],"newRange":[[105,19],[105,20]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[105,20],[105,20]],"newRange":[[105,20],[105,21]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[105,21],[105,21]],"newRange":[[105,21],[105,22]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[105,22],[105,22]],"newRange":[[105,22],[105,23]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[105,23],[105,23]],"newRange":[[105,23],[105,24]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[105,24],[105,24]],"newRange":[[105,24],[105,25]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[105,25],[105,25]],"newRange":[[105,25],[105,26]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[105,26],[105,26]],"newRange":[[105,26],[105,27]],"oldText":"","newText":"t"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,27],[105,27]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,27],[105,27]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,27],[105,27]],"newRange":[[105,27],[105,28]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[105,28],[105,28]],"newRange":[[105,28],[105,29]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[105,29],[105,29]],"newRange":[[105,29],[105,30]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[105,30],[105,30]],"newRange":[[105,30],[105,31]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[105,31],[105,31]],"newRange":[[105,31],[105,32]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[105,32],[105,32]],"newRange":[[105,32],[105,33]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[105,33],[105,33]],"newRange":[[105,33],[105,34]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[105,34],[105,34]],"newRange":[[105,34],[105,35]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[105,35],[105,35]],"newRange":[[105,35],[105,36]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[105,36],[105,36]],"newRange":[[105,36],[105,37]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[105,37],[105,37]],"newRange":[[105,37],[105,38]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[105,38],[105,38]],"newRange":[[105,38],[105,39]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[105,39],[105,39]],"newRange":[[105,39],[105,40]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,40],[105,40]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,40],[105,40]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,40],[105,40]],"newRange":[[105,40],[105,41]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[105,41],[105,41]],"newRange":[[105,41],[105,42]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[105,42],[105,42]],"newRange":[[105,42],[105,43]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[105,43],[105,43]],"newRange":[[105,43],[105,44]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[105,44],[105,44]],"newRange":[[105,44],[105,45]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[105,45],[105,45]],"newRange":[[105,45],[105,46]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[105,46],[105,46]],"newRange":[[105,46],[105,47]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[105,47],[105,47]],"newRange":[[105,47],[105,48]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[105,48],[105,48]],"newRange":[[105,48],[105,49]],"oldText":"","newText":"p"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,49],[105,49]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[105,49],[105,49]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[105,49],[105,49]],"newRange":[[105,49],[105,50]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[105,50],[105,50]],"newRange":[[105,50],[105,51]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[105,51],[105,51]],"newRange":[[105,51],[105,52]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[105,52],[105,52]],"newRange":[[105,52],[105,53]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[105,53],[105,53]],"newRange":[[105,53],[105,54]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[105,54],[105,54]],"newRange":[[105,54],[105,55]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[105,55],[105,55]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[45,23],[45,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[45,0],[45,0]],"newRange":[[45,0],[45,3]],"oldText":"","newText":"// "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[45,26],[45,26]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,0],[46,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,0],[46,0]],"newRange":[[41,0],[41,0]],"oldText":"\n/*\n * GENERIC VM\n */\n// struct addrspace * curproc_getas(void);\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,13],[41,0]],"newRange":[[40,13],[40,13]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,13],[40,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,13],[40,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,13],[40,13]],"newRange":[[40,13],[41,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[35,0],[35,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[34,3],[35,0]],"newRange":[[34,3],[34,3]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[34,3],[34,3]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/champ/Git/cpen331/os161/kern/include/addrspace.h","digestWhenLastPersisted":"5a7c4d0ae2e66ac5392cefbbfb6d44696eeff284","preferredLineEnding":null,"nextMarkerId":152,"deserializer":"TextBuffer","version":5},{"id":"831a0e7f0a440127e0087f70baf1b0f9","text":"/*\n * GENERIC VM STUFF\n */\n#include <types.h>\n#include <kern/errno.h>\n#include <mips/tlb.h>\n#include <spl.h>\n#include <current.h>\n#include <addrspace.h>\n\nvoid\nvm_bootstrap(void)\n{\n\tstruct addrspace *as;\n\n    if (curproc == NULL) {\n        return;\n    }\n\n    as = curproc->p_addrspace;\n    if (as == NULL) {\n        return;\n    }\n\n    as->as_vbase1 != 0;\n    as->as_pbase1 != 0);\n    as->as_npages1 != 0);\n    as->as_vbase2 != 0);\n    as->as_pbase2 != 0);\n    as->as_npages2 != 0);\n    as->as_stackpbase != 0);\n\n\n}\n\nint\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n\n    faultaddress &= PAGE_FRAME;\n\n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n\n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n\n    if (curproc == NULL) {\n        return EFAULT;\n    }\n\n    as = proc_getas();\n    if (as == NULL) {\n        return EFAULT;\n    }\n\n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n\n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n\n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n\n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n\n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n\n    for (i = 0; i < NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n\n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n\n/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\n\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n\n    addr = ram_stealmem(npages);\n\n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n\nvoid\nvm_tlbshootdown_all(void)\n{\n\t// TODO\n\tpanic(\"dumbvm tried to do tlb shootdown?!\\n\");\n}\n\nvoid\nvm_tlbshootdown(const struct tlbshootdown *ts)\n{\n\t// TODO\n\t(void)ts;\n\tpanic(\"dumbvm tried to do tlb shootdown?!\\n\");\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"417":{"range":{"start":{"row":15,"column":7},"end":{"row":15,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"486":{"range":{"start":{"row":15,"column":25},"end":{"row":17,"column":4}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"507":{"range":{"start":{"row":20,"column":7},"end":{"row":20,"column":18}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"557":{"range":{"start":{"row":20,"column":20},"end":{"row":22,"column":4}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"596":{"range":{"start":{"row":11,"column":17},"end":{"row":11,"column":18}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"597":{"range":{"start":{"row":11,"column":12},"end":{"row":11,"column":13}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":11,"column":18},"end":{"row":11,"column":18}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":717,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[144,1]],"oldText":"","newText":"/*\n * GENERIC VM STUFF\n */\n\nvoid\nvm_bootstrap(void)\n{\n\t// TODO\n}\n\nvoid\nvm_tlbshootdown_all(void)\n{\n\t// TODO\n\tpanic(\"dumbvm tried to do tlb shootdown?!\\n\");\n}\n\nvoid\nvm_tlbshootdown(const struct tlbshootdown *ts)\n{\n\t// TODO\n\t(void)ts;\n\tpanic(\"dumbvm tried to do tlb shootdown?!\\n\");\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n\t// TODO\n\tpaddr_t pa;\n\tpa = getppages(npages);\n\tif (pa==0) {\n\t\treturn 0;\n\t}\n\treturn PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n\t// TODO\n\t(void)addr;\n}\n\nint\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n\t// TODO\n\tvaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n\tpaddr_t paddr;\n\tint i;\n\tuint32_t ehi, elo;\n\tstruct addrspace *as;\n\tint spl;\n\n\tfaultaddress &= PAGE_FRAME;\n\n\tDEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n\n\tswitch (faulttype) {\n\t    case VM_FAULT_READONLY:\n\t\t/* We always create pages read-write, so we can't get this */\n\t\tpanic(\"genericvm: got VM_FAULT_READONLY\\n\");\n\t    case VM_FAULT_READ:\n\t    case VM_FAULT_WRITE:\n\t\tbreak;\n\t    default:\n\t\treturn EINVAL;\n\t}\n\n\tif (curproc == NULL) {\n\t\t/*\n\t\t * No process. This is probably a kernel fault early\n\t\t * in boot. Return EFAULT so as to panic instead of\n\t\t * getting into an infinite faulting loop.\n\t\t */\n\t\treturn EFAULT;\n\t}\n\n\tas = proc_getas();\n\tif (as == NULL) {\n\t\t/*\n\t\t * No address space set up. This is probably also a\n\t\t * kernel fault early in boot.\n\t\t */\n\t\treturn EFAULT;\n\t}\n\n\t/* Assert that the address space has been set up properly. */\n\tKASSERT(as->as_vbase1 != 0);\n\tKASSERT(as->as_pbase1 != 0);\n\tKASSERT(as->as_npages1 != 0);\n\tKASSERT(as->as_vbase2 != 0);\n\tKASSERT(as->as_pbase2 != 0);\n\tKASSERT(as->as_npages2 != 0);\n\tKASSERT(as->as_stackpbase != 0);\n\tKASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n\tKASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n\tKASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n\tKASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n\tKASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n\n\tvbase1 = as->as_vbase1;\n\tvtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n\tvbase2 = as->as_vbase2;\n\tvtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n\tstackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n\tstacktop = USERSTACK;\n\n\tif (faultaddress >= vbase1 && faultaddress < vtop1) {\n\t\tpaddr = (faultaddress - vbase1) + as->as_pbase1;\n\t}\n\telse if (faultaddress >= vbase2 && faultaddress < vtop2) {\n\t\tpaddr = (faultaddress - vbase2) + as->as_pbase2;\n\t}\n\telse if (faultaddress >= stackbase && faultaddress < stacktop) {\n\t\tpaddr = (faultaddress - stackbase) + as->as_stackpbase;\n\t}\n\telse {\n\t\treturn EFAULT;\n\t}\n\n\t/* make sure it's page-aligned */\n\tKASSERT((paddr & PAGE_FRAME) == paddr);\n\n\t/* Disable interrupts on this CPU while frobbing the TLB. */\n\tspl = splhigh();\n\n\tfor (i=0; i<NUM_TLB; i++) {\n\t\ttlb_read(&ehi, &elo, i);\n\t\tif (elo & TLBLO_VALID) {\n\t\t\tcontinue;\n\t\t}\n\t\tehi = faultaddress;\n\t\telo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n\t\tDEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n\t\ttlb_write(ehi, elo, i);\n\t\tsplx(spl);\n\t\treturn 0;\n\t}\n\n\tkprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n\tsplx(spl);\n\treturn EFAULT;\n}"}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[0,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[144,1],[144,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[31,13],[31,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[144,1],[144,1]],"newRange":[[144,1],[145,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[31,13],[31,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[2,3],[2,3]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[2,3],[2,3]],"newRange":[[2,3],[3,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[3,1]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,1],[3,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,1],[3,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,1],[3,1]],"newRange":[[3,1],[3,2]],"oldText":"","newText":"#"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,2],[3,2]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,2],[3,2]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,1],[3,2]],"newRange":[[3,1],[3,1]],"oldText":"#","newText":""}},{"type":"change","content":{"oldRange":[[3,0],[3,1]],"newRange":[[3,0],[3,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[3,1]],"oldText":"","newText":"#"}},{"type":"change","content":{"oldRange":[[3,1],[3,1]],"newRange":[[3,1],[3,2]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[3,2],[3,2]],"newRange":[[3,2],[3,3]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[3,3],[3,3]],"newRange":[[3,3],[3,4]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[3,4],[3,4]],"newRange":[[3,4],[3,5]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[3,5],[3,5]],"newRange":[[3,5],[3,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[3,6],[3,6]],"newRange":[[3,6],[3,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[3,7],[3,7]],"newRange":[[3,7],[3,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[3,8],[3,8]],"newRange":[[3,8],[3,9]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,9],[3,9]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,9],[3,9]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,9],[3,9]],"newRange":[[3,9],[3,10]],"oldText":"","newText":"<"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,10],[3,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,10],[3,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,10],[3,10]],"newRange":[[3,10],[3,11]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[3,11],[3,11]],"newRange":[[3,11],[3,12]],"oldText":"","newText":"m"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,12],[3,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,12],[3,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,11],[3,12]],"newRange":[[3,11],[3,11]],"oldText":"m","newText":""}},{"type":"change","content":{"oldRange":[[3,10],[3,11]],"newRange":[[3,10],[3,10]],"oldText":"h","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,10],[3,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,10],[3,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,10],[3,10]],"newRange":[[3,10],[3,11]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[3,11],[3,11]],"newRange":[[3,11],[3,12]],"oldText":"","newText":"m"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,12],[3,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,12],[3,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,12],[3,12]],"newRange":[[3,12],[3,13]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,13],[3,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,13],[3,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,13],[3,13]],"newRange":[[3,13],[3,14]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[3,14],[3,14]],"newRange":[[3,14],[3,15]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,15],[3,15]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,15],[3,15]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,15],[3,15]],"newRange":[[3,15],[4,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[28,1]],"oldText":"","newText":"/*\n * Note! If OPT_DUMBVM is set, as is the case until you start the VM\n * assignment, this file is not compiled or linked or in any way\n * used. The cheesy hack versions in dumbvm.c are used instead.\n */\n\n#define VM_STACKPAGES    18\n\n/*\n * Wrap ram_stealmem in a spinlock.\n */\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n\tpaddr_t addr;\n\tspinlock_acquire(&stealmem_lock);\n\n\taddr = ram_stealmem(npages);\n\n\tspinlock_release(&stealmem_lock);\n\treturn addr;\n}"}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[28,1],[28,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[4,0],[8,3]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[4,0],[8,3]],"newRange":[[4,0],[4,0]],"oldText":"/*\n * Note! If OPT_DUMBVM is set, as is the case until you start the VM\n * assignment, this file is not compiled or linked or in any way\n * used. The cheesy hack versions in dumbvm.c are used instead.\n */","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[4,0],[4,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[4,0],[4,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,15],[4,0]],"newRange":[[3,15],[3,15]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,15],[3,15]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,0],[5,27]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,0],[5,27]],"newRange":[[5,0],[5,0]],"oldText":"#define VM_STACKPAGES    18","newText":""}},{"type":"change","content":{"oldRange":[[4,0],[5,0]],"newRange":[[4,0],[4,0]],"oldText":"\n","newText":""}},{"type":"change","content":{"oldRange":[[3,15],[4,0]],"newRange":[[3,15],[3,15]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,15],[3,15]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[10,0],[22,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[10,0],[22,0]],"newRange":[[10,0],[10,0]],"oldText":"static\npaddr_t\ngetppages(unsigned long npages)\n{\n\tpaddr_t addr;\n\tspinlock_acquire(&stealmem_lock);\n\n\taddr = ram_stealmem(npages);\n\n\tspinlock_release(&stealmem_lock);\n\treturn addr;\n}\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[10,0],[10,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[10,0],[10,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[9,0],[10,0]],"newRange":[[9,0],[9,0]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[9,0],[9,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,0],[8,60]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,0],[8,60]],"newRange":[[5,0],[5,0]],"oldText":"/*\n * Wrap ram_stealmem in a spinlock.\n */\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,0],[5,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,0],[5,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[4,0],[5,0]],"newRange":[[4,0],[4,0]],"oldText":"\n","newText":""}},{"type":"change","content":{"oldRange":[[3,15],[4,0]],"newRange":[[3,15],[3,15]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,15],[3,15]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,16],[19,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,16],[19,22]],"newRange":[[19,16],[19,16]],"oldText":"const ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,16],[19,16]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,15],[3,15]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,15],[3,15]],"newRange":[[3,15],[4,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[4,0],[4,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[4,0],[4,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[6,22]],"oldText":"","newText":"#include <types.h>\n#include <spl.h>\n#include <addrspace.h>"}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[6,22],[6,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[6,22],[6,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[6,22],[6,22]],"newRange":[[6,22],[7,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[7,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[7,16]],"oldText":"","newText":"#include <lib.h>"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,16],[7,16]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,16],[7,16]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,0],[8,0]],"newRange":[[7,0],[7,0]],"oldText":"#include <lib.h>\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,0],[7,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[6,1],[6,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[6,0],[7,0]],"newRange":[[6,0],[6,0]],"oldText":"#include <addrspace.h>\n","newText":""}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[6,0]],"oldText":"","newText":"#include <addrspace.h>\n"}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[5,0],[6,0]],"newRange":[[5,0],[5,0]],"oldText":"#include <addrspace.h>\n","newText":""}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[5,0]],"oldText":"","newText":"#include <addrspace.h>\n"}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[4,1],[4,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[4,22],[6,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[4,22],[6,16]],"newRange":[[4,22],[4,22]],"oldText":"\n#include <types.h>\n#include <spl.h>","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[4,22],[4,22]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[2,3],[2,3]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[2,3],[2,3]],"newRange":[[2,3],[3,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[3,1]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,1],[3,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,1],[3,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,0],[3,1]],"newRange":[[3,0],[3,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[3,1]],"oldText":"","newText":"#"}},{"type":"change","content":{"oldRange":[[3,1],[3,1]],"newRange":[[3,1],[3,2]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[3,2],[3,2]],"newRange":[[3,2],[3,3]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[3,3],[3,3]],"newRange":[[3,3],[3,4]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[3,4],[3,4]],"newRange":[[3,4],[3,5]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[3,5],[3,5]],"newRange":[[3,5],[3,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[3,6],[3,6]],"newRange":[[3,6],[3,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[3,7],[3,7]],"newRange":[[3,7],[3,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[3,8],[3,8]],"newRange":[[3,8],[3,9]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,9],[3,9]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,9],[3,9]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,9],[3,9]],"newRange":[[3,9],[3,10]],"oldText":"","newText":"<"}},{"type":"change","content":{"oldRange":[[3,10],[3,10]],"newRange":[[3,10],[3,11]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[3,11],[3,11]],"newRange":[[3,11],[3,12]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[3,12],[3,12]],"newRange":[[3,12],[3,13]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[3,13],[3,13]],"newRange":[[3,13],[3,14]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[3,14],[3,14]],"newRange":[[3,14],[3,15]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[3,15],[3,15]],"newRange":[[3,15],[3,16]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[3,16],[3,16]],"newRange":[[3,16],[3,17]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[3,17],[3,17]],"newRange":[[3,17],[3,18]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,18],[3,18]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,18],[3,18]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,18],[3,18]],"newRange":[[3,18],[4,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[4,0],[4,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[4,0],[4,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,23]],"oldText":"","newText":"#include <kern/errno.h>"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[4,23],[4,23]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[4,23],[4,23]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[4,23],[4,23]],"newRange":[[4,23],[5,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,0],[5,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,0],[5,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,1]],"oldText":"","newText":"#"}},{"type":"change","content":{"oldRange":[[5,1],[5,1]],"newRange":[[5,1],[5,2]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[5,2],[5,2]],"newRange":[[5,2],[5,3]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[5,3],[5,3]],"newRange":[[5,3],[5,4]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[5,4],[5,4]],"newRange":[[5,4],[5,5]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[5,5],[5,5]],"newRange":[[5,5],[5,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[5,6],[5,6]],"newRange":[[5,6],[5,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[5,7],[5,7]],"newRange":[[5,7],[5,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[5,8],[5,8]],"newRange":[[5,8],[5,9]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,9],[5,9]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,9],[5,9]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,9],[5,9]],"newRange":[[5,9],[5,10]],"oldText":"","newText":"<"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,10],[5,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,10],[5,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,10],[5,10]],"newRange":[[5,10],[5,11]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[5,11],[5,11]],"newRange":[[5,11],[5,12]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[5,12],[5,12]],"newRange":[[5,12],[5,13]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[5,13],[5,13]],"newRange":[[5,13],[5,14]],"oldText":"","newText":"b"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,14],[5,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,14],[5,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,13],[5,14]],"newRange":[[5,13],[5,13]],"oldText":"b","newText":""}},{"type":"change","content":{"oldRange":[[5,12],[5,13]],"newRange":[[5,12],[5,12]],"oldText":"i","newText":""}},{"type":"change","content":{"oldRange":[[5,11],[5,12]],"newRange":[[5,11],[5,11]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[5,11],[5,11]],"newRange":[[5,11],[5,12]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[5,12],[5,12]],"newRange":[[5,12],[5,13]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[5,13],[5,13]],"newRange":[[5,13],[5,14]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,14],[5,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,14],[5,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,14],[5,14]],"newRange":[[5,14],[5,15]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,15],[5,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,15],[5,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,15],[5,15]],"newRange":[[5,15],[5,16]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[5,16],[5,16]],"newRange":[[5,16],[5,17]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,17],[5,17]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,13],[5,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,12],[5,13]],"newRange":[[5,12],[5,12]],"oldText":"b","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,12],[5,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,12],[5,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,12],[5,12]],"newRange":[[5,12],[5,13]],"oldText":"","newText":"b"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,13],[5,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,14],[5,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,13],[5,14]],"newRange":[[5,13],[5,13]],"oldText":"s","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,13],[5,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,16],[5,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,16],[5,16]],"newRange":[[5,16],[6,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[6,0],[6,0]],"newRange":[[6,0],[6,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[6,0],[6,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[6,0],[6,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[6,0],[6,0]],"newRange":[[6,0],[6,1]],"oldText":"","newText":"#"}},{"type":"change","content":{"oldRange":[[6,1],[6,1]],"newRange":[[6,1],[6,2]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[6,2],[6,2]],"newRange":[[6,2],[6,3]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[6,3],[6,3]],"newRange":[[6,3],[6,4]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[6,4],[6,4]],"newRange":[[6,4],[6,5]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[6,5],[6,5]],"newRange":[[6,5],[6,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[6,6],[6,6]],"newRange":[[6,6],[6,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[6,7],[6,7]],"newRange":[[6,7],[6,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[6,8],[6,8]],"newRange":[[6,8],[6,9]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[6,9],[6,9]],"newRange":[[6,9],[6,10]],"oldText":"","newText":"<"}},{"type":"change","content":{"oldRange":[[6,10],[6,10]],"newRange":[[6,10],[6,11]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[6,11],[6,11]],"newRange":[[6,11],[6,12]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[6,12],[6,12]],"newRange":[[6,12],[6,13]],"oldText":"","newText":"l"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[6,13],[6,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[6,13],[6,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[6,13],[6,13]],"newRange":[[6,13],[6,14]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[6,14],[6,14]],"newRange":[[6,14],[6,15]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[6,15],[6,15]],"newRange":[[6,15],[6,16]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[6,16],[6,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[6,16],[7,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[6,16],[7,15]],"newRange":[[6,16],[6,16]],"oldText":"\n#include <vm.h>","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[6,16],[6,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,18],[6,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[3,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,3]],"oldText":"","newText":"// "}},{"type":"change","content":{"oldRange":[[6,0],[6,0]],"newRange":[[6,0],[6,3]],"oldText":"","newText":"// "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,21],[6,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[3,19],[3,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[3,0],[3,3]],"newRange":[[3,0],[3,0]],"oldText":"// ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[3,16],[3,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[4,19],[4,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[4,0],[4,3]],"newRange":[[4,0],[4,0]],"oldText":"// ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[4,16],[4,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[6,13],[6,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[6,0],[6,3]],"newRange":[[6,0],[6,0]],"oldText":"// ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[6,10],[6,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[6,16],[6,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[6,16],[6,16]],"newRange":[[6,16],[7,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[7,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,0],[7,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,0],[7,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[7,1]],"oldText":"","newText":"@"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,1],[7,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,1],[7,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,0],[7,1]],"newRange":[[7,0],[7,0]],"oldText":"@","newText":""}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[7,1]],"oldText":"","newText":"#"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,1],[7,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,1],[7,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,1],[7,1]],"newRange":[[7,1],[7,2]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[7,2],[7,2]],"newRange":[[7,2],[7,3]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[7,3],[7,3]],"newRange":[[7,3],[7,4]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[7,4],[7,4]],"newRange":[[7,4],[7,5]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[7,5],[7,5]],"newRange":[[7,5],[7,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[7,6],[7,6]],"newRange":[[7,6],[7,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[7,7],[7,7]],"newRange":[[7,7],[7,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[7,8],[7,8]],"newRange":[[7,8],[7,9]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[7,9],[7,9]],"newRange":[[7,9],[7,10]],"oldText":"","newText":"<"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,10],[7,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,10],[7,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,10],[7,10]],"newRange":[[7,10],[7,11]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[7,11],[7,11]],"newRange":[[7,11],[7,12]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[7,12],[7,12]],"newRange":[[7,12],[7,13]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[7,13],[7,13]],"newRange":[[7,13],[7,14]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[7,14],[7,14]],"newRange":[[7,14],[7,15]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[7,15],[7,15]],"newRange":[[7,15],[7,16]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[7,16],[7,16]],"newRange":[[7,16],[7,17]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[7,17],[7,17]],"newRange":[[7,17],[7,18]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,18],[7,18]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,18],[7,18]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,18],[7,18]],"newRange":[[7,18],[7,19]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[7,19],[7,19]],"newRange":[[7,19],[7,20]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,20],[7,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,19],[5,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,0],[5,3]],"newRange":[[5,0],[5,0]],"oldText":"// ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,16],[5,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,10],[5,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,10],[5,13]],"newRange":[[5,10],[5,11]],"oldText":"lib","newText":"t"}},{"type":"change","content":{"oldRange":[[5,11],[5,11]],"newRange":[[5,11],[5,12]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[5,12],[5,12]],"newRange":[[5,12],[5,13]],"oldText":"","newText":"b"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,13],[5,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,10],[5,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,10],[5,10]],"newRange":[[5,10],[5,11]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[5,11],[5,11]],"newRange":[[5,11],[5,12]],"oldText":"","newText":"i"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,12],[5,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,12],[5,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,12],[5,12]],"newRange":[[5,12],[5,13]],"oldText":"","newText":"["}},{"type":"change","content":{"oldRange":[[5,13],[5,13]],"newRange":[[5,13],[5,14]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,14],[5,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,14],[5,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,13],[5,14]],"newRange":[[5,13],[5,13]],"oldText":"s","newText":""}},{"type":"change","content":{"oldRange":[[5,12],[5,13]],"newRange":[[5,12],[5,12]],"oldText":"[","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,12],[5,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[5,12],[5,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,12],[5,12]],"newRange":[[5,12],[5,13]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[5,13],[5,13]],"newRange":[[5,13],[5,14]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[5,14],[5,14]],"newRange":[[5,14],[5,15]],"oldText":"","newText":"/"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,15],[5,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[30,0],[30,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[31,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[31,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[30,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[32,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[32,0],[32,0]],"newRange":[[32,0],[32,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[31,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[32,0],[32,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[31,0],[31,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[47,1]],"oldText":"","newText":"/*\n * Wrap ram_stealmem in a spinlock.\n */\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n\tpaddr_t addr;\n\tspinlock_acquire(&stealmem_lock);\n\n\taddr = ram_stealmem(npages);\n\n\tspinlock_release(&stealmem_lock);\n\treturn addr;\n}"}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[31,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[47,1],[47,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[24,16],[24,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,16],[24,16]],"newRange":[[24,16],[24,17]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[24,17],[24,17]],"newRange":[[24,17],[24,18]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[24,18],[24,18]],"newRange":[[24,18],[24,19]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[24,19],[24,19]],"newRange":[[24,19],[24,20]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[24,20],[24,20]],"newRange":[[24,20],[24,21]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[24,21],[24,21]],"newRange":[[24,21],[24,22]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,22],[24,22]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[68,2],[169,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[68,0],[169,0]],"newRange":[[68,0],[68,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n\t// TODO\n\tvaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n\tpaddr_t paddr;\n\tint i;\n\tuint32_t ehi, elo;\n\tstruct addrspace *as;\n\tint spl;\n\n\tfaultaddress &= PAGE_FRAME;\n\n\tDEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n\n\tswitch (faulttype) {\n\t    case VM_FAULT_READONLY:\n\t\t/* We always create pages read-write, so we can't get this */\n\t\tpanic(\"genericvm: got VM_FAULT_READONLY\\n\");\n\t    case VM_FAULT_READ:\n\t    case VM_FAULT_WRITE:\n\t\tbreak;\n\t    default:\n\t\treturn EINVAL;\n\t}\n\n\tif (curproc == NULL) {\n\t\t/*\n\t\t * No process. This is probably a kernel fault early\n\t\t * in boot. Return EFAULT so as to panic instead of\n\t\t * getting into an infinite faulting loop.\n\t\t */\n\t\treturn EFAULT;\n\t}\n\n\tas = proc_getas();\n\tif (as == NULL) {\n\t\t/*\n\t\t * No address space set up. This is probably also a\n\t\t * kernel fault early in boot.\n\t\t */\n\t\treturn EFAULT;\n\t}\n\n\t/* Assert that the address space has been set up properly. */\n\tKASSERT(as->as_vbase1 != 0);\n\tKASSERT(as->as_pbase1 != 0);\n\tKASSERT(as->as_npages1 != 0);\n\tKASSERT(as->as_vbase2 != 0);\n\tKASSERT(as->as_pbase2 != 0);\n\tKASSERT(as->as_npages2 != 0);\n\tKASSERT(as->as_stackpbase != 0);\n\tKASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n\tKASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n\tKASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n\tKASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n\tKASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n\n\tvbase1 = as->as_vbase1;\n\tvtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n\tvbase2 = as->as_vbase2;\n\tvtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n\tstackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n\tstacktop = USERSTACK;\n\n\tif (faultaddress >= vbase1 && faultaddress < vtop1) {\n\t\tpaddr = (faultaddress - vbase1) + as->as_pbase1;\n\t}\n\telse if (faultaddress >= vbase2 && faultaddress < vtop2) {\n\t\tpaddr = (faultaddress - vbase2) + as->as_pbase2;\n\t}\n\telse if (faultaddress >= stackbase && faultaddress < stacktop) {\n\t\tpaddr = (faultaddress - stackbase) + as->as_stackpbase;\n\t}\n\telse {\n\t\treturn EFAULT;\n\t}\n\n\t/* make sure it's page-aligned */\n\tKASSERT((paddr & PAGE_FRAME) == paddr);\n\n\t/* Disable interrupts on this CPU while frobbing the TLB. */\n\tspl = splhigh();\n\n\tfor (i=0; i<NUM_TLB; i++) {\n\t\ttlb_read(&ehi, &elo, i);\n\t\tif (elo & TLBLO_VALID) {\n\t\t\tcontinue;\n\t\t}\n\t\tehi = faultaddress;\n\t\telo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n\t\tDEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n\t\ttlb_write(ehi, elo, i);\n\t\tsplx(spl);\n\t\treturn 0;\n\t}\n\n\tkprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n\tsplx(spl);\n\treturn EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[67,0],[67,0]],"newRange":[[67,0],[168,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n\t// TODO\n\tvaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n\tpaddr_t paddr;\n\tint i;\n\tuint32_t ehi, elo;\n\tstruct addrspace *as;\n\tint spl;\n\n\tfaultaddress &= PAGE_FRAME;\n\n\tDEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n\n\tswitch (faulttype) {\n\t    case VM_FAULT_READONLY:\n\t\t/* We always create pages read-write, so we can't get this */\n\t\tpanic(\"genericvm: got VM_FAULT_READONLY\\n\");\n\t    case VM_FAULT_READ:\n\t    case VM_FAULT_WRITE:\n\t\tbreak;\n\t    default:\n\t\treturn EINVAL;\n\t}\n\n\tif (curproc == NULL) {\n\t\t/*\n\t\t * No process. This is probably a kernel fault early\n\t\t * in boot. Return EFAULT so as to panic instead of\n\t\t * getting into an infinite faulting loop.\n\t\t */\n\t\treturn EFAULT;\n\t}\n\n\tas = proc_getas();\n\tif (as == NULL) {\n\t\t/*\n\t\t * No address space set up. This is probably also a\n\t\t * kernel fault early in boot.\n\t\t */\n\t\treturn EFAULT;\n\t}\n\n\t/* Assert that the address space has been set up properly. */\n\tKASSERT(as->as_vbase1 != 0);\n\tKASSERT(as->as_pbase1 != 0);\n\tKASSERT(as->as_npages1 != 0);\n\tKASSERT(as->as_vbase2 != 0);\n\tKASSERT(as->as_pbase2 != 0);\n\tKASSERT(as->as_npages2 != 0);\n\tKASSERT(as->as_stackpbase != 0);\n\tKASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n\tKASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n\tKASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n\tKASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n\tKASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n\n\tvbase1 = as->as_vbase1;\n\tvtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n\tvbase2 = as->as_vbase2;\n\tvtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n\tstackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n\tstacktop = USERSTACK;\n\n\tif (faultaddress >= vbase1 && faultaddress < vtop1) {\n\t\tpaddr = (faultaddress - vbase1) + as->as_pbase1;\n\t}\n\telse if (faultaddress >= vbase2 && faultaddress < vtop2) {\n\t\tpaddr = (faultaddress - vbase2) + as->as_pbase2;\n\t}\n\telse if (faultaddress >= stackbase && faultaddress < stacktop) {\n\t\tpaddr = (faultaddress - stackbase) + as->as_stackpbase;\n\t}\n\telse {\n\t\treturn EFAULT;\n\t}\n\n\t/* make sure it's page-aligned */\n\tKASSERT((paddr & PAGE_FRAME) == paddr);\n\n\t/* Disable interrupts on this CPU while frobbing the TLB. */\n\tspl = splhigh();\n\n\tfor (i=0; i<NUM_TLB; i++) {\n\t\ttlb_read(&ehi, &elo, i);\n\t\tif (elo & TLBLO_VALID) {\n\t\t\tcontinue;\n\t\t}\n\t\tehi = faultaddress;\n\t\telo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n\t\tDEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n\t\ttlb_write(ehi, elo, i);\n\t\tsplx(spl);\n\t\treturn 0;\n\t}\n\n\tkprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n\tsplx(spl);\n\treturn EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[67,0],[67,0]],"newRange":[[67,0],[67,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[68,0],[68,0]],"newRange":[[68,0],[68,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,0]],"newRange":[[69,0],[69,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[70,0],[70,1]],"newRange":[[70,0],[70,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,1]],"newRange":[[71,0],[71,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,1]],"newRange":[[72,0],[72,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,1]],"newRange":[[73,0],[73,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,1]],"newRange":[[74,0],[74,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,1]],"newRange":[[75,0],[75,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,1]],"newRange":[[76,0],[76,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,0]],"newRange":[[77,0],[77,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,1]],"newRange":[[78,0],[78,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,0]],"newRange":[[79,0],[79,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,1]],"newRange":[[80,0],[80,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,0]],"newRange":[[81,0],[81,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,1]],"newRange":[[82,0],[82,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,5]],"newRange":[[83,0],[83,8]],"oldText":"\t    ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,2]],"newRange":[[84,0],[84,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,2]],"newRange":[[85,0],[85,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,5]],"newRange":[[86,0],[86,8]],"oldText":"\t    ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,5]],"newRange":[[87,0],[87,8]],"oldText":"\t    ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,2]],"newRange":[[88,0],[88,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,5]],"newRange":[[89,0],[89,8]],"oldText":"\t    ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,2]],"newRange":[[90,0],[90,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,1]],"newRange":[[91,0],[91,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,0]],"newRange":[[92,0],[92,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,1]],"newRange":[[93,0],[93,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,2]],"newRange":[[94,0],[94,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,3]],"newRange":[[95,0],[95,8]],"oldText":"\t\t ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,3]],"newRange":[[96,0],[96,8]],"oldText":"\t\t ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,3]],"newRange":[[97,0],[97,8]],"oldText":"\t\t ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,3]],"newRange":[[98,0],[98,8]],"oldText":"\t\t ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,2]],"newRange":[[99,0],[99,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,1]],"newRange":[[100,0],[100,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,0]],"newRange":[[101,0],[101,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,1]],"newRange":[[102,0],[102,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,1]],"newRange":[[103,0],[103,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,2]],"newRange":[[104,0],[104,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,3]],"newRange":[[105,0],[105,8]],"oldText":"\t\t ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,3]],"newRange":[[106,0],[106,8]],"oldText":"\t\t ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,3]],"newRange":[[107,0],[107,8]],"oldText":"\t\t ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,2]],"newRange":[[108,0],[108,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,1]],"newRange":[[109,0],[109,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,0]],"newRange":[[110,0],[110,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,1]],"newRange":[[111,0],[111,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,1]],"newRange":[[112,0],[112,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,1]],"newRange":[[113,0],[113,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,1]],"newRange":[[114,0],[114,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,1]],"newRange":[[115,0],[115,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,1]],"newRange":[[116,0],[116,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,1]],"newRange":[[117,0],[117,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,1]],"newRange":[[118,0],[118,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,1]],"newRange":[[119,0],[119,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,1]],"newRange":[[120,0],[120,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,1]],"newRange":[[121,0],[121,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,1]],"newRange":[[122,0],[122,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,1]],"newRange":[[123,0],[123,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,0]],"newRange":[[124,0],[124,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,1]],"newRange":[[125,0],[125,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,1]],"newRange":[[126,0],[126,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,1]],"newRange":[[127,0],[127,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,1]],"newRange":[[128,0],[128,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,1]],"newRange":[[129,0],[129,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,1]],"newRange":[[130,0],[130,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[131,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,1]],"newRange":[[132,0],[132,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,2]],"newRange":[[133,0],[133,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,1]],"newRange":[[134,0],[134,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,1]],"newRange":[[135,0],[135,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,2]],"newRange":[[136,0],[136,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,1]],"newRange":[[137,0],[137,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,1]],"newRange":[[138,0],[138,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,2]],"newRange":[[139,0],[139,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,1]],"newRange":[[140,0],[140,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,1]],"newRange":[[141,0],[141,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,2]],"newRange":[[142,0],[142,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,1]],"newRange":[[143,0],[143,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,0]],"newRange":[[144,0],[144,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,1]],"newRange":[[145,0],[145,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,1]],"newRange":[[146,0],[146,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[147,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,1]],"newRange":[[148,0],[148,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,1]],"newRange":[[149,0],[149,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,0]],"newRange":[[150,0],[150,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,1]],"newRange":[[151,0],[151,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,2]],"newRange":[[152,0],[152,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,2]],"newRange":[[153,0],[153,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,3]],"newRange":[[154,0],[154,12]],"oldText":"\t\t\t","newText":"            "}},{"type":"change","content":{"oldRange":[[155,0],[155,2]],"newRange":[[155,0],[155,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,2]],"newRange":[[156,0],[156,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,2]],"newRange":[[157,0],[157,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[158,0],[158,2]],"newRange":[[158,0],[158,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[159,0],[159,2]],"newRange":[[159,0],[159,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[160,0],[160,2]],"newRange":[[160,0],[160,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[161,0],[161,2]],"newRange":[[161,0],[161,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[162,0],[162,1]],"newRange":[[162,0],[162,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[163,0],[163,0]],"newRange":[[163,0],[163,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[164,0],[164,1]],"newRange":[[164,0],[164,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[165,0],[165,1]],"newRange":[[165,0],[165,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[166,0],[166,1]],"newRange":[[166,0],[166,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[167,0],[167,0]],"newRange":[[167,0],[167,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[67,2],[168,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[67,2],[168,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[67,0],[168,0]],"newRange":[[67,0],[67,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[66,0],[66,0]],"newRange":[[66,0],[167,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[66,0],[66,0]],"newRange":[[66,0],[66,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,0]],"newRange":[[67,0],[67,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,0]],"newRange":[[68,0],[68,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[153,0],[153,12]],"newRange":[[153,0],[153,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[157,0],[157,8]],"newRange":[[157,0],[157,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[158,0],[158,8]],"newRange":[[158,0],[158,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[159,0],[159,8]],"newRange":[[159,0],[159,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[160,0],[160,8]],"newRange":[[160,0],[160,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[161,0],[161,4]],"newRange":[[161,0],[161,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[162,0],[162,4]],"newRange":[[162,0],[162,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[163,0],[163,4]],"newRange":[[163,0],[163,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[164,0],[164,4]],"newRange":[[164,0],[164,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[165,0],[165,4]],"newRange":[[165,0],[165,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[166,0],[166,0]],"newRange":[[166,0],[166,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[167,0]],"newRange":[[66,0],[66,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[65,0],[65,0]],"newRange":[[65,0],[166,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,12]],"newRange":[[87,0],[87,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,12]],"newRange":[[88,0],[88,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,12]],"newRange":[[93,0],[93,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[95,0],[95,12]],"newRange":[[95,0],[95,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,12]],"newRange":[[96,0],[96,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[97,0],[97,12]],"newRange":[[97,0],[97,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,12]],"newRange":[[140,0],[140,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,8]],"newRange":[[146,0],[146,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,12]],"newRange":[[150,0],[150,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[151,0],[151,12]],"newRange":[[151,0],[151,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[152,0],[152,16]],"newRange":[[152,0],[152,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[153,0],[153,12]],"newRange":[[153,0],[153,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[154,0],[154,12]],"newRange":[[154,0],[154,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[155,0],[155,12]],"newRange":[[155,0],[155,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[156,0],[156,12]],"newRange":[[156,0],[156,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[157,0],[157,12]],"newRange":[[157,0],[157,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[158,0],[158,12]],"newRange":[[158,0],[158,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[159,0],[159,12]],"newRange":[[159,0],[159,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[160,0],[160,8]],"newRange":[[160,0],[160,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[161,0],[161,8]],"newRange":[[161,0],[161,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[162,0],[162,8]],"newRange":[[162,0],[162,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[163,0],[163,8]],"newRange":[[163,0],[163,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[164,0],[164,8]],"newRange":[[164,0],[164,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[165,0],[165,4]],"newRange":[[165,0],[165,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[65,6],[166,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[65,6],[166,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[65,0],[166,0]],"newRange":[[65,0],[65,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[64,0],[64,0]],"newRange":[[64,0],[165,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,12]],"newRange":[[87,0],[87,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,12]],"newRange":[[93,0],[93,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[95,0],[95,12]],"newRange":[[95,0],[95,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,12]],"newRange":[[96,0],[96,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,12]],"newRange":[[101,0],[101,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,12]],"newRange":[[139,0],[139,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,8]],"newRange":[[146,0],[146,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,12]],"newRange":[[149,0],[149,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[150,0],[150,12]],"newRange":[[150,0],[150,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[151,0],[151,16]],"newRange":[[151,0],[151,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[152,0],[152,12]],"newRange":[[152,0],[152,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[153,0],[153,12]],"newRange":[[153,0],[153,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[154,0],[154,12]],"newRange":[[154,0],[154,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[155,0],[155,12]],"newRange":[[155,0],[155,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[156,0],[156,12]],"newRange":[[156,0],[156,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[157,0],[157,12]],"newRange":[[157,0],[157,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[158,0],[158,12]],"newRange":[[158,0],[158,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[159,0],[159,8]],"newRange":[[159,0],[159,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[160,0],[160,8]],"newRange":[[160,0],[160,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[161,0],[161,8]],"newRange":[[161,0],[161,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[162,0],[162,8]],"newRange":[[162,0],[162,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[163,0],[163,8]],"newRange":[[163,0],[163,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[164,0],[164,4]],"newRange":[[164,0],[164,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[64,6],[165,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[64,6],[165,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[64,0],[165,0]],"newRange":[[64,0],[64,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[63,0],[63,0]],"newRange":[[63,0],[164,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,12]],"newRange":[[93,0],[93,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,12]],"newRange":[[95,0],[95,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,12]],"newRange":[[100,0],[100,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,12]],"newRange":[[101,0],[101,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,12]],"newRange":[[138,0],[138,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,8]],"newRange":[[146,0],[146,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,12]],"newRange":[[148,0],[148,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,12]],"newRange":[[149,0],[149,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,16]],"newRange":[[150,0],[150,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[151,0],[151,12]],"newRange":[[151,0],[151,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,12]],"newRange":[[152,0],[152,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,12]],"newRange":[[153,0],[153,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,12]],"newRange":[[154,0],[154,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,12]],"newRange":[[155,0],[155,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,12]],"newRange":[[156,0],[156,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,12]],"newRange":[[157,0],[157,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[158,0],[158,8]],"newRange":[[158,0],[158,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,8]],"newRange":[[159,0],[159,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,8]],"newRange":[[160,0],[160,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,8]],"newRange":[[161,0],[161,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[162,0],[162,8]],"newRange":[[162,0],[162,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[163,0],[163,4]],"newRange":[[163,0],[163,0]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[63,2],[164,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[63,2],[164,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[63,0],[164,0]],"newRange":[[63,0],[63,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[62,0],[62,0]],"newRange":[[62,0],[163,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[62,0],[62,0]],"newRange":[[62,0],[62,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[63,0],[63,0]],"newRange":[[63,0],[63,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[64,0],[64,0]],"newRange":[[64,0],[64,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,12]],"newRange":[[149,0],[149,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,4]],"newRange":[[160,0],[160,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,4]],"newRange":[[161,0],[161,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[162,0],[162,0]],"newRange":[[162,0],[162,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[62,2],[163,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[62,2],[163,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[62,0],[163,0]],"newRange":[[62,0],[62,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[61,0],[61,0]],"newRange":[[61,0],[162,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[61,0],[61,0]],"newRange":[[61,0],[61,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[62,0],[62,0]],"newRange":[[62,0],[62,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[63,0],[63,0]],"newRange":[[63,0],[63,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,8]],"newRange":[[146,0],[146,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[148,0],[148,12]],"newRange":[[148,0],[148,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,4]],"newRange":[[156,0],[156,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,4]],"newRange":[[160,0],[160,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,0]],"newRange":[[161,0],[161,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[61,2],[162,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[61,2],[162,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[61,0],[162,0]],"newRange":[[61,0],[61,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[60,0],[60,0]],"newRange":[[60,0],[161,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[60,0],[60,0]],"newRange":[[60,0],[60,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[61,0],[61,0]],"newRange":[[61,0],[61,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[62,0],[62,0]],"newRange":[[62,0],[62,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,8]],"newRange":[[146,0],[146,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,12]],"newRange":[[147,0],[147,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,4]],"newRange":[[155,0],[155,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[156,0],[156,4]],"newRange":[[156,0],[156,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,0]],"newRange":[[160,0],[160,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[60,2],[161,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[60,2],[161,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[60,0],[161,0]],"newRange":[[60,0],[60,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[59,0],[59,0]],"newRange":[[59,0],[160,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[59,0],[59,0]],"newRange":[[59,0],[59,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,0]],"newRange":[[60,0],[60,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,0]],"newRange":[[61,0],[61,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[146,0],[146,12]],"newRange":[[146,0],[146,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[154,0],[154,4]],"newRange":[[154,0],[154,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,4]],"newRange":[[155,0],[155,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,4]],"newRange":[[156,0],[156,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[159,0],[159,0]],"newRange":[[159,0],[159,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[59,6],[160,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[59,6],[160,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[59,0],[160,0]],"newRange":[[59,0],[59,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[58,0],[58,0]],"newRange":[[58,0],[159,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,12]],"newRange":[[76,0],[76,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,12]],"newRange":[[77,0],[77,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[78,0],[78,12]],"newRange":[[78,0],[78,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,12]],"newRange":[[87,0],[87,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,12]],"newRange":[[88,0],[88,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[89,0],[89,12]],"newRange":[[89,0],[89,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,12]],"newRange":[[95,0],[95,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,12]],"newRange":[[96,0],[96,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[97,0],[97,12]],"newRange":[[97,0],[97,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[98,0],[98,12]],"newRange":[[98,0],[98,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[99,0],[99,12]],"newRange":[[99,0],[99,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,12]],"newRange":[[124,0],[124,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,12]],"newRange":[[127,0],[127,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,12]],"newRange":[[143,0],[143,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[144,0],[144,12]],"newRange":[[144,0],[144,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[145,0],[145,16]],"newRange":[[145,0],[145,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[146,0],[146,12]],"newRange":[[146,0],[146,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[147,0],[147,12]],"newRange":[[147,0],[147,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[148,0],[148,12]],"newRange":[[148,0],[148,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[149,0],[149,12]],"newRange":[[149,0],[149,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[150,0],[150,12]],"newRange":[[150,0],[150,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[151,0],[151,12]],"newRange":[[151,0],[151,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[152,0],[152,12]],"newRange":[[152,0],[152,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,8]],"newRange":[[157,0],[157,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[58,6],[159,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[58,6],[159,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[58,0],[159,0]],"newRange":[[58,0],[58,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[57,0],[57,0]],"newRange":[[57,0],[158,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[76,0],[76,12]],"newRange":[[76,0],[76,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[77,0],[77,12]],"newRange":[[77,0],[77,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[78,0],[78,12]],"newRange":[[78,0],[78,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[87,0],[87,12]],"newRange":[[87,0],[87,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[88,0],[88,12]],"newRange":[[88,0],[88,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[89,0],[89,12]],"newRange":[[89,0],[89,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[95,0],[95,12]],"newRange":[[95,0],[95,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[96,0],[96,12]],"newRange":[[96,0],[96,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[97,0],[97,12]],"newRange":[[97,0],[97,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[98,0],[98,12]],"newRange":[[98,0],[98,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[123,0],[123,12]],"newRange":[[123,0],[123,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[126,0],[126,12]],"newRange":[[126,0],[126,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[142,0],[142,12]],"newRange":[[142,0],[142,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[143,0],[143,12]],"newRange":[[143,0],[143,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[144,0],[144,16]],"newRange":[[144,0],[144,20]],"oldText":"                ","newText":"                    "}},{"type":"change","content":{"oldRange":[[145,0],[145,12]],"newRange":[[145,0],[145,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[146,0],[146,12]],"newRange":[[146,0],[146,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[147,0],[147,12]],"newRange":[[147,0],[147,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[148,0],[148,12]],"newRange":[[148,0],[148,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[149,0],[149,12]],"newRange":[[149,0],[149,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[150,0],[150,12]],"newRange":[[150,0],[150,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[151,0],[151,12]],"newRange":[[151,0],[151,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,8]],"oldText":"    ","newText":"        "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[57,10],[158,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[57,10],[158,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[57,0],[158,0]],"newRange":[[57,0],[57,0]],"oldText":"        int\n        vm_fault(int faulttype, vaddr_t faultaddress)\n        {\n            // TODO\n            vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n            paddr_t paddr;\n            int i;\n            uint32_t ehi, elo;\n            struct addrspace *as;\n            int spl;\n            \n            faultaddress &= PAGE_FRAME;\n            \n            DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n            \n            switch (faulttype) {\n                case VM_FAULT_READONLY:\n                /* We always create pages read-write, so we can't get this */\n                panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n                case VM_FAULT_READ:\n                case VM_FAULT_WRITE:\n                break;\n                default:\n                return EINVAL;\n            }\n            \n            if (curproc == NULL) {\n                /*\n                * No process. This is probably a kernel fault early\n                * in boot. Return EFAULT so as to panic instead of\n                * getting into an infinite faulting loop.\n                */\n                return EFAULT;\n            }\n            \n            as = proc_getas();\n            if (as == NULL) {\n                /*\n                * No address space set up. This is probably also a\n                * kernel fault early in boot.\n                */\n                return EFAULT;\n            }\n            \n            /* Assert that the address space has been set up properly. */\n            KASSERT(as->as_vbase1 != 0);\n            KASSERT(as->as_pbase1 != 0);\n            KASSERT(as->as_npages1 != 0);\n            KASSERT(as->as_vbase2 != 0);\n            KASSERT(as->as_pbase2 != 0);\n            KASSERT(as->as_npages2 != 0);\n            KASSERT(as->as_stackpbase != 0);\n            KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n            KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n            KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n            KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n            KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n            \n            vbase1 = as->as_vbase1;\n            vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n            vbase2 = as->as_vbase2;\n            vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n            stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n            stacktop = USERSTACK;\n            \n            if (faultaddress >= vbase1 && faultaddress < vtop1) {\n                paddr = (faultaddress - vbase1) + as->as_pbase1;\n            }\n            else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n                paddr = (faultaddress - vbase2) + as->as_pbase2;\n            }\n            else if (faultaddress >= stackbase && faultaddress < stacktop) {\n                paddr = (faultaddress - stackbase) + as->as_stackpbase;\n            }\n            else {\n                return EFAULT;\n            }\n            \n            /* make sure it's page-aligned */\n            KASSERT((paddr & PAGE_FRAME) == paddr);\n            \n            /* Disable interrupts on this CPU while frobbing the TLB. */\n            spl = splhigh();\n            \n            for (i=0; i<NUM_TLB; i++) {\n                tlb_read(&ehi, &elo, i);\n                if (elo & TLBLO_VALID) {\n                    continue;\n                }\n                ehi = faultaddress;\n                elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n                DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n                tlb_write(ehi, elo, i);\n                splx(spl);\n                return 0;\n            }\n            \n            kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n            splx(spl);\n            return EFAULT;\n        }\n","newText":""}},{"type":"change","content":{"oldRange":[[56,0],[56,0]],"newRange":[[56,0],[157,0]],"oldText":"","newText":"        int\n        vm_fault(int faulttype, vaddr_t faultaddress)\n        {\n            // TODO\n            vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n            paddr_t paddr;\n            int i;\n            uint32_t ehi, elo;\n            struct addrspace *as;\n            int spl;\n            \n            faultaddress &= PAGE_FRAME;\n            \n            DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n            \n            switch (faulttype) {\n                case VM_FAULT_READONLY:\n                /* We always create pages read-write, so we can't get this */\n                panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n                case VM_FAULT_READ:\n                case VM_FAULT_WRITE:\n                break;\n                default:\n                return EINVAL;\n            }\n            \n            if (curproc == NULL) {\n                /*\n                * No process. This is probably a kernel fault early\n                * in boot. Return EFAULT so as to panic instead of\n                * getting into an infinite faulting loop.\n                */\n                return EFAULT;\n            }\n            \n            as = proc_getas();\n            if (as == NULL) {\n                /*\n                * No address space set up. This is probably also a\n                * kernel fault early in boot.\n                */\n                return EFAULT;\n            }\n            \n            /* Assert that the address space has been set up properly. */\n            KASSERT(as->as_vbase1 != 0);\n            KASSERT(as->as_pbase1 != 0);\n            KASSERT(as->as_npages1 != 0);\n            KASSERT(as->as_vbase2 != 0);\n            KASSERT(as->as_pbase2 != 0);\n            KASSERT(as->as_npages2 != 0);\n            KASSERT(as->as_stackpbase != 0);\n            KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n            KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n            KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n            KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n            KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n            \n            vbase1 = as->as_vbase1;\n            vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n            vbase2 = as->as_vbase2;\n            vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n            stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n            stacktop = USERSTACK;\n            \n            if (faultaddress >= vbase1 && faultaddress < vtop1) {\n                paddr = (faultaddress - vbase1) + as->as_pbase1;\n            }\n            else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n                paddr = (faultaddress - vbase2) + as->as_pbase2;\n            }\n            else if (faultaddress >= stackbase && faultaddress < stacktop) {\n                paddr = (faultaddress - stackbase) + as->as_stackpbase;\n            }\n            else {\n                return EFAULT;\n            }\n            \n            /* make sure it's page-aligned */\n            KASSERT((paddr & PAGE_FRAME) == paddr);\n            \n            /* Disable interrupts on this CPU while frobbing the TLB. */\n            spl = splhigh();\n            \n            for (i=0; i<NUM_TLB; i++) {\n                tlb_read(&ehi, &elo, i);\n                if (elo & TLBLO_VALID) {\n                    continue;\n                }\n                ehi = faultaddress;\n                elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n                DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n                tlb_write(ehi, elo, i);\n                splx(spl);\n                return 0;\n            }\n            \n            kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n            splx(spl);\n            return EFAULT;\n        }\n"}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,16]],"newRange":[[72,0],[72,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[73,0],[73,16]],"newRange":[[73,0],[73,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[74,0],[74,16]],"newRange":[[74,0],[74,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[75,0],[75,16]],"newRange":[[75,0],[75,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[76,0],[76,16]],"newRange":[[76,0],[76,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[77,0],[77,16]],"newRange":[[77,0],[77,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[78,0],[78,16]],"newRange":[[78,0],[78,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[79,0],[79,16]],"newRange":[[79,0],[79,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,16]],"newRange":[[83,0],[83,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[84,0],[84,16]],"newRange":[[84,0],[84,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[85,0],[85,16]],"newRange":[[85,0],[85,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[86,0],[86,16]],"newRange":[[86,0],[86,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[87,0],[87,16]],"newRange":[[87,0],[87,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[88,0],[88,16]],"newRange":[[88,0],[88,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[89,0],[89,12]],"newRange":[[89,0],[89,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,16]],"newRange":[[93,0],[93,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[94,0],[94,16]],"newRange":[[94,0],[94,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[95,0],[95,16]],"newRange":[[95,0],[95,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[96,0],[96,16]],"newRange":[[96,0],[96,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[97,0],[97,16]],"newRange":[[97,0],[97,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[98,0],[98,12]],"newRange":[[98,0],[98,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[99,0],[99,12]],"newRange":[[99,0],[99,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[100,0],[100,12]],"newRange":[[100,0],[100,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[101,0],[101,12]],"newRange":[[101,0],[101,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,12]],"newRange":[[107,0],[107,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,12]],"newRange":[[115,0],[115,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,12]],"newRange":[[119,0],[119,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,12]],"newRange":[[120,0],[120,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[121,0],[121,12]],"newRange":[[121,0],[121,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[122,0],[122,16]],"newRange":[[122,0],[122,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[123,0],[123,12]],"newRange":[[123,0],[123,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[124,0],[124,12]],"newRange":[[124,0],[124,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[125,0],[125,16]],"newRange":[[125,0],[125,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[126,0],[126,12]],"newRange":[[126,0],[126,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[127,0],[127,12]],"newRange":[[127,0],[127,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[128,0],[128,16]],"newRange":[[128,0],[128,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,16]],"newRange":[[131,0],[131,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,12]],"newRange":[[138,0],[138,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,12]],"newRange":[[139,0],[139,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[140,0],[140,12]],"newRange":[[140,0],[140,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[141,0],[141,16]],"newRange":[[141,0],[141,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[142,0],[142,16]],"newRange":[[142,0],[142,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[143,0],[143,20]],"newRange":[[143,0],[143,20]],"oldText":"                    ","newText":"                    "}},{"type":"change","content":{"oldRange":[[144,0],[144,16]],"newRange":[[144,0],[144,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[145,0],[145,16]],"newRange":[[145,0],[145,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[146,0],[146,16]],"newRange":[[146,0],[146,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[147,0],[147,16]],"newRange":[[147,0],[147,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[148,0],[148,16]],"newRange":[[148,0],[148,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[149,0],[149,16]],"newRange":[[149,0],[149,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[150,0],[150,16]],"newRange":[[150,0],[150,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[151,0],[151,12]],"newRange":[[151,0],[151,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[152,0],[152,12]],"newRange":[[152,0],[152,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[153,0],[153,12]],"newRange":[[153,0],[153,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[154,0],[154,12]],"newRange":[[154,0],[154,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[155,0],[155,12]],"newRange":[[155,0],[155,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,8]],"oldText":"        ","newText":"        "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[56,10],[157,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[56,10],[157,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[56,0],[157,0]],"newRange":[[56,0],[56,0]],"oldText":"        int\n        vm_fault(int faulttype, vaddr_t faultaddress)\n        {\n            // TODO\n            vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n            paddr_t paddr;\n            int i;\n            uint32_t ehi, elo;\n            struct addrspace *as;\n            int spl;\n            \n            faultaddress &= PAGE_FRAME;\n            \n            DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n            \n            switch (faulttype) {\n                case VM_FAULT_READONLY:\n                /* We always create pages read-write, so we can't get this */\n                panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n                case VM_FAULT_READ:\n                case VM_FAULT_WRITE:\n                break;\n                default:\n                return EINVAL;\n            }\n            \n            if (curproc == NULL) {\n                /*\n                * No process. This is probably a kernel fault early\n                * in boot. Return EFAULT so as to panic instead of\n                * getting into an infinite faulting loop.\n                */\n                return EFAULT;\n            }\n            \n            as = proc_getas();\n            if (as == NULL) {\n                /*\n                * No address space set up. This is probably also a\n                * kernel fault early in boot.\n                */\n                return EFAULT;\n            }\n            \n            /* Assert that the address space has been set up properly. */\n            KASSERT(as->as_vbase1 != 0);\n            KASSERT(as->as_pbase1 != 0);\n            KASSERT(as->as_npages1 != 0);\n            KASSERT(as->as_vbase2 != 0);\n            KASSERT(as->as_pbase2 != 0);\n            KASSERT(as->as_npages2 != 0);\n            KASSERT(as->as_stackpbase != 0);\n            KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n            KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n            KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n            KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n            KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n            \n            vbase1 = as->as_vbase1;\n            vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n            vbase2 = as->as_vbase2;\n            vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n            stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n            stacktop = USERSTACK;\n            \n            if (faultaddress >= vbase1 && faultaddress < vtop1) {\n                paddr = (faultaddress - vbase1) + as->as_pbase1;\n            }\n            else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n                paddr = (faultaddress - vbase2) + as->as_pbase2;\n            }\n            else if (faultaddress >= stackbase && faultaddress < stacktop) {\n                paddr = (faultaddress - stackbase) + as->as_stackpbase;\n            }\n            else {\n                return EFAULT;\n            }\n            \n            /* make sure it's page-aligned */\n            KASSERT((paddr & PAGE_FRAME) == paddr);\n            \n            /* Disable interrupts on this CPU while frobbing the TLB. */\n            spl = splhigh();\n            \n            for (i=0; i<NUM_TLB; i++) {\n                tlb_read(&ehi, &elo, i);\n                if (elo & TLBLO_VALID) {\n                    continue;\n                }\n                ehi = faultaddress;\n                elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n                DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n                tlb_write(ehi, elo, i);\n                splx(spl);\n                return 0;\n            }\n            \n            kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n            splx(spl);\n            return EFAULT;\n        }\n","newText":""}},{"type":"change","content":{"oldRange":[[55,0],[55,0]],"newRange":[[55,0],[156,0]],"oldText":"","newText":"        int\n        vm_fault(int faulttype, vaddr_t faultaddress)\n        {\n            // TODO\n            vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n            paddr_t paddr;\n            int i;\n            uint32_t ehi, elo;\n            struct addrspace *as;\n            int spl;\n            \n            faultaddress &= PAGE_FRAME;\n            \n            DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n            \n            switch (faulttype) {\n                case VM_FAULT_READONLY:\n                /* We always create pages read-write, so we can't get this */\n                panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n                case VM_FAULT_READ:\n                case VM_FAULT_WRITE:\n                break;\n                default:\n                return EINVAL;\n            }\n            \n            if (curproc == NULL) {\n                /*\n                * No process. This is probably a kernel fault early\n                * in boot. Return EFAULT so as to panic instead of\n                * getting into an infinite faulting loop.\n                */\n                return EFAULT;\n            }\n            \n            as = proc_getas();\n            if (as == NULL) {\n                /*\n                * No address space set up. This is probably also a\n                * kernel fault early in boot.\n                */\n                return EFAULT;\n            }\n            \n            /* Assert that the address space has been set up properly. */\n            KASSERT(as->as_vbase1 != 0);\n            KASSERT(as->as_pbase1 != 0);\n            KASSERT(as->as_npages1 != 0);\n            KASSERT(as->as_vbase2 != 0);\n            KASSERT(as->as_pbase2 != 0);\n            KASSERT(as->as_npages2 != 0);\n            KASSERT(as->as_stackpbase != 0);\n            KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n            KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n            KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n            KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n            KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n            \n            vbase1 = as->as_vbase1;\n            vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n            vbase2 = as->as_vbase2;\n            vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n            stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n            stacktop = USERSTACK;\n            \n            if (faultaddress >= vbase1 && faultaddress < vtop1) {\n                paddr = (faultaddress - vbase1) + as->as_pbase1;\n            }\n            else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n                paddr = (faultaddress - vbase2) + as->as_pbase2;\n            }\n            else if (faultaddress >= stackbase && faultaddress < stacktop) {\n                paddr = (faultaddress - stackbase) + as->as_stackpbase;\n            }\n            else {\n                return EFAULT;\n            }\n            \n            /* make sure it's page-aligned */\n            KASSERT((paddr & PAGE_FRAME) == paddr);\n            \n            /* Disable interrupts on this CPU while frobbing the TLB. */\n            spl = splhigh();\n            \n            for (i=0; i<NUM_TLB; i++) {\n                tlb_read(&ehi, &elo, i);\n                if (elo & TLBLO_VALID) {\n                    continue;\n                }\n                ehi = faultaddress;\n                elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n                DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n                tlb_write(ehi, elo, i);\n                splx(spl);\n                return 0;\n            }\n            \n            kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n            splx(spl);\n            return EFAULT;\n        }\n"}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,16]],"newRange":[[71,0],[71,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,16]],"newRange":[[72,0],[72,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,16]],"newRange":[[73,0],[73,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,16]],"newRange":[[74,0],[74,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,16]],"newRange":[[75,0],[75,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,16]],"newRange":[[76,0],[76,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,16]],"newRange":[[77,0],[77,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[78,0],[78,16]],"newRange":[[78,0],[78,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,16]],"newRange":[[82,0],[82,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,16]],"newRange":[[83,0],[83,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,16]],"newRange":[[84,0],[84,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,16]],"newRange":[[85,0],[85,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,16]],"newRange":[[86,0],[86,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,16]],"newRange":[[87,0],[87,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,12]],"newRange":[[88,0],[88,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,12]],"newRange":[[89,0],[89,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,16]],"newRange":[[92,0],[92,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,16]],"newRange":[[93,0],[93,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,16]],"newRange":[[94,0],[94,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[95,0],[95,16]],"newRange":[[95,0],[95,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,16]],"newRange":[[96,0],[96,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[97,0],[97,12]],"newRange":[[97,0],[97,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,12]],"newRange":[[98,0],[98,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,12]],"newRange":[[99,0],[99,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,12]],"newRange":[[100,0],[100,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,12]],"newRange":[[101,0],[101,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,12]],"newRange":[[107,0],[107,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,12]],"newRange":[[115,0],[115,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,12]],"newRange":[[119,0],[119,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,12]],"newRange":[[120,0],[120,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,16]],"newRange":[[121,0],[121,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[122,0],[122,12]],"newRange":[[122,0],[122,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,12]],"newRange":[[123,0],[123,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,16]],"newRange":[[124,0],[124,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[125,0],[125,12]],"newRange":[[125,0],[125,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,12]],"newRange":[[126,0],[126,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,16]],"newRange":[[127,0],[127,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[128,0],[128,12]],"newRange":[[128,0],[128,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,16]],"newRange":[[130,0],[130,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,12]],"newRange":[[138,0],[138,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,12]],"newRange":[[139,0],[139,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,16]],"newRange":[[140,0],[140,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[141,0],[141,16]],"newRange":[[141,0],[141,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[142,0],[142,20]],"newRange":[[142,0],[142,16]],"oldText":"                    ","newText":"                "}},{"type":"change","content":{"oldRange":[[143,0],[143,16]],"newRange":[[143,0],[143,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[144,0],[144,16]],"newRange":[[144,0],[144,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[145,0],[145,16]],"newRange":[[145,0],[145,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[146,0],[146,16]],"newRange":[[146,0],[146,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[147,0],[147,16]],"newRange":[[147,0],[147,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[148,0],[148,16]],"newRange":[[148,0],[148,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[149,0],[149,16]],"newRange":[[149,0],[149,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[150,0],[150,12]],"newRange":[[150,0],[150,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,12]],"newRange":[[151,0],[151,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,12]],"newRange":[[152,0],[152,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,12]],"newRange":[[153,0],[153,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,12]],"newRange":[[154,0],[154,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,4]],"oldText":"        ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[55,6],[156,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[55,6],[156,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[55,0],[156,0]],"newRange":[[55,0],[55,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[54,0],[54,0]],"newRange":[[54,0],[155,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,12]],"newRange":[[76,0],[76,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,12]],"newRange":[[77,0],[77,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,12]],"newRange":[[93,0],[93,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[95,0],[95,12]],"newRange":[[95,0],[95,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,12]],"newRange":[[120,0],[120,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,12]],"newRange":[[123,0],[123,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,12]],"newRange":[[126,0],[126,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,12]],"newRange":[[139,0],[139,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[140,0],[140,12]],"newRange":[[140,0],[140,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[141,0],[141,16]],"newRange":[[141,0],[141,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[142,0],[142,12]],"newRange":[[142,0],[142,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[143,0],[143,12]],"newRange":[[143,0],[143,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[144,0],[144,12]],"newRange":[[144,0],[144,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[145,0],[145,12]],"newRange":[[145,0],[145,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[146,0],[146,12]],"newRange":[[146,0],[146,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[147,0],[147,12]],"newRange":[[147,0],[147,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[148,0],[148,12]],"newRange":[[148,0],[148,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,4]],"newRange":[[154,0],[154,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[155,0]],"newRange":[[54,0],[54,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[154,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,12]],"newRange":[[76,0],[76,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,12]],"newRange":[[93,0],[93,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,12]],"newRange":[[119,0],[119,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,12]],"newRange":[[122,0],[122,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,12]],"newRange":[[125,0],[125,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,12]],"newRange":[[128,0],[128,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,12]],"newRange":[[138,0],[138,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,12]],"newRange":[[139,0],[139,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[140,0],[140,16]],"newRange":[[140,0],[140,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[141,0],[141,12]],"newRange":[[141,0],[141,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[142,0],[142,12]],"newRange":[[142,0],[142,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[143,0],[143,12]],"newRange":[[143,0],[143,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[144,0],[144,12]],"newRange":[[144,0],[144,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[145,0],[145,12]],"newRange":[[145,0],[145,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[146,0],[146,12]],"newRange":[[146,0],[146,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[147,0],[147,12]],"newRange":[[147,0],[147,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,4]],"newRange":[[153,0],[153,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[154,0]],"newRange":[[53,0],[53,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[52,0],[52,0]],"newRange":[[52,0],[153,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,12]],"newRange":[[89,0],[89,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,12]],"newRange":[[93,0],[93,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,12]],"newRange":[[121,0],[121,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,12]],"newRange":[[124,0],[124,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,12]],"newRange":[[127,0],[127,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,12]],"newRange":[[138,0],[138,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,16]],"newRange":[[139,0],[139,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[140,0],[140,12]],"newRange":[[140,0],[140,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[141,0],[141,12]],"newRange":[[141,0],[141,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[142,0],[142,12]],"newRange":[[142,0],[142,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[143,0],[143,12]],"newRange":[[143,0],[143,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[144,0],[144,12]],"newRange":[[144,0],[144,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[145,0],[145,12]],"newRange":[[145,0],[145,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[146,0],[146,12]],"newRange":[[146,0],[146,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[153,0]],"newRange":[[52,0],[52,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[51,0],[51,0]],"newRange":[[51,0],[152,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,12]],"newRange":[[78,0],[78,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,12]],"newRange":[[88,0],[88,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,12]],"newRange":[[89,0],[89,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,12]],"newRange":[[120,0],[120,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,12]],"newRange":[[123,0],[123,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,12]],"newRange":[[126,0],[126,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,16]],"newRange":[[138,0],[138,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,12]],"newRange":[[139,0],[139,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,12]],"newRange":[[140,0],[140,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,12]],"newRange":[[141,0],[141,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,12]],"newRange":[[142,0],[142,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,12]],"newRange":[[143,0],[143,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,12]],"newRange":[[144,0],[144,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,12]],"newRange":[[145,0],[145,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,8]],"newRange":[[146,0],[146,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,4]],"newRange":[[151,0],[151,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[51,0],[152,0]],"newRange":[[51,0],[51,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[50,0],[50,0]],"newRange":[[50,0],[151,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[50,0],[50,0]],"newRange":[[50,0],[50,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[51,0],[51,0]],"newRange":[[51,0],[51,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[52,0],[52,0]],"newRange":[[52,0],[52,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,0]],"newRange":[[150,0],[150,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[50,0],[151,0]],"newRange":[[50,0],[50,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[150,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[49,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[50,0],[50,0]],"newRange":[[50,0],[50,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[51,0],[51,0]],"newRange":[[51,0],[51,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,0]],"newRange":[[149,0],[149,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[49,0],[150,0]],"newRange":[[49,0],[49,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[48,0],[48,0]],"newRange":[[48,0],[149,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[48,0],[48,0]],"newRange":[[48,0],[48,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[49,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[50,0],[50,0]],"newRange":[[50,0],[50,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,0]],"newRange":[[148,0],[148,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[48,0],[149,0]],"newRange":[[48,0],[48,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[148,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[47,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,0]],"newRange":[[48,0],[48,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[49,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[147,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[148,0]],"newRange":[[47,0],[47,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[46,0],[46,0]],"newRange":[[46,0],[147,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,12]],"newRange":[[76,0],[76,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,12]],"newRange":[[77,0],[77,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[78,0],[78,12]],"newRange":[[78,0],[78,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,12]],"newRange":[[87,0],[87,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,12]],"newRange":[[115,0],[115,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,12]],"newRange":[[121,0],[121,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,16]],"newRange":[[133,0],[133,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,12]],"newRange":[[138,0],[138,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,12]],"newRange":[[139,0],[139,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[140,0],[140,12]],"newRange":[[140,0],[140,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[147,0]],"newRange":[[46,0],[46,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[45,0],[45,0]],"newRange":[[45,0],[146,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,12]],"newRange":[[76,0],[76,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,12]],"newRange":[[77,0],[77,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,12]],"newRange":[[120,0],[120,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,16]],"newRange":[[132,0],[132,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,12]],"newRange":[[138,0],[138,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,12]],"newRange":[[139,0],[139,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[146,0]],"newRange":[[45,0],[45,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[44,0],[44,0]],"newRange":[[44,0],[145,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,12]],"newRange":[[76,0],[76,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,12]],"newRange":[[119,0],[119,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,16]],"newRange":[[131,0],[131,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,12]],"newRange":[[138,0],[138,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[145,0]],"newRange":[[44,0],[44,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[43,0],[43,0]],"newRange":[[43,0],[144,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,12]],"newRange":[[75,0],[75,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,12]],"newRange":[[115,0],[115,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,12]],"newRange":[[128,0],[128,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[130,0],[130,16]],"newRange":[[130,0],[130,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,12]],"newRange":[[137,0],[137,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,6],[144,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,6],[144,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,0],[144,0]],"newRange":[[43,0],[43,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[42,0],[42,0]],"newRange":[[42,0],[143,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,12]],"newRange":[[74,0],[74,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,12]],"newRange":[[127,0],[127,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[128,0],[128,12]],"newRange":[[128,0],[128,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[129,0],[129,16]],"newRange":[[129,0],[129,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,12]],"newRange":[[136,0],[136,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[143,0]],"newRange":[[42,0],[42,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[142,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,12]],"newRange":[[73,0],[73,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,12]],"newRange":[[78,0],[78,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,12]],"newRange":[[107,0],[107,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,12]],"newRange":[[126,0],[126,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[127,0],[127,12]],"newRange":[[127,0],[127,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[128,0],[128,16]],"newRange":[[128,0],[128,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,12]],"newRange":[[135,0],[135,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[142,0]],"newRange":[[41,0],[41,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[141,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[72,0],[72,12]],"newRange":[[72,0],[72,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,12]],"newRange":[[77,0],[77,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[78,0],[78,12]],"newRange":[[78,0],[78,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,12]],"newRange":[[115,0],[115,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,12]],"newRange":[[125,0],[125,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[126,0],[126,12]],"newRange":[[126,0],[126,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[127,0],[127,16]],"newRange":[[127,0],[127,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[128,0],[128,12]],"newRange":[[128,0],[128,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[134,0],[134,12]],"newRange":[[134,0],[134,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[141,0]],"newRange":[[40,0],[40,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[140,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,12]],"newRange":[[55,0],[55,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,12]],"newRange":[[70,0],[70,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,12]],"newRange":[[71,0],[71,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,12]],"newRange":[[76,0],[76,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,12]],"newRange":[[77,0],[77,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,12]],"newRange":[[78,0],[78,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,12]],"newRange":[[124,0],[124,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,12]],"newRange":[[125,0],[125,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,16]],"newRange":[[126,0],[126,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[127,0],[127,12]],"newRange":[[127,0],[127,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,12]],"newRange":[[128,0],[128,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,12]],"newRange":[[129,0],[129,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,12]],"newRange":[[130,0],[130,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,12]],"newRange":[[131,0],[131,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,12]],"newRange":[[132,0],[132,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,12]],"newRange":[[133,0],[133,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[140,0]],"newRange":[[39,0],[39,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[139,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[38,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,12]],"newRange":[[125,0],[125,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,0]],"newRange":[[138,0],[138,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[38,0],[139,0]],"newRange":[[38,0],[38,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[37,0],[37,0]],"newRange":[[37,0],[138,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[37,0],[37,0]],"newRange":[[37,0],[37,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[38,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,12]],"newRange":[[124,0],[124,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,0]],"newRange":[[137,0],[137,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[37,0],[138,0]],"newRange":[[37,0],[37,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[137,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[36,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[37,0],[37,0]],"newRange":[[37,0],[37,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[38,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,12]],"newRange":[[123,0],[123,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,0]],"newRange":[[136,0],[136,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[36,2],[137,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[36,2],[137,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[36,0],[137,0]],"newRange":[[36,0],[36,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[136,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[35,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[36,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[37,0],[37,0]],"newRange":[[37,0],[37,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[38,0],[38,4]],"newRange":[[38,0],[38,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,12]],"newRange":[[122,0],[122,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,0]],"newRange":[[135,0],[135,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[35,0],[136,0]],"newRange":[[35,0],[35,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[135,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[34,1]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[35,1]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[36,1]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[37,0],[37,4]],"newRange":[[37,0],[37,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[38,0],[38,4]],"newRange":[[38,0],[38,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[121,0],[121,12]],"newRange":[[121,0],[121,13]],"oldText":"            ","newText":"             "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[128,0],[128,8]],"newRange":[[128,0],[128,9]],"oldText":"        ","newText":"         "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,5]],"oldText":"    ","newText":"     "}},{"type":"change","content":{"oldRange":[[134,0],[134,0]],"newRange":[[134,0],[134,1]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[34,0],[135,0]],"newRange":[[34,0],[34,0]],"oldText":" int\n vm_fault(int faulttype, vaddr_t faultaddress)\n {\n     // TODO\n     vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n     paddr_t paddr;\n     int i;\n     uint32_t ehi, elo;\n     struct addrspace *as;\n     int spl;\n     \n     faultaddress &= PAGE_FRAME;\n     \n     DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n     \n     switch (faulttype) {\n         case VM_FAULT_READONLY:\n         /* We always create pages read-write, so we can't get this */\n         panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n         case VM_FAULT_READ:\n         case VM_FAULT_WRITE:\n         break;\n         default:\n         return EINVAL;\n     }\n     \n     if (curproc == NULL) {\n         /*\n         * No process. This is probably a kernel fault early\n         * in boot. Return EFAULT so as to panic instead of\n         * getting into an infinite faulting loop.\n         */\n         return EFAULT;\n     }\n     \n     as = proc_getas();\n     if (as == NULL) {\n         /*\n         * No address space set up. This is probably also a\n         * kernel fault early in boot.\n         */\n         return EFAULT;\n     }\n     \n     /* Assert that the address space has been set up properly. */\n     KASSERT(as->as_vbase1 != 0);\n     KASSERT(as->as_pbase1 != 0);\n     KASSERT(as->as_npages1 != 0);\n     KASSERT(as->as_vbase2 != 0);\n     KASSERT(as->as_pbase2 != 0);\n     KASSERT(as->as_npages2 != 0);\n     KASSERT(as->as_stackpbase != 0);\n     KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n     KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n     KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n     KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n     KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n     \n     vbase1 = as->as_vbase1;\n     vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n     vbase2 = as->as_vbase2;\n     vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n     stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n     stacktop = USERSTACK;\n     \n     if (faultaddress >= vbase1 && faultaddress < vtop1) {\n         paddr = (faultaddress - vbase1) + as->as_pbase1;\n     }\n     else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n         paddr = (faultaddress - vbase2) + as->as_pbase2;\n     }\n     else if (faultaddress >= stackbase && faultaddress < stacktop) {\n         paddr = (faultaddress - stackbase) + as->as_stackpbase;\n     }\n     else {\n         return EFAULT;\n     }\n     \n     /* make sure it's page-aligned */\n     KASSERT((paddr & PAGE_FRAME) == paddr);\n     \n     /* Disable interrupts on this CPU while frobbing the TLB. */\n     spl = splhigh();\n     \n     for (i=0; i<NUM_TLB; i++) {\n         tlb_read(&ehi, &elo, i);\n         if (elo & TLBLO_VALID) {\n             continue;\n         }\n         ehi = faultaddress;\n         elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n         DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n         tlb_write(ehi, elo, i);\n         splx(spl);\n         return 0;\n     }\n     \n     kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n     splx(spl);\n     return EFAULT;\n }\n","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[33,0]],"newRange":[[33,0],[134,0]],"oldText":"","newText":" int\n vm_fault(int faulttype, vaddr_t faultaddress)\n {\n     // TODO\n     vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n     paddr_t paddr;\n     int i;\n     uint32_t ehi, elo;\n     struct addrspace *as;\n     int spl;\n     \n     faultaddress &= PAGE_FRAME;\n     \n     DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n     \n     switch (faulttype) {\n         case VM_FAULT_READONLY:\n         /* We always create pages read-write, so we can't get this */\n         panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n         case VM_FAULT_READ:\n         case VM_FAULT_WRITE:\n         break;\n         default:\n         return EINVAL;\n     }\n     \n     if (curproc == NULL) {\n         /*\n         * No process. This is probably a kernel fault early\n         * in boot. Return EFAULT so as to panic instead of\n         * getting into an infinite faulting loop.\n         */\n         return EFAULT;\n     }\n     \n     as = proc_getas();\n     if (as == NULL) {\n         /*\n         * No address space set up. This is probably also a\n         * kernel fault early in boot.\n         */\n         return EFAULT;\n     }\n     \n     /* Assert that the address space has been set up properly. */\n     KASSERT(as->as_vbase1 != 0);\n     KASSERT(as->as_pbase1 != 0);\n     KASSERT(as->as_npages1 != 0);\n     KASSERT(as->as_vbase2 != 0);\n     KASSERT(as->as_pbase2 != 0);\n     KASSERT(as->as_npages2 != 0);\n     KASSERT(as->as_stackpbase != 0);\n     KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n     KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n     KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n     KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n     KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n     \n     vbase1 = as->as_vbase1;\n     vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n     vbase2 = as->as_vbase2;\n     vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n     stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n     stacktop = USERSTACK;\n     \n     if (faultaddress >= vbase1 && faultaddress < vtop1) {\n         paddr = (faultaddress - vbase1) + as->as_pbase1;\n     }\n     else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n         paddr = (faultaddress - vbase2) + as->as_pbase2;\n     }\n     else if (faultaddress >= stackbase && faultaddress < stacktop) {\n         paddr = (faultaddress - stackbase) + as->as_stackpbase;\n     }\n     else {\n         return EFAULT;\n     }\n     \n     /* make sure it's page-aligned */\n     KASSERT((paddr & PAGE_FRAME) == paddr);\n     \n     /* Disable interrupts on this CPU while frobbing the TLB. */\n     spl = splhigh();\n     \n     for (i=0; i<NUM_TLB; i++) {\n         tlb_read(&ehi, &elo, i);\n         if (elo & TLBLO_VALID) {\n             continue;\n         }\n         ehi = faultaddress;\n         elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n         DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n         tlb_write(ehi, elo, i);\n         splx(spl);\n         return 0;\n     }\n     \n     kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n     splx(spl);\n     return EFAULT;\n }\n"}},{"type":"change","content":{"oldRange":[[33,0],[33,1]],"newRange":[[33,0],[33,1]],"oldText":" ","newText":" "}},{"type":"change","content":{"oldRange":[[34,0],[34,1]],"newRange":[[34,0],[34,1]],"oldText":" ","newText":" "}},{"type":"change","content":{"oldRange":[[35,0],[35,1]],"newRange":[[35,0],[35,1]],"oldText":" ","newText":" "}},{"type":"change","content":{"oldRange":[[36,0],[36,5]],"newRange":[[36,0],[36,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[37,0],[37,5]],"newRange":[[37,0],[37,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[38,0],[38,5]],"newRange":[[38,0],[38,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[39,0],[39,5]],"newRange":[[39,0],[39,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[40,0],[40,5]],"newRange":[[40,0],[40,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[41,0],[41,5]],"newRange":[[41,0],[41,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[42,0],[42,5]],"newRange":[[42,0],[42,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[43,0],[43,5]],"newRange":[[43,0],[43,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[44,0],[44,5]],"newRange":[[44,0],[44,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[45,0],[45,5]],"newRange":[[45,0],[45,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[46,0],[46,5]],"newRange":[[46,0],[46,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[47,0],[47,5]],"newRange":[[47,0],[47,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[48,0],[48,5]],"newRange":[[48,0],[48,1]],"oldText":"     ","newText":" "}},{"type":"change","content":{"oldRange":[[49,0],[49,9]],"newRange":[[49,0],[49,1]],"oldText":"         ","newText":" "}},{"type":"change","content":{"oldRange":[[50,0],[50,9]],"newRange":[[50,0],[50,1]],"oldText":"         ","newText":" "}},{"type":"change","content":{"oldRange":[[51,0],[51,9]],"newRange":[[51,0],[51,1]],"oldText":"         ","newText":" "}},{"type":"change","content":{"oldRange":[[52,0],[52,9]],"newRange":[[52,0],[52,1]],"oldText":"         ","newText":" "}},{"type":"change","content":{"oldRange":[[53,0],[53,9]],"newRange":[[53,0],[53,1]],"oldText":"         ","newText":" "}},{"type":"change","content":{"oldRange":[[54,0],[54,9]],"newRange":[[54,0],[54,1]],"oldText":"         ","newText":" "}},{"type":"change","content":{"oldRange":[[55,0],[55,9]],"newRange":[[55,0],[55,1]],"oldText":"         ","newText":" "}},{"type":"change","content":{"oldRange":[[56,0],[56,9]],"newRange":[[56,0],[56,1]],"oldText":"         ","newText":" "}},{"type":"change","content":{"oldRange":[[57,0],[57,5]],"newRange":[[57,0],[57,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[58,0],[58,5]],"newRange":[[58,0],[58,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[59,0],[59,5]],"newRange":[[59,0],[59,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[60,0],[60,9]],"newRange":[[60,0],[60,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,9]],"newRange":[[61,0],[61,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,9]],"newRange":[[62,0],[62,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,9]],"newRange":[[63,0],[63,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,9]],"newRange":[[64,0],[64,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,9]],"newRange":[[65,0],[65,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,5]],"newRange":[[66,0],[66,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[67,0],[67,5]],"newRange":[[67,0],[67,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[68,0],[68,5]],"newRange":[[68,0],[68,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,5]],"newRange":[[69,0],[69,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[70,0],[70,9]],"newRange":[[70,0],[70,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,9]],"newRange":[[71,0],[71,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,9]],"newRange":[[72,0],[72,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,9]],"newRange":[[73,0],[73,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,9]],"newRange":[[74,0],[74,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,5]],"newRange":[[75,0],[75,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[76,0],[76,5]],"newRange":[[76,0],[76,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[77,0],[77,5]],"newRange":[[77,0],[77,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[78,0],[78,5]],"newRange":[[78,0],[78,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[79,0],[79,5]],"newRange":[[79,0],[79,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[80,0],[80,5]],"newRange":[[80,0],[80,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[81,0],[81,5]],"newRange":[[81,0],[81,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[82,0],[82,5]],"newRange":[[82,0],[82,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[83,0],[83,5]],"newRange":[[83,0],[83,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[84,0],[84,5]],"newRange":[[84,0],[84,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[85,0],[85,5]],"newRange":[[85,0],[85,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[86,0],[86,5]],"newRange":[[86,0],[86,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[87,0],[87,5]],"newRange":[[87,0],[87,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[88,0],[88,5]],"newRange":[[88,0],[88,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[89,0],[89,5]],"newRange":[[89,0],[89,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[90,0],[90,5]],"newRange":[[90,0],[90,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[91,0],[91,5]],"newRange":[[91,0],[91,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[92,0],[92,5]],"newRange":[[92,0],[92,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[93,0],[93,5]],"newRange":[[93,0],[93,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[94,0],[94,5]],"newRange":[[94,0],[94,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[95,0],[95,5]],"newRange":[[95,0],[95,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[96,0],[96,5]],"newRange":[[96,0],[96,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[97,0],[97,5]],"newRange":[[97,0],[97,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[98,0],[98,5]],"newRange":[[98,0],[98,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[99,0],[99,9]],"newRange":[[99,0],[99,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,5]],"newRange":[[100,0],[100,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[101,0],[101,5]],"newRange":[[101,0],[101,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[102,0],[102,9]],"newRange":[[102,0],[102,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,5]],"newRange":[[103,0],[103,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[104,0],[104,5]],"newRange":[[104,0],[104,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[105,0],[105,9]],"newRange":[[105,0],[105,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,5]],"newRange":[[106,0],[106,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[107,0],[107,5]],"newRange":[[107,0],[107,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[108,0],[108,9]],"newRange":[[108,0],[108,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,5]],"newRange":[[109,0],[109,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[110,0],[110,5]],"newRange":[[110,0],[110,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[111,0],[111,5]],"newRange":[[111,0],[111,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[112,0],[112,5]],"newRange":[[112,0],[112,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[113,0],[113,5]],"newRange":[[113,0],[113,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[114,0],[114,5]],"newRange":[[114,0],[114,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[115,0],[115,5]],"newRange":[[115,0],[115,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[116,0],[116,5]],"newRange":[[116,0],[116,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[117,0],[117,5]],"newRange":[[117,0],[117,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[118,0],[118,9]],"newRange":[[118,0],[118,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,9]],"newRange":[[119,0],[119,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,13]],"newRange":[[120,0],[120,8]],"oldText":"             ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,9]],"newRange":[[121,0],[121,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,9]],"newRange":[[122,0],[122,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,9]],"newRange":[[123,0],[123,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,9]],"newRange":[[124,0],[124,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,9]],"newRange":[[125,0],[125,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,9]],"newRange":[[126,0],[126,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,9]],"newRange":[[127,0],[127,4]],"oldText":"         ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,5]],"newRange":[[128,0],[128,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,5]],"newRange":[[129,0],[129,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[130,0],[130,5]],"newRange":[[130,0],[130,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[131,0],[131,5]],"newRange":[[131,0],[131,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[132,0],[132,5]],"newRange":[[132,0],[132,0]],"oldText":"     ","newText":""}},{"type":"change","content":{"oldRange":[[133,0],[133,1]],"newRange":[[133,0],[133,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[134,0]],"newRange":[[33,0],[33,0]],"oldText":" int\n vm_fault(int faulttype, vaddr_t faultaddress)\n {\n // TODO\n vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n paddr_t paddr;\n int i;\n uint32_t ehi, elo;\n struct addrspace *as;\n int spl;\n \n faultaddress &= PAGE_FRAME;\n \n DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n \n switch (faulttype) {\n case VM_FAULT_READONLY:\n /* We always create pages read-write, so we can't get this */\n panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n case VM_FAULT_READ:\n case VM_FAULT_WRITE:\n break;\n default:\n return EINVAL;\n}\n\nif (curproc == NULL) {\n    /*\n    * No process. This is probably a kernel fault early\n    * in boot. Return EFAULT so as to panic instead of\n    * getting into an infinite faulting loop.\n    */\n    return EFAULT;\n}\n\nas = proc_getas();\nif (as == NULL) {\n    /*\n    * No address space set up. This is probably also a\n    * kernel fault early in boot.\n    */\n    return EFAULT;\n}\n\n/* Assert that the address space has been set up properly. */\nKASSERT(as->as_vbase1 != 0);\nKASSERT(as->as_pbase1 != 0);\nKASSERT(as->as_npages1 != 0);\nKASSERT(as->as_vbase2 != 0);\nKASSERT(as->as_pbase2 != 0);\nKASSERT(as->as_npages2 != 0);\nKASSERT(as->as_stackpbase != 0);\nKASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\nKASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\nKASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\nKASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\nKASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n\nvbase1 = as->as_vbase1;\nvtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\nvbase2 = as->as_vbase2;\nvtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\nstackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\nstacktop = USERSTACK;\n\nif (faultaddress >= vbase1 && faultaddress < vtop1) {\n    paddr = (faultaddress - vbase1) + as->as_pbase1;\n}\nelse if (faultaddress >= vbase2 && faultaddress < vtop2) {\n    paddr = (faultaddress - vbase2) + as->as_pbase2;\n}\nelse if (faultaddress >= stackbase && faultaddress < stacktop) {\n    paddr = (faultaddress - stackbase) + as->as_stackpbase;\n}\nelse {\n    return EFAULT;\n}\n\n/* make sure it's page-aligned */\nKASSERT((paddr & PAGE_FRAME) == paddr);\n\n/* Disable interrupts on this CPU while frobbing the TLB. */\nspl = splhigh();\n\nfor (i=0; i<NUM_TLB; i++) {\n    tlb_read(&ehi, &elo, i);\n    if (elo & TLBLO_VALID) {\n        continue;\n    }\n    ehi = faultaddress;\n    elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n    DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n    tlb_write(ehi, elo, i);\n    splx(spl);\n    return 0;\n}\n\nkprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\nsplx(spl);\nreturn EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[32,0],[32,0]],"newRange":[[32,0],[133,0]],"oldText":"","newText":" int\n vm_fault(int faulttype, vaddr_t faultaddress)\n {\n // TODO\n vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n paddr_t paddr;\n int i;\n uint32_t ehi, elo;\n struct addrspace *as;\n int spl;\n \n faultaddress &= PAGE_FRAME;\n \n DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n \n switch (faulttype) {\n case VM_FAULT_READONLY:\n /* We always create pages read-write, so we can't get this */\n panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n case VM_FAULT_READ:\n case VM_FAULT_WRITE:\n break;\n default:\n return EINVAL;\n}\n\nif (curproc == NULL) {\n    /*\n    * No process. This is probably a kernel fault early\n    * in boot. Return EFAULT so as to panic instead of\n    * getting into an infinite faulting loop.\n    */\n    return EFAULT;\n}\n\nas = proc_getas();\nif (as == NULL) {\n    /*\n    * No address space set up. This is probably also a\n    * kernel fault early in boot.\n    */\n    return EFAULT;\n}\n\n/* Assert that the address space has been set up properly. */\nKASSERT(as->as_vbase1 != 0);\nKASSERT(as->as_pbase1 != 0);\nKASSERT(as->as_npages1 != 0);\nKASSERT(as->as_vbase2 != 0);\nKASSERT(as->as_pbase2 != 0);\nKASSERT(as->as_npages2 != 0);\nKASSERT(as->as_stackpbase != 0);\nKASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\nKASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\nKASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\nKASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\nKASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n\nvbase1 = as->as_vbase1;\nvtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\nvbase2 = as->as_vbase2;\nvtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\nstackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\nstacktop = USERSTACK;\n\nif (faultaddress >= vbase1 && faultaddress < vtop1) {\n    paddr = (faultaddress - vbase1) + as->as_pbase1;\n}\nelse if (faultaddress >= vbase2 && faultaddress < vtop2) {\n    paddr = (faultaddress - vbase2) + as->as_pbase2;\n}\nelse if (faultaddress >= stackbase && faultaddress < stacktop) {\n    paddr = (faultaddress - stackbase) + as->as_stackpbase;\n}\nelse {\n    return EFAULT;\n}\n\n/* make sure it's page-aligned */\nKASSERT((paddr & PAGE_FRAME) == paddr);\n\n/* Disable interrupts on this CPU while frobbing the TLB. */\nspl = splhigh();\n\nfor (i=0; i<NUM_TLB; i++) {\n    tlb_read(&ehi, &elo, i);\n    if (elo & TLBLO_VALID) {\n        continue;\n    }\n    ehi = faultaddress;\n    elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n    DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n    tlb_write(ehi, elo, i);\n    splx(spl);\n    return 0;\n}\n\nkprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\nsplx(spl);\nreturn EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[32,0],[32,1]],"newRange":[[32,0],[32,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[33,1]],"newRange":[[33,0],[33,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[34,0],[34,1]],"newRange":[[34,0],[34,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[35,0],[35,1]],"newRange":[[35,0],[35,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[36,0],[36,1]],"newRange":[[36,0],[36,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[37,0],[37,1]],"newRange":[[37,0],[37,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[38,0],[38,1]],"newRange":[[38,0],[38,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,1]],"newRange":[[39,0],[39,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,1]],"newRange":[[40,0],[40,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,1]],"newRange":[[41,0],[41,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[42,0],[42,1]],"newRange":[[42,0],[42,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[43,0],[43,1]],"newRange":[[43,0],[43,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[44,0],[44,1]],"newRange":[[44,0],[44,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[45,0],[45,1]],"newRange":[[45,0],[45,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[46,0],[46,1]],"newRange":[[46,0],[46,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[47,0],[47,1]],"newRange":[[47,0],[47,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[48,0],[48,1]],"newRange":[[48,0],[48,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[49,0],[49,1]],"newRange":[[49,0],[49,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[50,0],[50,1]],"newRange":[[50,0],[50,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[51,0],[51,1]],"newRange":[[51,0],[51,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[52,0],[52,1]],"newRange":[[52,0],[52,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[53,0],[53,1]],"newRange":[[53,0],[53,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[54,0],[54,1]],"newRange":[[54,0],[54,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[55,0],[55,1]],"newRange":[[55,0],[55,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[56,0],[56,0]],"newRange":[[56,0],[56,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[57,0],[57,0]],"newRange":[[57,0],[57,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[58,0],[58,0]],"newRange":[[58,0],[58,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,0]],"newRange":[[65,0],[65,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[66,0],[66,0]],"newRange":[[66,0],[66,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[67,0],[67,0]],"newRange":[[67,0],[67,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[68,0],[68,0]],"newRange":[[68,0],[68,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,0]],"newRange":[[74,0],[74,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[75,0],[75,0]],"newRange":[[75,0],[75,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[76,0],[76,0]],"newRange":[[76,0],[76,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[77,0],[77,0]],"newRange":[[77,0],[77,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[78,0],[78,0]],"newRange":[[78,0],[78,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[79,0],[79,0]],"newRange":[[79,0],[79,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[80,0],[80,0]],"newRange":[[80,0],[80,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[81,0],[81,0]],"newRange":[[81,0],[81,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[82,0],[82,0]],"newRange":[[82,0],[82,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[83,0],[83,0]],"newRange":[[83,0],[83,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[84,0],[84,0]],"newRange":[[84,0],[84,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[85,0],[85,0]],"newRange":[[85,0],[85,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[86,0],[86,0]],"newRange":[[86,0],[86,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[87,0],[87,0]],"newRange":[[87,0],[87,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[88,0],[88,0]],"newRange":[[88,0],[88,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[89,0],[89,0]],"newRange":[[89,0],[89,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[90,0],[90,0]],"newRange":[[90,0],[90,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[91,0],[91,0]],"newRange":[[91,0],[91,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[92,0],[92,0]],"newRange":[[92,0],[92,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[93,0],[93,0]],"newRange":[[93,0],[93,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[94,0],[94,0]],"newRange":[[94,0],[94,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[95,0],[95,0]],"newRange":[[95,0],[95,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[96,0],[96,0]],"newRange":[[96,0],[96,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[97,0],[97,0]],"newRange":[[97,0],[97,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,0]],"newRange":[[99,0],[99,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[100,0],[100,0]],"newRange":[[100,0],[100,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,0]],"newRange":[[102,0],[102,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[103,0],[103,0]],"newRange":[[103,0],[103,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[105,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[106,0],[106,0]],"newRange":[[106,0],[106,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,0]],"newRange":[[108,0],[108,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[109,0],[109,0]],"newRange":[[109,0],[109,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[110,0],[110,0]],"newRange":[[110,0],[110,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[111,0],[111,0]],"newRange":[[111,0],[111,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[112,0],[112,0]],"newRange":[[112,0],[112,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[113,0],[113,0]],"newRange":[[113,0],[113,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[114,0],[114,0]],"newRange":[[114,0],[114,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[115,0],[115,0]],"newRange":[[115,0],[115,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[116,0],[116,0]],"newRange":[[116,0],[116,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[127,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[128,0],[128,0]],"newRange":[[128,0],[128,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[129,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[130,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[131,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[132,0],[132,0]],"newRange":[[132,0],[132,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[32,2],[133,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[32,2],[133,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[32,0],[133,0]],"newRange":[[32,0],[32,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n// TODO\nvaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\npaddr_t paddr;\nint i;\nuint32_t ehi, elo;\nstruct addrspace *as;\nint spl;\n\nfaultaddress &= PAGE_FRAME;\n\nDEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n\nswitch (faulttype) {\ncase VM_FAULT_READONLY:\n/* We always create pages read-write, so we can't get this */\npanic(\"genericvm: got VM_FAULT_READONLY\\n\");\ncase VM_FAULT_READ:\ncase VM_FAULT_WRITE:\nbreak;\ndefault:\nreturn EINVAL;\n}\n\nif (curproc == NULL) {\n    /*\n    * No process. This is probably a kernel fault early\n    * in boot. Return EFAULT so as to panic instead of\n    * getting into an infinite faulting loop.\n    */\n    return EFAULT;\n}\n\nas = proc_getas();\nif (as == NULL) {\n    /*\n    * No address space set up. This is probably also a\n    * kernel fault early in boot.\n    */\n    return EFAULT;\n}\n\n/* Assert that the address space has been set up properly. */\nKASSERT(as->as_vbase1 != 0);\nKASSERT(as->as_pbase1 != 0);\nKASSERT(as->as_npages1 != 0);\nKASSERT(as->as_vbase2 != 0);\nKASSERT(as->as_pbase2 != 0);\nKASSERT(as->as_npages2 != 0);\nKASSERT(as->as_stackpbase != 0);\nKASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\nKASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\nKASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\nKASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\nKASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n\nvbase1 = as->as_vbase1;\nvtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\nvbase2 = as->as_vbase2;\nvtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\nstackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\nstacktop = USERSTACK;\n\nif (faultaddress >= vbase1 && faultaddress < vtop1) {\n    paddr = (faultaddress - vbase1) + as->as_pbase1;\n}\nelse if (faultaddress >= vbase2 && faultaddress < vtop2) {\n    paddr = (faultaddress - vbase2) + as->as_pbase2;\n}\nelse if (faultaddress >= stackbase && faultaddress < stacktop) {\n    paddr = (faultaddress - stackbase) + as->as_stackpbase;\n}\nelse {\n    return EFAULT;\n}\n\n/* make sure it's page-aligned */\nKASSERT((paddr & PAGE_FRAME) == paddr);\n\n/* Disable interrupts on this CPU while frobbing the TLB. */\nspl = splhigh();\n\nfor (i=0; i<NUM_TLB; i++) {\n    tlb_read(&ehi, &elo, i);\n    if (elo & TLBLO_VALID) {\n        continue;\n    }\n    ehi = faultaddress;\n    elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n    DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n    tlb_write(ehi, elo, i);\n    splx(spl);\n    return 0;\n}\n\nkprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\nsplx(spl);\nreturn EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[132,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n// TODO\nvaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\npaddr_t paddr;\nint i;\nuint32_t ehi, elo;\nstruct addrspace *as;\nint spl;\n\nfaultaddress &= PAGE_FRAME;\n\nDEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n\nswitch (faulttype) {\ncase VM_FAULT_READONLY:\n/* We always create pages read-write, so we can't get this */\npanic(\"genericvm: got VM_FAULT_READONLY\\n\");\ncase VM_FAULT_READ:\ncase VM_FAULT_WRITE:\nbreak;\ndefault:\nreturn EINVAL;\n}\n\nif (curproc == NULL) {\n    /*\n    * No process. This is probably a kernel fault early\n    * in boot. Return EFAULT so as to panic instead of\n    * getting into an infinite faulting loop.\n    */\n    return EFAULT;\n}\n\nas = proc_getas();\nif (as == NULL) {\n    /*\n    * No address space set up. This is probably also a\n    * kernel fault early in boot.\n    */\n    return EFAULT;\n}\n\n/* Assert that the address space has been set up properly. */\nKASSERT(as->as_vbase1 != 0);\nKASSERT(as->as_pbase1 != 0);\nKASSERT(as->as_npages1 != 0);\nKASSERT(as->as_vbase2 != 0);\nKASSERT(as->as_pbase2 != 0);\nKASSERT(as->as_npages2 != 0);\nKASSERT(as->as_stackpbase != 0);\nKASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\nKASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\nKASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\nKASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\nKASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n\nvbase1 = as->as_vbase1;\nvtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\nvbase2 = as->as_vbase2;\nvtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\nstackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\nstacktop = USERSTACK;\n\nif (faultaddress >= vbase1 && faultaddress < vtop1) {\n    paddr = (faultaddress - vbase1) + as->as_pbase1;\n}\nelse if (faultaddress >= vbase2 && faultaddress < vtop2) {\n    paddr = (faultaddress - vbase2) + as->as_pbase2;\n}\nelse if (faultaddress >= stackbase && faultaddress < stacktop) {\n    paddr = (faultaddress - stackbase) + as->as_stackpbase;\n}\nelse {\n    return EFAULT;\n}\n\n/* make sure it's page-aligned */\nKASSERT((paddr & PAGE_FRAME) == paddr);\n\n/* Disable interrupts on this CPU while frobbing the TLB. */\nspl = splhigh();\n\nfor (i=0; i<NUM_TLB; i++) {\n    tlb_read(&ehi, &elo, i);\n    if (elo & TLBLO_VALID) {\n        continue;\n    }\n    ehi = faultaddress;\n    elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n    DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n    tlb_write(ehi, elo, i);\n    splx(spl);\n    return 0;\n}\n\nkprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\nsplx(spl);\nreturn EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[31,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[32,0],[32,0]],"newRange":[[32,0],[32,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[33,0]],"newRange":[[33,0],[33,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[34,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[35,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[36,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[37,0],[37,0]],"newRange":[[37,0],[37,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[38,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,0]],"newRange":[[42,0],[42,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,0]],"newRange":[[43,0],[43,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,0]],"newRange":[[44,0],[44,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,0]],"newRange":[[45,0],[45,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,0]],"newRange":[[46,0],[46,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[47,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,0]],"newRange":[[48,0],[48,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[49,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,0]],"newRange":[[50,0],[50,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,0]],"newRange":[[51,0],[51,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,0]],"newRange":[[52,0],[52,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[53,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,0]],"newRange":[[54,0],[54,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,0]],"newRange":[[55,0],[55,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,0]],"newRange":[[56,0],[56,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,0]],"newRange":[[57,0],[57,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,0]],"newRange":[[64,0],[64,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,0]],"newRange":[[65,0],[65,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,0]],"newRange":[[66,0],[66,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,0]],"newRange":[[67,0],[67,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,0]],"newRange":[[73,0],[73,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,0]],"newRange":[[74,0],[74,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,0]],"newRange":[[75,0],[75,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,0]],"newRange":[[76,0],[76,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,0]],"newRange":[[77,0],[77,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,0]],"newRange":[[78,0],[78,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,0]],"newRange":[[79,0],[79,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,0]],"newRange":[[80,0],[80,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,0]],"newRange":[[81,0],[81,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,0]],"newRange":[[82,0],[82,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,0]],"newRange":[[83,0],[83,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,0]],"newRange":[[84,0],[84,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,0]],"newRange":[[85,0],[85,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,0]],"newRange":[[86,0],[86,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,0]],"newRange":[[87,0],[87,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,0]],"newRange":[[88,0],[88,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,0]],"newRange":[[89,0],[89,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,0]],"newRange":[[90,0],[90,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,0]],"newRange":[[91,0],[91,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,0]],"newRange":[[92,0],[92,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,0]],"newRange":[[93,0],[93,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,0]],"newRange":[[94,0],[94,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,0]],"newRange":[[95,0],[95,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,0]],"newRange":[[96,0],[96,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,0]],"newRange":[[98,0],[98,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,0]],"newRange":[[99,0],[99,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,0]],"newRange":[[101,0],[101,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,0]],"newRange":[[102,0],[102,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,0]],"newRange":[[104,0],[104,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,0]],"newRange":[[105,0],[105,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,0]],"newRange":[[107,0],[107,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,0]],"newRange":[[108,0],[108,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,0]],"newRange":[[109,0],[109,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,0]],"newRange":[[110,0],[110,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,0]],"newRange":[[111,0],[111,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,0]],"newRange":[[112,0],[112,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,0]],"newRange":[[113,0],[113,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,0]],"newRange":[[114,0],[114,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,0]],"newRange":[[115,0],[115,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,0]],"newRange":[[126,0],[126,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[127,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,0]],"newRange":[[128,0],[128,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[129,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[130,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[131,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[31,2],[132,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[31,2],[132,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[31,0],[132,0]],"newRange":[[31,0],[31,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[131,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[30,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[31,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[32,0],[32,0]],"newRange":[[32,0],[32,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[33,4]],"newRange":[[33,0],[33,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[34,0],[34,4]],"newRange":[[34,0],[34,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[35,0],[35,4]],"newRange":[[35,0],[35,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[36,0],[36,4]],"newRange":[[36,0],[36,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[37,0],[37,4]],"newRange":[[37,0],[37,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[38,0],[38,4]],"newRange":[[38,0],[38,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[130,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[30,2],[131,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[30,2],[131,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[30,0],[131,0]],"newRange":[[30,0],[30,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[130,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[29,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[30,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[31,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,4]],"newRange":[[32,0],[32,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,4]],"newRange":[[33,0],[33,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,4]],"newRange":[[34,0],[34,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,4]],"newRange":[[35,0],[35,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,4]],"newRange":[[36,0],[36,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,4]],"newRange":[[37,0],[37,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,4]],"newRange":[[38,0],[38,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,4]],"newRange":[[44,0],[44,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[129,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[130,0]],"newRange":[[29,0],[29,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[129,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,12]],"newRange":[[44,0],[44,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[45,0],[45,12]],"newRange":[[45,0],[45,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[46,0],[46,12]],"newRange":[[46,0],[46,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[47,0],[47,12]],"newRange":[[47,0],[47,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[48,0],[48,12]],"newRange":[[48,0],[48,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[49,0],[49,12]],"newRange":[[49,0],[49,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[50,0],[50,12]],"newRange":[[50,0],[50,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[51,0],[51,12]],"newRange":[[51,0],[51,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,12]],"newRange":[[55,0],[55,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,12]],"newRange":[[69,0],[69,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,12]],"newRange":[[97,0],[97,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,12]],"newRange":[[100,0],[100,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,16]],"newRange":[[115,0],[115,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,12]],"newRange":[[119,0],[119,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,12]],"newRange":[[120,0],[120,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[121,0],[121,12]],"newRange":[[121,0],[121,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[122,0],[122,12]],"newRange":[[122,0],[122,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,8]],"newRange":[[127,0],[127,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[28,6],[129,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[28,6],[129,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[28,0],[129,0]],"newRange":[[28,0],[28,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[128,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,12]],"newRange":[[43,0],[43,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[44,0],[44,12]],"newRange":[[44,0],[44,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[45,0],[45,12]],"newRange":[[45,0],[45,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[46,0],[46,12]],"newRange":[[46,0],[46,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[47,0],[47,12]],"newRange":[[47,0],[47,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[48,0],[48,12]],"newRange":[[48,0],[48,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[49,0],[49,12]],"newRange":[[49,0],[49,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[50,0],[50,12]],"newRange":[[50,0],[50,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,12]],"newRange":[[54,0],[54,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[55,0],[55,12]],"newRange":[[55,0],[55,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,12]],"newRange":[[68,0],[68,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,12]],"newRange":[[93,0],[93,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,12]],"newRange":[[96,0],[96,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,12]],"newRange":[[99,0],[99,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,16]],"newRange":[[114,0],[114,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[115,0],[115,12]],"newRange":[[115,0],[115,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,12]],"newRange":[[119,0],[119,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,12]],"newRange":[[120,0],[120,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[121,0],[121,12]],"newRange":[[121,0],[121,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,8]],"newRange":[[126,0],[126,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[27,6],[128,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[27,6],[128,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[27,0],[128,0]],"newRange":[[27,0],[27,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[127,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,8]],"newRange":[[29,0],[29,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,12]],"newRange":[[42,0],[42,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[43,0],[43,12]],"newRange":[[43,0],[43,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[44,0],[44,12]],"newRange":[[44,0],[44,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[45,0],[45,12]],"newRange":[[45,0],[45,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[46,0],[46,12]],"newRange":[[46,0],[46,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[47,0],[47,12]],"newRange":[[47,0],[47,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[48,0],[48,12]],"newRange":[[48,0],[48,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[49,0],[49,12]],"newRange":[[49,0],[49,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,12]],"newRange":[[53,0],[53,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[54,0],[54,12]],"newRange":[[54,0],[54,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[55,0],[55,12]],"newRange":[[55,0],[55,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[67,0],[67,12]],"newRange":[[67,0],[67,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,12]],"newRange":[[95,0],[95,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,12]],"newRange":[[98,0],[98,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,12]],"newRange":[[101,0],[101,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,16]],"newRange":[[113,0],[113,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,12]],"newRange":[[115,0],[115,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[119,0],[119,12]],"newRange":[[119,0],[119,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[120,0],[120,12]],"newRange":[[120,0],[120,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[125,0],[125,8]],"newRange":[[125,0],[125,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[26,6],[127,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[26,6],[127,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[26,0],[127,0]],"newRange":[[26,0],[26,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[126,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[28,0],[28,8]],"newRange":[[28,0],[28,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,8]],"newRange":[[29,0],[29,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,12]],"newRange":[[41,0],[41,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,12]],"newRange":[[42,0],[42,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,12]],"newRange":[[43,0],[43,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,12]],"newRange":[[44,0],[44,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,12]],"newRange":[[45,0],[45,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,12]],"newRange":[[46,0],[46,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,12]],"newRange":[[47,0],[47,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,12]],"newRange":[[48,0],[48,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,12]],"newRange":[[52,0],[52,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,12]],"newRange":[[53,0],[53,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,12]],"newRange":[[54,0],[54,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,12]],"newRange":[[55,0],[55,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,12]],"newRange":[[62,0],[62,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,12]],"newRange":[[63,0],[63,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,12]],"newRange":[[64,0],[64,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,12]],"newRange":[[65,0],[65,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,12]],"newRange":[[66,0],[66,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,12]],"newRange":[[97,0],[97,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,12]],"newRange":[[100,0],[100,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,16]],"newRange":[[112,0],[112,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,12]],"newRange":[[115,0],[115,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,12]],"newRange":[[116,0],[116,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,12]],"newRange":[[117,0],[117,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,12]],"newRange":[[118,0],[118,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,12]],"newRange":[[119,0],[119,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,8]],"newRange":[[120,0],[120,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,8]],"newRange":[[121,0],[121,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,8]],"newRange":[[122,0],[122,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,8]],"newRange":[[123,0],[123,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,8]],"newRange":[[124,0],[124,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[25,0],[126,0]],"newRange":[[25,0],[25,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[125,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[25,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[26,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,4]],"newRange":[[31,0],[31,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,4]],"newRange":[[32,0],[32,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[33,0],[33,4]],"newRange":[[33,0],[33,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[34,0],[34,4]],"newRange":[[34,0],[34,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[35,0],[35,4]],"newRange":[[35,0],[35,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[36,0],[36,4]],"newRange":[[36,0],[36,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[37,0],[37,4]],"newRange":[[37,0],[37,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[38,0],[38,4]],"newRange":[[38,0],[38,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,4]],"newRange":[[108,0],[108,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,0]],"newRange":[[124,0],[124,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[24,0],[125,0]],"newRange":[[24,0],[24,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[124,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[23,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[25,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,4]],"newRange":[[31,0],[31,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,4]],"newRange":[[32,0],[32,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[33,0],[33,4]],"newRange":[[33,0],[33,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[34,0],[34,4]],"newRange":[[34,0],[34,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[35,0],[35,4]],"newRange":[[35,0],[35,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[36,0],[36,4]],"newRange":[[36,0],[36,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[37,0],[37,4]],"newRange":[[37,0],[37,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[38,0],[38,4]],"newRange":[[38,0],[38,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,4]],"newRange":[[107,0],[107,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,0]],"newRange":[[123,0],[123,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[124,0]],"newRange":[[23,0],[23,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[123,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[22,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[23,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,4]],"newRange":[[31,0],[31,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,4]],"newRange":[[32,0],[32,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[33,0],[33,4]],"newRange":[[33,0],[33,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[34,0],[34,4]],"newRange":[[34,0],[34,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[35,0],[35,4]],"newRange":[[35,0],[35,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[36,0],[36,4]],"newRange":[[36,0],[36,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[37,0],[37,4]],"newRange":[[37,0],[37,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[106,0],[106,4]],"newRange":[[106,0],[106,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,0]],"newRange":[[122,0],[122,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[22,0],[123,0]],"newRange":[[22,0],[22,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[21,0],[21,0]],"newRange":[[21,0],[122,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[21,0],[21,0]],"newRange":[[21,0],[21,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[22,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[23,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[24,0],[24,4]],"newRange":[[24,0],[24,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[31,0],[31,4]],"newRange":[[31,0],[31,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[32,0],[32,4]],"newRange":[[32,0],[32,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,4]],"newRange":[[33,0],[33,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,4]],"newRange":[[34,0],[34,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,4]],"newRange":[[35,0],[35,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,4]],"newRange":[[36,0],[36,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[45,0],[45,4]],"newRange":[[45,0],[45,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,4]],"newRange":[[46,0],[46,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[54,0],[54,4]],"newRange":[[54,0],[54,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,4]],"newRange":[[55,0],[55,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,4]],"newRange":[[102,0],[102,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,4]],"newRange":[[103,0],[103,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,4]],"newRange":[[104,0],[104,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,4]],"newRange":[[105,0],[105,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,4]],"newRange":[[117,0],[117,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[121,0],[121,0]],"newRange":[[121,0],[121,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[21,0],[122,0]],"newRange":[[21,0],[21,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[20,0],[20,0]],"newRange":[[20,0],[121,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[21,0],[21,4]],"newRange":[[21,0],[21,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,4]],"newRange":[[22,0],[22,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,8]],"newRange":[[23,0],[23,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[24,0],[24,8]],"newRange":[[24,0],[24,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[25,0],[25,8]],"newRange":[[25,0],[25,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[26,0],[26,8]],"newRange":[[26,0],[26,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[27,0],[27,8]],"newRange":[[27,0],[27,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[28,0],[28,8]],"newRange":[[28,0],[28,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[29,0],[29,8]],"newRange":[[29,0],[29,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,12]],"newRange":[[36,0],[36,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[37,0],[37,12]],"newRange":[[37,0],[37,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[38,0],[38,12]],"newRange":[[38,0],[38,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[39,0],[39,12]],"newRange":[[39,0],[39,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[40,0],[40,12]],"newRange":[[40,0],[40,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[41,0],[41,12]],"newRange":[[41,0],[41,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[42,0],[42,12]],"newRange":[[42,0],[42,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[43,0],[43,12]],"newRange":[[43,0],[43,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,12]],"newRange":[[47,0],[47,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[48,0],[48,12]],"newRange":[[48,0],[48,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[49,0],[49,12]],"newRange":[[49,0],[49,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[50,0],[50,12]],"newRange":[[50,0],[50,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[51,0],[51,12]],"newRange":[[51,0],[51,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[52,0],[52,12]],"newRange":[[52,0],[52,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,12]],"newRange":[[61,0],[61,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,12]],"newRange":[[89,0],[89,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,12]],"newRange":[[92,0],[92,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,12]],"newRange":[[95,0],[95,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,16]],"newRange":[[107,0],[107,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,12]],"newRange":[[114,0],[114,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,8]],"newRange":[[119,0],[119,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[20,0],[121,0]],"newRange":[[20,0],[20,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[19,0],[19,0]],"newRange":[[19,0],[120,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[19,0],[19,4]],"newRange":[[19,0],[19,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[21,0],[21,4]],"newRange":[[21,0],[21,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,8]],"newRange":[[22,0],[22,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[23,0],[23,8]],"newRange":[[23,0],[23,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[24,0],[24,8]],"newRange":[[24,0],[24,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[25,0],[25,8]],"newRange":[[25,0],[25,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[26,0],[26,8]],"newRange":[[26,0],[26,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[27,0],[27,8]],"newRange":[[27,0],[27,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[28,0],[28,8]],"newRange":[[28,0],[28,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[29,0],[29,8]],"newRange":[[29,0],[29,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,12]],"newRange":[[35,0],[35,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[36,0],[36,12]],"newRange":[[36,0],[36,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[37,0],[37,12]],"newRange":[[37,0],[37,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[38,0],[38,12]],"newRange":[[38,0],[38,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[39,0],[39,12]],"newRange":[[39,0],[39,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[40,0],[40,12]],"newRange":[[40,0],[40,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[41,0],[41,12]],"newRange":[[41,0],[41,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[42,0],[42,12]],"newRange":[[42,0],[42,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,12]],"newRange":[[46,0],[46,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[47,0],[47,12]],"newRange":[[47,0],[47,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[48,0],[48,12]],"newRange":[[48,0],[48,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[49,0],[49,12]],"newRange":[[49,0],[49,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[50,0],[50,12]],"newRange":[[50,0],[50,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[51,0],[51,12]],"newRange":[[51,0],[51,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[60,0],[60,12]],"newRange":[[60,0],[60,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,12]],"newRange":[[88,0],[88,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,12]],"newRange":[[91,0],[91,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,12]],"newRange":[[94,0],[94,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,16]],"newRange":[[106,0],[106,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[107,0],[107,12]],"newRange":[[107,0],[107,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[113,0],[113,12]],"newRange":[[113,0],[113,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[118,0],[118,8]],"newRange":[[118,0],[118,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[119,0],[119,4]],"newRange":[[119,0],[119,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[19,0],[120,0]],"newRange":[[19,0],[19,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[18,0]],"newRange":[[18,0],[119,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[18,0],[18,4]],"newRange":[[18,0],[18,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[19,0],[19,4]],"newRange":[[19,0],[19,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[21,0],[21,8]],"newRange":[[21,0],[21,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,8]],"newRange":[[22,0],[22,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,8]],"newRange":[[23,0],[23,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[24,0],[24,8]],"newRange":[[24,0],[24,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[25,0],[25,8]],"newRange":[[25,0],[25,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[26,0],[26,8]],"newRange":[[26,0],[26,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,8]],"newRange":[[27,0],[27,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,8]],"newRange":[[28,0],[28,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,8]],"newRange":[[29,0],[29,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[34,0],[34,12]],"newRange":[[34,0],[34,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,12]],"newRange":[[35,0],[35,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,12]],"newRange":[[36,0],[36,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,12]],"newRange":[[37,0],[37,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,12]],"newRange":[[38,0],[38,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,12]],"newRange":[[39,0],[39,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,12]],"newRange":[[40,0],[40,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,12]],"newRange":[[41,0],[41,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[45,0],[45,12]],"newRange":[[45,0],[45,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,12]],"newRange":[[46,0],[46,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,12]],"newRange":[[47,0],[47,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,12]],"newRange":[[48,0],[48,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,12]],"newRange":[[49,0],[49,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,12]],"newRange":[[50,0],[50,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[55,0],[55,12]],"newRange":[[55,0],[55,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,12]],"newRange":[[57,0],[57,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,12]],"newRange":[[58,0],[58,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,12]],"newRange":[[59,0],[59,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,12]],"newRange":[[87,0],[87,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,12]],"newRange":[[93,0],[93,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,16]],"newRange":[[105,0],[105,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,12]],"newRange":[[107,0],[107,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,12]],"newRange":[[110,0],[110,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,12]],"newRange":[[111,0],[111,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,12]],"newRange":[[112,0],[112,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,8]],"newRange":[[115,0],[115,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,8]],"newRange":[[116,0],[116,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,8]],"newRange":[[117,0],[117,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[118,0],[118,4]],"newRange":[[118,0],[118,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[119,0]],"newRange":[[18,0],[18,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[118,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[17,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[18,0]],"newRange":[[18,0],[18,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[19,0],[19,0]],"newRange":[[19,0],[19,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[21,0],[21,4]],"newRange":[[21,0],[21,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,4]],"newRange":[[22,0],[22,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,4]],"newRange":[[23,0],[23,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[24,0],[24,4]],"newRange":[[24,0],[24,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,4]],"newRange":[[31,0],[31,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,4]],"newRange":[[32,0],[32,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,4]],"newRange":[[53,0],[53,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,4]],"newRange":[[101,0],[101,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,4]],"newRange":[[116,0],[116,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[117,0],[117,0]],"newRange":[[117,0],[117,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[118,0]],"newRange":[[17,0],[17,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[117,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[16,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[17,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[18,0]],"newRange":[[18,0],[18,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[19,0],[19,4]],"newRange":[[19,0],[19,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[21,0],[21,4]],"newRange":[[21,0],[21,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,4]],"newRange":[[22,0],[22,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,4]],"newRange":[[23,0],[23,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[24,0],[24,4]],"newRange":[[24,0],[24,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,4]],"newRange":[[31,0],[31,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,0]],"newRange":[[116,0],[116,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[16,0],[117,0]],"newRange":[[16,0],[16,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[116,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[15,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[16,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[17,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[18,4]],"newRange":[[18,0],[18,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[19,0],[19,4]],"newRange":[[19,0],[19,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[21,0],[21,4]],"newRange":[[21,0],[21,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,4]],"newRange":[[22,0],[22,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,4]],"newRange":[[23,0],[23,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[24,0],[24,4]],"newRange":[[24,0],[24,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,0]],"newRange":[[115,0],[115,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[15,0],[116,0]],"newRange":[[15,0],[15,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[115,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[14,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[15,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[16,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[17,0],[17,4]],"newRange":[[17,0],[17,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[18,0],[18,4]],"newRange":[[18,0],[18,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[19,0],[19,4]],"newRange":[[19,0],[19,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[21,0],[21,4]],"newRange":[[21,0],[21,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[22,0],[22,4]],"newRange":[[22,0],[22,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[23,0],[23,4]],"newRange":[[23,0],[23,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[24,0],[24,4]],"newRange":[[24,0],[24,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[31,0],[31,8]],"newRange":[[31,0],[31,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[38,0],[38,4]],"newRange":[[38,0],[38,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[47,0],[47,4]],"newRange":[[47,0],[47,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[52,0],[52,8]],"newRange":[[52,0],[52,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[56,0],[56,4]],"newRange":[[56,0],[56,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,4]],"newRange":[[57,0],[57,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,4]],"newRange":[[82,0],[82,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,4]],"newRange":[[85,0],[85,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,4]],"newRange":[[88,0],[88,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[100,0],[100,8]],"newRange":[[100,0],[100,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[101,0],[101,12]],"newRange":[[101,0],[101,16]],"oldText":"            ","newText":"                "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,8]],"newRange":[[103,0],[103,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[109,0],[109,4]],"newRange":[[109,0],[109,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,4]],"newRange":[[110,0],[110,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,0]],"newRange":[[114,0],[114,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[14,0],[115,0]],"newRange":[[14,0],[14,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[13,0],[13,0]],"newRange":[[13,0],[114,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[13,0],[13,4]],"newRange":[[13,0],[13,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[14,0],[14,4]],"newRange":[[14,0],[14,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[15,0],[15,4]],"newRange":[[15,0],[15,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[16,0],[16,8]],"newRange":[[16,0],[16,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[17,0],[17,8]],"newRange":[[17,0],[17,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[18,0],[18,8]],"newRange":[[18,0],[18,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[19,0],[19,8]],"newRange":[[19,0],[19,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[20,0],[20,8]],"newRange":[[20,0],[20,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[21,0],[21,8]],"newRange":[[21,0],[21,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[22,0],[22,8]],"newRange":[[22,0],[22,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[23,0],[23,8]],"newRange":[[23,0],[23,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[24,0],[24,8]],"newRange":[[24,0],[24,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[25,0],[25,8]],"newRange":[[25,0],[25,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[26,0],[26,8]],"newRange":[[26,0],[26,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[27,0],[27,8]],"newRange":[[27,0],[27,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[28,0],[28,8]],"newRange":[[28,0],[28,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[29,0],[29,12]],"newRange":[[29,0],[29,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[30,0],[30,12]],"newRange":[[30,0],[30,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[31,0],[31,12]],"newRange":[[31,0],[31,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[32,0],[32,12]],"newRange":[[32,0],[32,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[33,0],[33,12]],"newRange":[[33,0],[33,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[34,0],[34,12]],"newRange":[[34,0],[34,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[35,0],[35,12]],"newRange":[[35,0],[35,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[36,0],[36,12]],"newRange":[[36,0],[36,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,12]],"newRange":[[40,0],[40,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[41,0],[41,12]],"newRange":[[41,0],[41,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[42,0],[42,12]],"newRange":[[42,0],[42,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[43,0],[43,12]],"newRange":[[43,0],[43,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[44,0],[44,12]],"newRange":[[44,0],[44,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[45,0],[45,12]],"newRange":[[45,0],[45,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,12]],"newRange":[[50,0],[50,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[51,0],[51,12]],"newRange":[[51,0],[51,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[52,0],[52,12]],"newRange":[[52,0],[52,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[53,0],[53,12]],"newRange":[[53,0],[53,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[54,0],[54,12]],"newRange":[[54,0],[54,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,12]],"newRange":[[79,0],[79,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,12]],"newRange":[[82,0],[82,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,12]],"newRange":[[85,0],[85,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,12]],"newRange":[[88,0],[88,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,12]],"newRange":[[98,0],[98,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[99,0],[99,12]],"newRange":[[99,0],[99,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[100,0],[100,16]],"newRange":[[100,0],[100,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[101,0],[101,12]],"newRange":[[101,0],[101,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,12]],"newRange":[[107,0],[107,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[13,6],[114,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[13,6],[114,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[13,0],[114,0]],"newRange":[[13,0],[13,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[115,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[14,0],[14,4]],"newRange":[[14,0],[14,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[15,0],[15,4]],"newRange":[[15,0],[15,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[16,0],[16,4]],"newRange":[[16,0],[16,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[17,0],[17,8]],"newRange":[[17,0],[17,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[18,0],[18,8]],"newRange":[[18,0],[18,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[19,0],[19,8]],"newRange":[[19,0],[19,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[20,0],[20,8]],"newRange":[[20,0],[20,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[21,0],[21,8]],"newRange":[[21,0],[21,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[22,0],[22,8]],"newRange":[[22,0],[22,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[23,0],[23,8]],"newRange":[[23,0],[23,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[24,0],[24,8]],"newRange":[[24,0],[24,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[25,0],[25,8]],"newRange":[[25,0],[25,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[26,0],[26,8]],"newRange":[[26,0],[26,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[27,0],[27,8]],"newRange":[[27,0],[27,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[28,0],[28,8]],"newRange":[[28,0],[28,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[29,0],[29,8]],"newRange":[[29,0],[29,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[30,0],[30,12]],"newRange":[[30,0],[30,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[31,0],[31,12]],"newRange":[[31,0],[31,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[32,0],[32,12]],"newRange":[[32,0],[32,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[33,0],[33,12]],"newRange":[[33,0],[33,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[34,0],[34,12]],"newRange":[[34,0],[34,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[35,0],[35,12]],"newRange":[[35,0],[35,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[36,0],[36,12]],"newRange":[[36,0],[36,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[37,0],[37,12]],"newRange":[[37,0],[37,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[41,0],[41,12]],"newRange":[[41,0],[41,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[42,0],[42,12]],"newRange":[[42,0],[42,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[43,0],[43,12]],"newRange":[[43,0],[43,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[44,0],[44,12]],"newRange":[[44,0],[44,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[45,0],[45,12]],"newRange":[[45,0],[45,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[46,0],[46,12]],"newRange":[[46,0],[46,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[51,0],[51,12]],"newRange":[[51,0],[51,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[52,0],[52,12]],"newRange":[[52,0],[52,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[53,0],[53,12]],"newRange":[[53,0],[53,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[54,0],[54,12]],"newRange":[[54,0],[54,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[55,0],[55,12]],"newRange":[[55,0],[55,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[80,0],[80,12]],"newRange":[[80,0],[80,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[81,0],[81,8]],"newRange":[[81,0],[81,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,12]],"newRange":[[83,0],[83,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[84,0],[84,8]],"newRange":[[84,0],[84,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,12]],"newRange":[[86,0],[86,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[87,0],[87,8]],"newRange":[[87,0],[87,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,12]],"newRange":[[89,0],[89,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[90,0],[90,8]],"newRange":[[90,0],[90,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[99,0],[99,12]],"newRange":[[99,0],[99,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[100,0],[100,12]],"newRange":[[100,0],[100,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[101,0],[101,16]],"newRange":[[101,0],[101,16]],"oldText":"                ","newText":"                "}},{"type":"change","content":{"oldRange":[[102,0],[102,12]],"newRange":[[102,0],[102,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[107,0],[107,12]],"newRange":[[107,0],[107,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,6],[115,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,6],[115,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,0],[115,0]],"newRange":[[14,0],[14,0]],"oldText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[116,0]],"oldText":"","newText":"    int\n    vm_fault(int faulttype, vaddr_t faultaddress)\n    {\n        // TODO\n        vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n        paddr_t paddr;\n        int i;\n        uint32_t ehi, elo;\n        struct addrspace *as;\n        int spl;\n        \n        faultaddress &= PAGE_FRAME;\n        \n        DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n        \n        switch (faulttype) {\n            case VM_FAULT_READONLY:\n            /* We always create pages read-write, so we can't get this */\n            panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n            case VM_FAULT_READ:\n            case VM_FAULT_WRITE:\n            break;\n            default:\n            return EINVAL;\n        }\n        \n        if (curproc == NULL) {\n            /*\n            * No process. This is probably a kernel fault early\n            * in boot. Return EFAULT so as to panic instead of\n            * getting into an infinite faulting loop.\n            */\n            return EFAULT;\n        }\n        \n        as = proc_getas();\n        if (as == NULL) {\n            /*\n            * No address space set up. This is probably also a\n            * kernel fault early in boot.\n            */\n            return EFAULT;\n        }\n        \n        /* Assert that the address space has been set up properly. */\n        KASSERT(as->as_vbase1 != 0);\n        KASSERT(as->as_pbase1 != 0);\n        KASSERT(as->as_npages1 != 0);\n        KASSERT(as->as_vbase2 != 0);\n        KASSERT(as->as_pbase2 != 0);\n        KASSERT(as->as_npages2 != 0);\n        KASSERT(as->as_stackpbase != 0);\n        KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n        KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n        KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n        KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n        KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n        \n        vbase1 = as->as_vbase1;\n        vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n        vbase2 = as->as_vbase2;\n        vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n        stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n        stacktop = USERSTACK;\n        \n        if (faultaddress >= vbase1 && faultaddress < vtop1) {\n            paddr = (faultaddress - vbase1) + as->as_pbase1;\n        }\n        else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n            paddr = (faultaddress - vbase2) + as->as_pbase2;\n        }\n        else if (faultaddress >= stackbase && faultaddress < stacktop) {\n            paddr = (faultaddress - stackbase) + as->as_stackpbase;\n        }\n        else {\n            return EFAULT;\n        }\n        \n        /* make sure it's page-aligned */\n        KASSERT((paddr & PAGE_FRAME) == paddr);\n        \n        /* Disable interrupts on this CPU while frobbing the TLB. */\n        spl = splhigh();\n        \n        for (i=0; i<NUM_TLB; i++) {\n            tlb_read(&ehi, &elo, i);\n            if (elo & TLBLO_VALID) {\n                continue;\n            }\n            ehi = faultaddress;\n            elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n            DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n            tlb_write(ehi, elo, i);\n            splx(spl);\n            return 0;\n        }\n        \n        kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n        splx(spl);\n        return EFAULT;\n    }\n"}},{"type":"change","content":{"oldRange":[[15,0],[15,4]],"newRange":[[15,0],[15,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[16,0],[16,4]],"newRange":[[16,0],[16,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[17,4]],"newRange":[[17,0],[17,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[18,8]],"newRange":[[18,0],[18,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[19,0],[19,8]],"newRange":[[19,0],[19,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[20,0],[20,8]],"newRange":[[20,0],[20,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[21,0],[21,8]],"newRange":[[21,0],[21,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,8]],"newRange":[[22,0],[22,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,8]],"newRange":[[23,0],[23,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[24,0],[24,8]],"newRange":[[24,0],[24,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[25,0],[25,8]],"newRange":[[25,0],[25,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[26,0],[26,8]],"newRange":[[26,0],[26,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,8]],"newRange":[[27,0],[27,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,8]],"newRange":[[28,0],[28,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,8]],"newRange":[[29,0],[29,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,12]],"newRange":[[31,0],[31,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[32,0],[32,12]],"newRange":[[32,0],[32,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,12]],"newRange":[[33,0],[33,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,12]],"newRange":[[34,0],[34,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,12]],"newRange":[[35,0],[35,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,12]],"newRange":[[36,0],[36,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,12]],"newRange":[[37,0],[37,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,12]],"newRange":[[38,0],[38,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,12]],"newRange":[[42,0],[42,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[43,0],[43,12]],"newRange":[[43,0],[43,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,12]],"newRange":[[44,0],[44,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,12]],"newRange":[[45,0],[45,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,12]],"newRange":[[46,0],[46,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,12]],"newRange":[[47,0],[47,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[49,0],[49,8]],"newRange":[[49,0],[49,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,8]],"newRange":[[50,0],[50,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,8]],"newRange":[[51,0],[51,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,12]],"newRange":[[52,0],[52,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[53,0],[53,12]],"newRange":[[53,0],[53,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,12]],"newRange":[[54,0],[54,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,12]],"newRange":[[55,0],[55,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,12]],"newRange":[[56,0],[56,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[58,0],[58,8]],"newRange":[[58,0],[58,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,8]],"newRange":[[59,0],[59,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,8]],"newRange":[[61,0],[61,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,8]],"newRange":[[62,0],[62,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,8]],"newRange":[[63,0],[63,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,8]],"newRange":[[64,0],[64,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,8]],"newRange":[[65,0],[65,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,8]],"newRange":[[66,0],[66,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,8]],"newRange":[[67,0],[67,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,8]],"newRange":[[68,0],[68,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,8]],"newRange":[[69,0],[69,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,8]],"newRange":[[71,0],[71,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,8]],"newRange":[[72,0],[72,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,8]],"newRange":[[73,0],[73,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,8]],"newRange":[[74,0],[74,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,8]],"newRange":[[75,0],[75,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,8]],"newRange":[[76,0],[76,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,8]],"newRange":[[77,0],[77,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,8]],"newRange":[[78,0],[78,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,8]],"newRange":[[79,0],[79,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,8]],"newRange":[[80,0],[80,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,12]],"newRange":[[81,0],[81,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[83,0],[83,8]],"newRange":[[83,0],[83,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,12]],"newRange":[[84,0],[84,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[86,0],[86,8]],"newRange":[[86,0],[86,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,12]],"newRange":[[87,0],[87,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[89,0],[89,8]],"newRange":[[89,0],[89,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,12]],"newRange":[[90,0],[90,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[92,0],[92,8]],"newRange":[[92,0],[92,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,8]],"newRange":[[93,0],[93,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,8]],"newRange":[[94,0],[94,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,8]],"newRange":[[95,0],[95,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,8]],"newRange":[[96,0],[96,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,8]],"newRange":[[97,0],[97,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,8]],"newRange":[[98,0],[98,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,8]],"newRange":[[99,0],[99,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,12]],"newRange":[[100,0],[100,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[101,0],[101,12]],"newRange":[[101,0],[101,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,16]],"newRange":[[102,0],[102,12]],"oldText":"                ","newText":"            "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[104,0],[104,12]],"newRange":[[104,0],[104,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,12]],"newRange":[[105,0],[105,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,12]],"newRange":[[106,0],[106,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,12]],"newRange":[[107,0],[107,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,12]],"newRange":[[108,0],[108,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,12]],"newRange":[[109,0],[109,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[111,0],[111,8]],"newRange":[[111,0],[111,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,8]],"newRange":[[112,0],[112,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,8]],"newRange":[[113,0],[113,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,8]],"newRange":[[114,0],[114,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,0]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,2],[116,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,2],[116,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,0],[116,0]],"newRange":[[15,0],[15,0]],"oldText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[117,0]],"oldText":"","newText":"int\nvm_fault(int faulttype, vaddr_t faultaddress)\n{\n    // TODO\n    vaddr_t vbase1, vtop1, vbase2, vtop2, stackbase, stacktop;\n    paddr_t paddr;\n    int i;\n    uint32_t ehi, elo;\n    struct addrspace *as;\n    int spl;\n    \n    faultaddress &= PAGE_FRAME;\n    \n    DEBUG(DB_VM, \"genericvm: fault: 0x%x\\n\", faultaddress);\n    \n    switch (faulttype) {\n        case VM_FAULT_READONLY:\n        /* We always create pages read-write, so we can't get this */\n        panic(\"genericvm: got VM_FAULT_READONLY\\n\");\n        case VM_FAULT_READ:\n        case VM_FAULT_WRITE:\n        break;\n        default:\n        return EINVAL;\n    }\n    \n    if (curproc == NULL) {\n        /*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */\n        return EFAULT;\n    }\n    \n    as = proc_getas();\n    if (as == NULL) {\n        /*\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */\n        return EFAULT;\n    }\n    \n    /* Assert that the address space has been set up properly. */\n    KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);\n    KASSERT((as->as_vbase1 & PAGE_FRAME) == as->as_vbase1);\n    KASSERT((as->as_pbase1 & PAGE_FRAME) == as->as_pbase1);\n    KASSERT((as->as_vbase2 & PAGE_FRAME) == as->as_vbase2);\n    KASSERT((as->as_pbase2 & PAGE_FRAME) == as->as_pbase2);\n    KASSERT((as->as_stackpbase & PAGE_FRAME) == as->as_stackpbase);\n    \n    vbase1 = as->as_vbase1;\n    vtop1 = vbase1 + as->as_npages1 * PAGE_SIZE;\n    vbase2 = as->as_vbase2;\n    vtop2 = vbase2 + as->as_npages2 * PAGE_SIZE;\n    stackbase = USERSTACK - VM_STACKPAGES * PAGE_SIZE;\n    stacktop = USERSTACK;\n    \n    if (faultaddress >= vbase1 && faultaddress < vtop1) {\n        paddr = (faultaddress - vbase1) + as->as_pbase1;\n    }\n    else if (faultaddress >= vbase2 && faultaddress < vtop2) {\n        paddr = (faultaddress - vbase2) + as->as_pbase2;\n    }\n    else if (faultaddress >= stackbase && faultaddress < stacktop) {\n        paddr = (faultaddress - stackbase) + as->as_stackpbase;\n    }\n    else {\n        return EFAULT;\n    }\n    \n    /* make sure it's page-aligned */\n    KASSERT((paddr & PAGE_FRAME) == paddr);\n    \n    /* Disable interrupts on this CPU while frobbing the TLB. */\n    spl = splhigh();\n    \n    for (i=0; i<NUM_TLB; i++) {\n        tlb_read(&ehi, &elo, i);\n        if (elo & TLBLO_VALID) {\n            continue;\n        }\n        ehi = faultaddress;\n        elo = paddr | TLBLO_DIRTY | TLBLO_VALID;\n        DEBUG(DB_VM, \"genericvm: 0x%x -> 0x%x\\n\", faultaddress, paddr);\n        tlb_write(ehi, elo, i);\n        splx(spl);\n        return 0;\n    }\n    \n    kprintf(\"genericvm: Ran out of TLB entries - cannot handle page fault\\n\");\n    splx(spl);\n    return EFAULT;\n}\n"}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[16,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[17,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[18,0]],"newRange":[[18,0],[18,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[19,0],[19,4]],"newRange":[[19,0],[19,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[21,0],[21,4]],"newRange":[[21,0],[21,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[22,0],[22,4]],"newRange":[[22,0],[22,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,4]],"newRange":[[23,0],[23,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[24,0],[24,4]],"newRange":[[24,0],[24,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[27,0],[27,4]],"newRange":[[27,0],[27,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[29,0],[29,4]],"newRange":[[29,0],[29,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[31,0],[31,4]],"newRange":[[31,0],[31,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[32,0],[32,8]],"newRange":[[32,0],[32,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[33,0],[33,8]],"newRange":[[33,0],[33,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[35,0],[35,8]],"newRange":[[35,0],[35,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[37,0],[37,8]],"newRange":[[37,0],[37,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[38,0],[38,8]],"newRange":[[38,0],[38,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[40,0],[40,4]],"newRange":[[40,0],[40,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[42,0],[42,4]],"newRange":[[42,0],[42,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[47,0],[47,8]],"newRange":[[47,0],[47,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[48,0],[48,8]],"newRange":[[48,0],[48,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[49,0],[49,4]],"newRange":[[49,0],[49,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[51,0],[51,4]],"newRange":[[51,0],[51,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[52,0],[52,4]],"newRange":[[52,0],[52,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[53,0],[53,8]],"newRange":[[53,0],[53,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[54,0],[54,8]],"newRange":[[54,0],[54,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[55,0],[55,8]],"newRange":[[55,0],[55,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[56,0],[56,8]],"newRange":[[56,0],[56,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[57,0],[57,8]],"newRange":[[57,0],[57,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[58,0],[58,4]],"newRange":[[58,0],[58,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[60,0],[60,4]],"newRange":[[60,0],[60,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[61,0],[61,4]],"newRange":[[61,0],[61,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[62,0],[62,4]],"newRange":[[62,0],[62,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[63,0],[63,4]],"newRange":[[63,0],[63,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[64,0],[64,4]],"newRange":[[64,0],[64,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[65,0],[65,4]],"newRange":[[65,0],[65,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[66,0],[66,4]],"newRange":[[66,0],[66,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[67,0],[67,4]],"newRange":[[67,0],[67,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[68,0],[68,4]],"newRange":[[68,0],[68,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[69,0],[69,4]],"newRange":[[69,0],[69,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[70,0],[70,4]],"newRange":[[70,0],[70,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[71,0],[71,4]],"newRange":[[71,0],[71,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[72,0],[72,4]],"newRange":[[72,0],[72,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[74,0],[74,4]],"newRange":[[74,0],[74,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[75,0],[75,4]],"newRange":[[75,0],[75,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[76,0],[76,4]],"newRange":[[76,0],[76,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[77,0],[77,4]],"newRange":[[77,0],[77,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[78,0],[78,4]],"newRange":[[78,0],[78,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[79,0],[79,4]],"newRange":[[79,0],[79,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[81,0],[81,4]],"newRange":[[81,0],[81,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[82,0],[82,8]],"newRange":[[82,0],[82,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[83,0],[83,4]],"newRange":[[83,0],[83,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[84,0],[84,4]],"newRange":[[84,0],[84,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[85,0],[85,8]],"newRange":[[85,0],[85,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[86,0],[86,4]],"newRange":[[86,0],[86,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[87,0],[87,4]],"newRange":[[87,0],[87,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[88,0],[88,8]],"newRange":[[88,0],[88,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[89,0],[89,4]],"newRange":[[89,0],[89,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[90,0],[90,4]],"newRange":[[90,0],[90,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[91,0],[91,8]],"newRange":[[91,0],[91,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[92,0],[92,4]],"newRange":[[92,0],[92,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[94,0],[94,4]],"newRange":[[94,0],[94,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[97,0],[97,4]],"newRange":[[97,0],[97,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[98,0],[98,4]],"newRange":[[98,0],[98,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[100,0],[100,4]],"newRange":[[100,0],[100,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[101,0],[101,8]],"newRange":[[101,0],[101,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[102,0],[102,8]],"newRange":[[102,0],[102,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[103,0],[103,12]],"newRange":[[103,0],[103,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[104,0],[104,8]],"newRange":[[104,0],[104,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[105,0],[105,8]],"newRange":[[105,0],[105,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[106,0],[106,8]],"newRange":[[106,0],[106,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[107,0],[107,8]],"newRange":[[107,0],[107,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[108,0],[108,8]],"newRange":[[108,0],[108,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[109,0],[109,8]],"newRange":[[109,0],[109,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[110,0],[110,8]],"newRange":[[110,0],[110,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[111,0],[111,4]],"newRange":[[111,0],[111,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[113,0],[113,4]],"newRange":[[113,0],[113,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[114,0],[114,4]],"newRange":[[114,0],[114,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[115,0],[115,4]],"newRange":[[115,0],[115,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[116,0],[116,0]],"newRange":[[116,0],[116,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[16,2],[117,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[116,1],[116,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[116,1],[116,1]],"newRange":[[116,1],[117,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[117,0],[117,0]],"newRange":[[117,0],[117,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[117,0],[117,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[133,0],[133,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[112,0],[112,4]],"newRange":[[112,0],[112,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[99,0],[99,4]],"newRange":[[99,0],[99,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[96,0],[96,4]],"newRange":[[96,0],[96,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[93,0],[93,4]],"newRange":[[93,0],[93,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[80,0],[80,4]],"newRange":[[80,0],[80,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[59,0],[59,4]],"newRange":[[59,0],[59,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[50,0],[50,4]],"newRange":[[50,0],[50,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,4]],"newRange":[[41,0],[41,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[30,0],[30,4]],"newRange":[[30,0],[30,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[26,0],[26,4]],"newRange":[[26,0],[26,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[169,0],[170,0]],"newRange":[[169,0],[169,0]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[133,0],[133,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[133,0],[168,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[133,0],[169,0]],"newRange":[[133,0],[133,0]],"oldText":"/*\n * Wrap ram_stealmem in a spinlock.\n */\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n\tpaddr_t addr;\n\tspinlock_acquire(&stealmem_lock);\n\n\taddr = ram_stealmem(npages);\n\n\tspinlock_release(&stealmem_lock);\n\treturn addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n\t// TODO\n\tpaddr_t pa;\n\tpa = getppages(npages);\n\tif (pa==0) {\n\t\treturn 0;\n\t}\n\treturn PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n\t// TODO\n\t(void)addr;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[132,0],[132,0]],"newRange":[[132,0],[168,0]],"oldText":"","newText":"/*\n * Wrap ram_stealmem in a spinlock.\n */\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n\tpaddr_t addr;\n\tspinlock_acquire(&stealmem_lock);\n\n\taddr = ram_stealmem(npages);\n\n\tspinlock_release(&stealmem_lock);\n\treturn addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n\t// TODO\n\tpaddr_t pa;\n\tpa = getppages(npages);\n\tif (pa==0) {\n\t\treturn 0;\n\t}\n\treturn PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n\t// TODO\n\t(void)addr;\n}\n"}},{"type":"change","content":{"oldRange":[[132,0],[132,0]],"newRange":[[132,0],[132,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[133,0],[133,1]],"newRange":[[133,0],[133,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[134,0],[134,1]],"newRange":[[134,0],[134,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[135,0],[135,0]],"newRange":[[135,0],[135,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[136,0],[136,0]],"newRange":[[136,0],[136,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[137,0],[137,0]],"newRange":[[137,0],[137,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[138,0],[138,0]],"newRange":[[138,0],[138,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[139,0],[139,0]],"newRange":[[139,0],[139,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[140,0],[140,0]],"newRange":[[140,0],[140,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[141,0],[141,1]],"newRange":[[141,0],[141,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,1]],"newRange":[[142,0],[142,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,0]],"newRange":[[143,0],[143,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,1]],"newRange":[[144,0],[144,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,0]],"newRange":[[145,0],[145,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,1]],"newRange":[[146,0],[146,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,1]],"newRange":[[147,0],[147,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,0]],"newRange":[[148,0],[148,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[149,0],[149,0]],"newRange":[[149,0],[149,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[150,0],[150,0]],"newRange":[[150,0],[150,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[151,0],[151,0]],"newRange":[[151,0],[151,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[152,0],[152,0]],"newRange":[[152,0],[152,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[153,0],[153,1]],"newRange":[[153,0],[153,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[154,0],[154,1]],"newRange":[[154,0],[154,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[155,0],[155,1]],"newRange":[[155,0],[155,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[156,0],[156,1]],"newRange":[[156,0],[156,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[157,0],[157,2]],"newRange":[[157,0],[157,8]],"oldText":"\t\t","newText":"        "}},{"type":"change","content":{"oldRange":[[158,0],[158,1]],"newRange":[[158,0],[158,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,1]],"newRange":[[159,0],[159,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,0]],"newRange":[[160,0],[160,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[161,0],[161,0]],"newRange":[[161,0],[161,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[162,0],[162,0]],"newRange":[[162,0],[162,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[163,0],[163,0]],"newRange":[[163,0],[163,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[164,0],[164,0]],"newRange":[[164,0],[164,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[165,0],[165,1]],"newRange":[[165,0],[165,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[166,0],[166,1]],"newRange":[[166,0],[166,4]],"oldText":"\t","newText":"    "}},{"type":"change","content":{"oldRange":[[167,0],[167,0]],"newRange":[[167,0],[167,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[132,0],[167,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[132,0],[167,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[132,0],[168,0]],"newRange":[[132,0],[132,0]],"oldText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[167,0]],"oldText":"","newText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n"}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[131,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,0]],"newRange":[[132,0],[132,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,0]],"newRange":[[133,0],[133,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,0]],"newRange":[[134,0],[134,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,0]],"newRange":[[135,0],[135,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,0]],"newRange":[[136,0],[136,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,0]],"newRange":[[137,0],[137,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,0]],"newRange":[[138,0],[138,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,0]],"newRange":[[139,0],[139,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[147,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,0]],"newRange":[[148,0],[148,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,0]],"newRange":[[149,0],[149,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,0]],"newRange":[[150,0],[150,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,0]],"newRange":[[151,0],[151,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,4]],"newRange":[[153,0],[153,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,4]],"newRange":[[154,0],[154,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,4]],"newRange":[[155,0],[155,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[159,0],[159,0]],"newRange":[[159,0],[159,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,0]],"newRange":[[160,0],[160,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,0]],"newRange":[[161,0],[161,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[162,0],[162,0]],"newRange":[[162,0],[162,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[163,0],[163,0]],"newRange":[[163,0],[163,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[164,0],[164,4]],"newRange":[[164,0],[164,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[165,0],[165,4]],"newRange":[[165,0],[165,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[166,0],[166,0]],"newRange":[[166,0],[166,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[167,0]],"newRange":[[131,0],[131,0]],"oldText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[166,0]],"oldText":"","newText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n"}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,12]],"newRange":[[155,0],[155,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,8]],"newRange":[[157,0],[157,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,4]],"newRange":[[160,0],[160,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,4]],"newRange":[[161,0],[161,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[162,0],[162,4]],"newRange":[[162,0],[162,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[163,0],[163,8]],"newRange":[[163,0],[163,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[164,0],[164,8]],"newRange":[[164,0],[164,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[165,0],[165,4]],"newRange":[[165,0],[165,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[166,0]],"newRange":[[130,0],[130,0]],"oldText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[165,0]],"oldText":"","newText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n"}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[154,0],[154,12]],"newRange":[[154,0],[154,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,4]],"newRange":[[160,0],[160,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,4]],"newRange":[[161,0],[161,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[162,0],[162,8]],"newRange":[[162,0],[162,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[163,0],[163,8]],"newRange":[[163,0],[163,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[164,0],[164,4]],"newRange":[[164,0],[164,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[165,0]],"newRange":[[129,0],[129,0]],"oldText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[128,0],[128,0]],"newRange":[[128,0],[164,0]],"oldText":"","newText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n"}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,8]],"newRange":[[152,0],[152,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,12]],"newRange":[[153,0],[153,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,4]],"newRange":[[156,0],[156,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,4]],"newRange":[[160,0],[160,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,8]],"newRange":[[161,0],[161,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[162,0],[162,8]],"newRange":[[162,0],[162,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[163,0],[163,4]],"newRange":[[163,0],[163,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[164,0]],"newRange":[[128,0],[128,0]],"oldText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[163,0]],"oldText":"","newText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n"}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,8]],"newRange":[[138,0],[138,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,8]],"newRange":[[139,0],[139,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,8]],"newRange":[[140,0],[140,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,12]],"newRange":[[152,0],[152,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[155,0],[155,4]],"newRange":[[155,0],[155,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[156,0],[156,4]],"newRange":[[156,0],[156,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[160,0],[160,8]],"newRange":[[160,0],[160,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,8]],"newRange":[[161,0],[161,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[162,0],[162,4]],"newRange":[[162,0],[162,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[127,0],[163,0]],"newRange":[[127,0],[127,0]],"oldText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[126,0],[126,0]],"newRange":[[126,0],[162,0]],"oldText":"","newText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n"}},{"type":"change","content":{"oldRange":[[126,0],[126,0]],"newRange":[[126,0],[126,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[127,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[128,0],[128,0]],"newRange":[[128,0],[128,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[129,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[130,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[131,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[132,0],[132,0]],"newRange":[[132,0],[132,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[133,0],[133,0]],"newRange":[[133,0],[133,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[134,0],[134,0]],"newRange":[[134,0],[134,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,0]],"newRange":[[142,0],[142,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[143,0],[143,0]],"newRange":[[143,0],[143,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[144,0],[144,0]],"newRange":[[144,0],[144,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[145,0],[145,0]],"newRange":[[145,0],[145,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[146,0],[146,0]],"newRange":[[146,0],[146,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,8]],"newRange":[[151,0],[151,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[153,0],[153,4]],"newRange":[[153,0],[153,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[154,0],[154,0]],"newRange":[[154,0],[154,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[155,0],[155,0]],"newRange":[[155,0],[155,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[156,0],[156,0]],"newRange":[[156,0],[156,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[157,0],[157,0]],"newRange":[[157,0],[157,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[158,0],[158,0]],"newRange":[[158,0],[158,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,4]],"newRange":[[160,0],[160,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[161,0],[161,0]],"newRange":[[161,0],[161,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[126,0],[162,0]],"newRange":[[126,0],[126,0]],"oldText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[125,0],[125,0]],"newRange":[[125,0],[161,0]],"oldText":"","newText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n"}},{"type":"change","content":{"oldRange":[[125,0],[125,0]],"newRange":[[125,0],[125,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[126,0],[126,0]],"newRange":[[126,0],[126,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[127,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[128,0],[128,0]],"newRange":[[128,0],[128,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[129,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[130,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[131,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[132,0],[132,0]],"newRange":[[132,0],[132,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[133,0],[133,0]],"newRange":[[133,0],[133,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,0]],"newRange":[[141,0],[141,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[142,0],[142,0]],"newRange":[[142,0],[142,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[143,0],[143,0]],"newRange":[[143,0],[143,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[144,0],[144,0]],"newRange":[[144,0],[144,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[145,0],[145,0]],"newRange":[[145,0],[145,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,8]],"newRange":[[150,0],[150,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,4]],"newRange":[[151,0],[151,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[153,0],[153,0]],"newRange":[[153,0],[153,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[154,0],[154,0]],"newRange":[[154,0],[154,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[155,0],[155,0]],"newRange":[[155,0],[155,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[156,0],[156,0]],"newRange":[[156,0],[156,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[157,0],[157,0]],"newRange":[[157,0],[157,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,4]],"newRange":[[159,0],[159,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[160,0],[160,0]],"newRange":[[160,0],[160,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[125,0],[161,0]],"newRange":[[125,0],[125,0]],"oldText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[124,0],[124,0]],"newRange":[[124,0],[160,0]],"oldText":"","newText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n"}},{"type":"change","content":{"oldRange":[[124,0],[124,0]],"newRange":[[124,0],[124,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[125,0],[125,0]],"newRange":[[125,0],[125,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[126,0],[126,0]],"newRange":[[126,0],[126,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[127,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[128,0],[128,0]],"newRange":[[128,0],[128,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[129,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[130,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[131,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[132,0],[132,0]],"newRange":[[132,0],[132,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,0]],"newRange":[[140,0],[140,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[141,0],[141,0]],"newRange":[[141,0],[141,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[142,0],[142,0]],"newRange":[[142,0],[142,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[143,0],[143,0]],"newRange":[[143,0],[143,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[144,0],[144,0]],"newRange":[[144,0],[144,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,4]],"newRange":[[151,0],[151,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,0]],"newRange":[[152,0],[152,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[153,0],[153,0]],"newRange":[[153,0],[153,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[154,0],[154,0]],"newRange":[[154,0],[154,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[155,0],[155,0]],"newRange":[[155,0],[155,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[156,0],[156,0]],"newRange":[[156,0],[156,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[158,0],[158,4]],"newRange":[[158,0],[158,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[159,0],[159,0]],"newRange":[[159,0],[159,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[124,0],[160,0]],"newRange":[[124,0],[124,0]],"oldText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[123,0],[123,0]],"newRange":[[123,0],[159,0]],"oldText":"","newText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n"}},{"type":"change","content":{"oldRange":[[123,0],[123,0]],"newRange":[[123,0],[123,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,0]],"newRange":[[124,0],[124,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,0]],"newRange":[[125,0],[125,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,0]],"newRange":[[126,0],[126,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[127,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,0]],"newRange":[[128,0],[128,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[129,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[130,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,0]],"newRange":[[131,0],[131,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,4]],"newRange":[[135,0],[135,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[139,0],[139,0]],"newRange":[[139,0],[139,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,0]],"newRange":[[140,0],[140,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,0]],"newRange":[[141,0],[141,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,0]],"newRange":[[142,0],[142,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,0]],"newRange":[[143,0],[143,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,4]],"newRange":[[147,0],[147,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,12]],"oldText":"        ","newText":"            "}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[151,0],[151,0]],"newRange":[[151,0],[151,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,0]],"newRange":[[152,0],[152,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[153,0],[153,0]],"newRange":[[153,0],[153,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[154,0],[154,0]],"newRange":[[154,0],[154,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[155,0],[155,0]],"newRange":[[155,0],[155,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[156,0],[156,4]],"newRange":[[156,0],[156,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,8]],"oldText":"    ","newText":"        "}},{"type":"change","content":{"oldRange":[[158,0],[158,0]],"newRange":[[158,0],[158,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[159,0]],"newRange":[[123,0],[123,0]],"oldText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[122,0],[122,0]],"newRange":[[122,0],[158,0]],"oldText":"","newText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n"}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,8]],"newRange":[[137,0],[137,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,8]],"newRange":[[146,0],[146,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[147,0],[147,12]],"newRange":[[147,0],[147,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,8]],"newRange":[[149,0],[149,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,4]],"newRange":[[151,0],[151,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[153,0],[153,4]],"newRange":[[153,0],[153,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[154,0],[154,4]],"newRange":[[154,0],[154,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,8]],"newRange":[[156,0],[156,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[157,0],[157,4]],"newRange":[[157,0],[157,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[158,0]],"newRange":[[122,0],[122,0]],"oldText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[121,0],[121,0]],"newRange":[[121,0],[157,0]],"oldText":"","newText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n"}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[136,0],[136,8]],"newRange":[[136,0],[136,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,8]],"newRange":[[145,0],[145,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,12]],"newRange":[[146,0],[146,12]],"oldText":"            ","newText":"            "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[148,0],[148,8]],"newRange":[[148,0],[148,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[151,0],[151,4]],"newRange":[[151,0],[151,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[153,0],[153,4]],"newRange":[[153,0],[153,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[155,0],[155,8]],"newRange":[[155,0],[155,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[156,0],[156,4]],"newRange":[[156,0],[156,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[121,0],[157,0]],"newRange":[[121,0],[121,0]],"oldText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n","newText":""}},{"type":"change","content":{"oldRange":[[120,0],[120,0]],"newRange":[[120,0],[156,0]],"oldText":"","newText":"    /*\n    * Wrap ram_stealmem in a spinlock.\n    */\n    static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n    \n    static\n    paddr_t\n    getppages(unsigned long npages)\n    {\n        paddr_t addr;\n        spinlock_acquire(&stealmem_lock);\n        \n        addr = ram_stealmem(npages);\n        \n        spinlock_release(&stealmem_lock);\n        return addr;\n    }\n    \n    vaddr_t\n    alloc_kpages(unsigned npages)\n    {\n        // TODO\n        paddr_t pa;\n        pa = getppages(npages);\n        if (pa==0) {\n            return 0;\n        }\n        return PADDR_TO_KVADDR(pa);\n    }\n    \n    void\n    free_kpages(vaddr_t addr)\n    {\n        // TODO\n        (void)addr;\n    }\n"}},{"type":"change","content":{"oldRange":[[120,0],[120,4]],"newRange":[[120,0],[120,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[121,0],[121,4]],"newRange":[[121,0],[121,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[122,0],[122,4]],"newRange":[[122,0],[122,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[123,0],[123,4]],"newRange":[[123,0],[123,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[124,0],[124,4]],"newRange":[[124,0],[124,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[125,0],[125,4]],"newRange":[[125,0],[125,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[126,0],[126,4]],"newRange":[[126,0],[126,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,8]],"newRange":[[129,0],[129,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,8]],"newRange":[[130,0],[130,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,8]],"newRange":[[131,0],[131,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,8]],"newRange":[[132,0],[132,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,8]],"newRange":[[133,0],[133,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,8]],"newRange":[[134,0],[134,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,8]],"newRange":[[135,0],[135,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[136,0],[136,4]],"newRange":[[136,0],[136,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[138,0],[138,4]],"newRange":[[138,0],[138,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[141,0],[141,8]],"newRange":[[141,0],[141,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,8]],"newRange":[[142,0],[142,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,12]],"newRange":[[145,0],[145,8]],"oldText":"            ","newText":"        "}},{"type":"change","content":{"oldRange":[[146,0],[146,8]],"newRange":[[146,0],[146,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,8]],"newRange":[[147,0],[147,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[148,0],[148,4]],"newRange":[[148,0],[148,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[149,0],[149,4]],"newRange":[[149,0],[149,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[151,0],[151,4]],"newRange":[[151,0],[151,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[153,0],[153,8]],"newRange":[[153,0],[153,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[154,0],[154,8]],"newRange":[[154,0],[154,4]],"oldText":"        ","newText":"    "}},{"type":"change","content":{"oldRange":[[155,0],[155,4]],"newRange":[[155,0],[155,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[120,0],[156,0]],"newRange":[[120,0],[120,0]],"oldText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[119,0],[119,0]],"newRange":[[119,0],[155,0]],"oldText":"","newText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n"}},{"type":"change","content":{"oldRange":[[119,0],[119,0]],"newRange":[[119,0],[119,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[120,0],[120,0]],"newRange":[[120,0],[120,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[121,0],[121,0]],"newRange":[[121,0],[121,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[122,0],[122,0]],"newRange":[[122,0],[122,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[123,0],[123,0]],"newRange":[[123,0],[123,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[124,0],[124,0]],"newRange":[[124,0],[124,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[125,0],[125,0]],"newRange":[[125,0],[125,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[126,0],[126,0]],"newRange":[[126,0],[126,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[127,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,4]],"newRange":[[134,0],[134,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[135,0],[135,0]],"newRange":[[135,0],[135,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[136,0],[136,0]],"newRange":[[136,0],[136,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[137,0],[137,0]],"newRange":[[137,0],[137,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[138,0],[138,0]],"newRange":[[138,0],[138,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[139,0],[139,0]],"newRange":[[139,0],[139,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,4]],"newRange":[[143,0],[143,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[144,0],[144,8]],"newRange":[[144,0],[144,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,4]],"newRange":[[146,0],[146,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[147,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[148,0],[148,0]],"newRange":[[148,0],[148,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[149,0],[149,0]],"newRange":[[149,0],[149,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[150,0],[150,0]],"newRange":[[150,0],[150,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[151,0],[151,0]],"newRange":[[151,0],[151,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[153,0],[153,4]],"newRange":[[153,0],[153,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[154,0],[154,0]],"newRange":[[154,0],[154,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[119,0],[155,0]],"newRange":[[119,0],[119,0]],"oldText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n","newText":""}},{"type":"change","content":{"oldRange":[[118,0],[118,0]],"newRange":[[118,0],[154,0]],"oldText":"","newText":"/*\n* Wrap ram_stealmem in a spinlock.\n*/\nstatic struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;\n\nstatic\npaddr_t\ngetppages(unsigned long npages)\n{\n    paddr_t addr;\n    spinlock_acquire(&stealmem_lock);\n    \n    addr = ram_stealmem(npages);\n    \n    spinlock_release(&stealmem_lock);\n    return addr;\n}\n\nvaddr_t\nalloc_kpages(unsigned npages)\n{\n    // TODO\n    paddr_t pa;\n    pa = getppages(npages);\n    if (pa==0) {\n        return 0;\n    }\n    return PADDR_TO_KVADDR(pa);\n}\n\nvoid\nfree_kpages(vaddr_t addr)\n{\n    // TODO\n    (void)addr;\n}\n"}},{"type":"change","content":{"oldRange":[[118,0],[118,0]],"newRange":[[118,0],[118,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[119,0],[119,0]],"newRange":[[119,0],[119,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[120,0],[120,0]],"newRange":[[120,0],[120,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[121,0],[121,0]],"newRange":[[121,0],[121,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[122,0],[122,0]],"newRange":[[122,0],[122,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[123,0],[123,0]],"newRange":[[123,0],[123,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[124,0],[124,0]],"newRange":[[124,0],[124,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[125,0],[125,0]],"newRange":[[125,0],[125,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[126,0],[126,0]],"newRange":[[126,0],[126,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[127,0],[127,4]],"newRange":[[127,0],[127,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[128,0],[128,4]],"newRange":[[128,0],[128,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[130,0],[130,4]],"newRange":[[130,0],[130,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[132,0],[132,4]],"newRange":[[132,0],[132,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[134,0],[134,0]],"newRange":[[134,0],[134,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[135,0],[135,0]],"newRange":[[135,0],[135,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[136,0],[136,0]],"newRange":[[136,0],[136,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[137,0],[137,0]],"newRange":[[137,0],[137,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[138,0],[138,0]],"newRange":[[138,0],[138,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[139,0],[139,4]],"newRange":[[139,0],[139,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[140,0],[140,4]],"newRange":[[140,0],[140,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[141,0],[141,4]],"newRange":[[141,0],[141,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[142,0],[142,4]],"newRange":[[142,0],[142,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[143,0],[143,8]],"newRange":[[143,0],[143,8]],"oldText":"        ","newText":"        "}},{"type":"change","content":{"oldRange":[[144,0],[144,4]],"newRange":[[144,0],[144,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[145,0],[145,4]],"newRange":[[145,0],[145,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[146,0],[146,0]],"newRange":[[146,0],[146,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[147,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[148,0],[148,0]],"newRange":[[148,0],[148,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[149,0],[149,0]],"newRange":[[149,0],[149,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[150,0],[150,0]],"newRange":[[150,0],[150,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[151,0],[151,4]],"newRange":[[151,0],[151,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[152,0],[152,4]],"newRange":[[152,0],[152,4]],"oldText":"    ","newText":"    "}},{"type":"change","content":{"oldRange":[[153,0],[153,0]],"newRange":[[153,0],[153,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[118,0],[153,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[153,1],[153,1]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[153,1],[153,1]],"newRange":[[153,1],[154,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[154,0],[154,0]],"newRange":[[154,0],[154,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[154,0],[154,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[154,0],[154,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[131,0],[131,4]],"newRange":[[131,0],[131,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[129,0],[129,4]],"newRange":[[129,0],[129,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[169,0],[170,0]],"newRange":[[169,0],[169,0]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[154,0],[154,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[123,0],[123,6]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[123,0],[123,6]],"newRange":[[123,0],[123,0]],"oldText":"static","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[123,0],[123,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,8],[47,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,8],[47,10]],"newRange":[[43,8],[43,8]],"oldText":"/*\n        * No process. This is probably a kernel fault early\n        * in boot. Return EFAULT so as to panic instead of\n        * getting into an infinite faulting loop.\n        */","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,8],[43,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,8],[43,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,4],[43,8]],"newRange":[[43,4],[43,4]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,4],[43,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,4],[43,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[43,0],[43,4]],"newRange":[[43,0],[43,0]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[43,0],[43,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[43,0],[43,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[42,26],[43,0]],"newRange":[[42,26],[42,26]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[42,26],[42,26]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[48,10],[51,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[48,10],[51,10]],"newRange":[[48,10],[48,10]],"oldText":"\n        * No address space set up. This is probably also a\n        * kernel fault early in boot.\n        */","newText":""}},{"type":"change","content":{"oldRange":[[48,9],[48,10]],"newRange":[[48,9],[48,9]],"oldText":"*","newText":""}},{"type":"change","content":{"oldRange":[[48,8],[48,9]],"newRange":[[48,8],[48,8]],"oldText":"/","newText":""}},{"type":"change","content":{"oldRange":[[48,4],[48,8]],"newRange":[[48,4],[48,4]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[48,4],[48,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[48,4],[48,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[48,0],[48,4]],"newRange":[[48,0],[48,0]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[48,0],[48,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[48,0],[48,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[47,21],[48,0]],"newRange":[[47,21],[47,21]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[47,21],[47,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,10],[91,10]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,10],[91,10]],"newRange":[[91,10],[91,11]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[91,12],[91,12]],"newRange":[[91,12],[91,13]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,13],[91,13]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,17],[91,17]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,17],[91,17]],"newRange":[[91,17],[91,18]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[91,18],[91,18]],"newRange":[[91,18],[91,19]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,19],[91,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,19],[91,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,18],[91,19]],"newRange":[[91,18],[91,18]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,18],[91,18]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,19],[91,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,19],[91,19]],"newRange":[[91,19],[91,20]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,20],[91,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[13,8],[13,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[13,8],[13,8]],"newRange":[[13,8],[14,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[14,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,4],[14,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,4],[14,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,4],[14,4]],"newRange":[[14,4],[14,5]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[14,5],[14,5]],"newRange":[[14,5],[14,6]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[14,6],[14,6]],"newRange":[[14,6],[14,7]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,7],[14,7]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,7],[14,7]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,7],[14,7]],"newRange":[[14,7],[14,9]],"oldText":"","newText":"()"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,9],[14,9]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,8],[14,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,8],[14,8]],"newRange":[[14,8],[14,9]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[14,9],[14,9]],"newRange":[[14,9],[14,10]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[14,10],[14,10]],"newRange":[[14,10],[14,11]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[14,11],[14,11]],"newRange":[[14,11],[14,12]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[14,12],[14,12]],"newRange":[[14,12],[14,13]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[14,13],[14,13]],"newRange":[[14,13],[14,14]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[14,14],[14,14]],"newRange":[[14,14],[14,15]],"oldText":"","newText":"c"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,15],[14,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,15],[14,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,15],[14,15]],"newRange":[[14,15],[14,16]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,16],[14,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,16],[14,16]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,16],[14,16]],"newRange":[[14,16],[14,17]],"oldText":"","newText":"="}},{"type":"change","content":{"oldRange":[[14,17],[14,17]],"newRange":[[14,17],[14,18]],"oldText":"","newText":"="}},{"type":"change","content":{"oldRange":[[14,18],[14,18]],"newRange":[[14,18],[14,19]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[14,19],[14,19]],"newRange":[[14,19],[14,20]],"oldText":"","newText":"N"}},{"type":"change","content":{"oldRange":[[14,20],[14,20]],"newRange":[[14,20],[14,21]],"oldText":"","newText":"U"}},{"type":"change","content":{"oldRange":[[14,21],[14,21]],"newRange":[[14,21],[14,22]],"oldText":"","newText":"L"}},{"type":"change","content":{"oldRange":[[14,22],[14,22]],"newRange":[[14,22],[14,23]],"oldText":"","newText":"L"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,23],[14,23]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,24],[14,24]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,24],[14,24]],"newRange":[[14,24],[14,25]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,25],[14,25]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,25],[14,25]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,25],[14,25]],"newRange":[[14,25],[14,27]],"oldText":"","newText":"{}"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,27],[14,27]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,26],[14,26]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,26],[14,26]],"newRange":[[14,26],[16,0]],"oldText":"","newText":"\n\n"}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[15,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[16,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,8],[15,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,8],[15,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,8],[15,8]],"newRange":[[15,8],[15,9]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[15,9],[15,9]],"newRange":[[15,9],[15,10]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[15,10],[15,10]],"newRange":[[15,10],[15,11]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[15,11],[15,11]],"newRange":[[15,11],[15,12]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[15,12],[15,12]],"newRange":[[15,12],[15,13]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[15,13],[15,13]],"newRange":[[15,13],[15,14]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[15,14],[15,14]],"newRange":[[15,14],[15,15]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[15,15],[15,15]],"newRange":[[15,15],[15,16]],"oldText":"","newText":"E"}},{"type":"change","content":{"oldRange":[[15,16],[15,16]],"newRange":[[15,16],[15,17]],"oldText":"","newText":"F"}},{"type":"change","content":{"oldRange":[[15,17],[15,17]],"newRange":[[15,17],[15,18]],"oldText":"","newText":"A"}},{"type":"change","content":{"oldRange":[[15,18],[15,18]],"newRange":[[15,18],[15,19]],"oldText":"","newText":"U"}},{"type":"change","content":{"oldRange":[[15,19],[15,19]],"newRange":[[15,19],[15,20]],"oldText":"","newText":"L"}},{"type":"change","content":{"oldRange":[[15,20],[15,20]],"newRange":[[15,20],[15,21]],"oldText":"","newText":"T"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,21],[15,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,21],[15,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,20],[15,21]],"newRange":[[15,20],[15,20]],"oldText":"T","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,20],[15,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,20],[15,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,15],[15,20]],"newRange":[[15,15],[15,15]],"oldText":"EFAUL","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,15],[15,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,15],[15,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,14],[15,15]],"newRange":[[15,14],[15,14]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,14],[15,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,14],[15,14]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,14],[15,14]],"newRange":[[15,14],[15,15]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,15],[15,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[16,5],[16,5]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[16,5],[16,5]],"newRange":[[16,5],[17,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[17,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[17,4],[17,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[13,1],[13,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[13,1],[13,8]],"newRange":[[13,1],[13,2]],"oldText":"// TODO","newText":"s"}},{"type":"change","content":{"oldRange":[[13,2],[13,2]],"newRange":[[13,2],[13,3]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[13,3],[13,3]],"newRange":[[13,3],[13,4]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[13,4],[13,4]],"newRange":[[13,4],[13,5]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[13,5],[13,5]],"newRange":[[13,5],[13,6]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[13,6],[13,6]],"newRange":[[13,6],[13,7]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[13,7],[13,7]],"newRange":[[13,7],[13,8]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[13,8],[13,8]],"newRange":[[13,8],[13,9]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[13,9],[13,9]],"newRange":[[13,9],[13,10]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[13,10],[13,10]],"newRange":[[13,10],[13,11]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[13,11],[13,11]],"newRange":[[13,11],[13,12]],"oldText":"","newText":"r"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[13,12],[13,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[13,12],[13,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[13,12],[13,12]],"newRange":[[13,12],[13,13]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[13,13],[13,13]],"newRange":[[13,13],[13,14]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[13,13],[13,14]],"newRange":[[13,13],[13,13]],"oldText":"o","newText":""}},{"type":"change","content":{"oldRange":[[13,13],[13,13]],"newRange":[[13,13],[13,14]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[13,14],[13,14]],"newRange":[[13,14],[13,15]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[13,15],[13,15]],"newRange":[[13,15],[13,16]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[13,16],[13,16]],"newRange":[[13,16],[13,17]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[13,17],[13,17]],"newRange":[[13,17],[13,18]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[13,18],[13,18]],"newRange":[[13,18],[13,19]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[13,19],[13,19]],"newRange":[[13,19],[13,20]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[13,20],[13,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[13,20],[13,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[13,19],[13,20]],"newRange":[[13,19],[13,19]],"oldText":"s","newText":""}},{"type":"change","content":{"oldRange":[[13,18],[13,19]],"newRange":[[13,18],[13,18]],"oldText":"a","newText":""}},{"type":"change","content":{"oldRange":[[13,18],[13,18]],"newRange":[[13,18],[13,19]],"oldText":"","newText":"*"}},{"type":"change","content":{"oldRange":[[13,19],[13,19]],"newRange":[[13,19],[13,20]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[13,20],[13,20]],"newRange":[[13,20],[13,21]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[13,21],[13,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[13,21],[13,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[13,21],[13,21]],"newRange":[[13,21],[13,22]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[13,22],[13,22]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[13,22],[13,22]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[13,22],[13,22]],"newRange":[[13,22],[14,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[14,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[14,4],[14,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[17,5],[17,5]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[17,5],[17,5]],"newRange":[[17,5],[18,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[18,0],[18,0]],"newRange":[[18,0],[18,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[18,4],[18,4]],"newRange":[[18,4],[19,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[19,0],[19,0]],"newRange":[[19,0],[19,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[18,0],[18,4]],"newRange":[[18,0],[18,0]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,4],[19,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,4],[19,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,4],[19,4]],"newRange":[[19,4],[19,5]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[19,5],[19,5]],"newRange":[[19,5],[19,6]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[19,6],[19,6]],"newRange":[[19,6],[19,7]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[19,7],[19,7]],"newRange":[[19,7],[19,8]],"oldText":"","newText":"="}},{"type":"change","content":{"oldRange":[[19,8],[19,8]],"newRange":[[19,8],[19,9]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[19,9],[19,9]],"newRange":[[19,9],[19,10]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[19,10],[19,10]],"newRange":[[19,10],[19,11]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[19,11],[19,11]],"newRange":[[19,11],[19,12]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[19,12],[19,12]],"newRange":[[19,12],[19,13]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[19,13],[19,13]],"newRange":[[19,13],[19,14]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[19,14],[19,14]],"newRange":[[19,14],[19,15]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[19,15],[19,15]],"newRange":[[19,15],[19,16]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[19,16],[19,16]],"newRange":[[19,16],[19,17]],"oldText":"","newText":"-"}},{"type":"change","content":{"oldRange":[[19,17],[19,17]],"newRange":[[19,17],[19,18]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,18],[19,18]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,18],[19,18]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,18],[19,18]],"newRange":[[19,18],[19,19]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[19,19],[19,19]],"newRange":[[19,19],[19,20]],"oldText":"","newText":"_"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,20],[19,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,20],[19,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,19],[19,20]],"newRange":[[19,19],[19,19]],"oldText":"_","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,19],[19,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,19],[19,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,19],[19,19]],"newRange":[[19,19],[19,20]],"oldText":"","newText":"_"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,20],[19,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,20],[19,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,20],[19,20]],"newRange":[[19,20],[19,21]],"oldText":"","newText":"a"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,21],[19,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,21],[19,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,21],[19,21]],"newRange":[[19,21],[19,22]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[19,22],[19,22]],"newRange":[[19,22],[19,23]],"oldText":"","newText":"d"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,23],[19,23]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,23],[19,23]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,23],[19,23]],"newRange":[[19,23],[19,24]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[19,24],[19,24]],"newRange":[[19,24],[19,25]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[19,25],[19,25]],"newRange":[[19,25],[19,26]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[19,26],[19,26]],"newRange":[[19,26],[19,27]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[19,27],[19,27]],"newRange":[[19,27],[19,28]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[19,28],[19,28]],"newRange":[[19,28],[19,29]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,29],[19,29]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,29],[19,29]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,29],[19,29]],"newRange":[[19,29],[19,30]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,30],[19,30]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,30],[19,30]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[20,0],[20,4]],"newRange":[[20,0],[20,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[14,0],[14,4]],"newRange":[[14,0],[14,0]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[19,30],[19,30]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[19,30],[19,30]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[19,30],[19,30]],"newRange":[[19,30],[20,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[20,0],[20,0]],"newRange":[[20,0],[20,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[20,4],[20,4]],"newRange":[[20,4],[20,5]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[20,5],[20,5]],"newRange":[[20,5],[20,6]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[20,6],[20,6]],"newRange":[[20,6],[20,7]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[20,7],[20,7]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[20,7],[20,7]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[20,7],[20,7]],"newRange":[[20,7],[20,9]],"oldText":"","newText":"()"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[20,9],[20,9]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[20,8],[20,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[20,8],[20,8]],"newRange":[[20,8],[20,9]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[20,9],[20,9]],"newRange":[[20,9],[20,10]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[20,10],[20,10]],"newRange":[[20,10],[20,11]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[20,11],[20,11]],"newRange":[[20,11],[20,12]],"oldText":"","newText":"="}},{"type":"change","content":{"oldRange":[[20,12],[20,12]],"newRange":[[20,12],[20,13]],"oldText":"","newText":"="}},{"type":"change","content":{"oldRange":[[20,13],[20,13]],"newRange":[[20,13],[20,14]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[20,14],[20,14]],"newRange":[[20,14],[20,15]],"oldText":"","newText":"N"}},{"type":"change","content":{"oldRange":[[20,15],[20,15]],"newRange":[[20,15],[20,16]],"oldText":"","newText":"U"}},{"type":"change","content":{"oldRange":[[20,16],[20,16]],"newRange":[[20,16],[20,17]],"oldText":"","newText":"L"}},{"type":"change","content":{"oldRange":[[20,17],[20,17]],"newRange":[[20,17],[20,18]],"oldText":"","newText":"L"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[20,18],[20,18]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[20,19],[20,19]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[20,19],[20,19]],"newRange":[[20,19],[20,20]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[20,20],[20,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[20,20],[20,20]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[20,20],[20,20]],"newRange":[[20,20],[20,22]],"oldText":"","newText":"{}"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[20,22],[20,22]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[20,21],[20,21]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[20,21],[20,21]],"newRange":[[20,21],[22,0]],"oldText":"","newText":"\n\n"}},{"type":"change","content":{"oldRange":[[21,0],[21,0]],"newRange":[[21,0],[21,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[22,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[21,8],[21,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[21,8],[21,8]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[21,8],[21,8]],"newRange":[[21,8],[21,9]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[21,9],[21,9]],"newRange":[[21,9],[21,10]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[21,10],[21,10]],"newRange":[[21,10],[21,11]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[21,11],[21,11]],"newRange":[[21,11],[21,12]],"oldText":"","newText":"t"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[21,12],[21,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[21,12],[21,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[21,11],[21,12]],"newRange":[[21,11],[21,11]],"oldText":"t","newText":""}},{"type":"change","content":{"oldRange":[[21,11],[21,11]],"newRange":[[21,11],[21,12]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[21,12],[21,12]],"newRange":[[21,12],[21,13]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[21,13],[21,13]],"newRange":[[21,13],[21,14]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[21,13],[21,14]],"newRange":[[21,13],[21,13]],"oldText":"r","newText":""}},{"type":"change","content":{"oldRange":[[21,12],[21,13]],"newRange":[[21,12],[21,12]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[21,11],[21,12]],"newRange":[[21,11],[21,11]],"oldText":"t","newText":""}},{"type":"change","content":{"oldRange":[[21,10],[21,11]],"newRange":[[21,10],[21,10]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[21,10],[21,10]],"newRange":[[21,10],[21,11]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[21,11],[21,11]],"newRange":[[21,11],[21,12]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[21,12],[21,12]],"newRange":[[21,12],[21,13]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[21,13],[21,13]],"newRange":[[21,13],[21,14]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[21,14],[21,14]],"newRange":[[21,14],[21,15]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[21,15],[21,15]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[23,0],[23,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[23,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,0],[24,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[24,0],[24,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,4],[24,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[22,5],[22,5]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[22,5],[22,5]],"newRange":[[22,5],[23,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[23,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[23,4],[23,4]],"newRange":[[23,4],[24,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[23,0],[23,4]],"newRange":[[23,0],[23,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[24,4],[24,4]],"newRange":[[24,4],[30,36]],"oldText":"","newText":"KASSERT(as->as_vbase1 != 0);\n    KASSERT(as->as_pbase1 != 0);\n    KASSERT(as->as_npages1 != 0);\n    KASSERT(as->as_vbase2 != 0);\n    KASSERT(as->as_pbase2 != 0);\n    KASSERT(as->as_npages2 != 0);\n    KASSERT(as->as_stackpbase != 0);"}},{"type":"change","content":{"oldRange":[[24,0],[24,4]],"newRange":[[24,0],[24,4]],"oldText":"    ","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[30,36],[30,36]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[24,31],[24,31]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,30],[24,31]],"newRange":[[24,30],[24,30]],"oldText":")","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,30],[24,30]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[24,4],[24,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,4],[24,12]],"newRange":[[24,4],[24,4]],"oldText":"KASSERT(","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,4],[24,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[25,4],[25,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[25,4],[25,12]],"newRange":[[25,4],[25,4]],"oldText":"KASSERT(","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[25,4],[25,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[26,4],[26,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[26,4],[26,12]],"newRange":[[26,4],[26,4]],"oldText":"KASSERT(","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[26,4],[26,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[27,4],[27,12]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[27,4],[27,12]],"newRange":[[27,4],[27,4]],"oldText":"KASSERT(","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[27,4],[27,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[27,4],[27,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[32,0],[32,4]],"newRange":[[32,0],[32,0]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[27,4],[27,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[28,4],[28,11]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"570":{"range":[[29,4],[29,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"571":{"range":[[30,4],[30,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[28,4],[28,11]],"newRange":[[28,4],[28,4]],"oldText":"KASSERT","newText":""}},{"type":"change","content":{"oldRange":[[29,4],[29,11]],"newRange":[[29,4],[29,4]],"oldText":"KASSERT","newText":""}},{"type":"change","content":{"oldRange":[[30,4],[30,11]],"newRange":[[30,4],[30,4]],"oldText":"KASSERT","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[28,4],[28,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"},"570":{"range":[[29,4],[29,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"},"571":{"range":[[30,4],[30,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[28,4],[28,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"},"570":{"range":[[29,4],[29,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"},"571":{"range":[[30,4],[30,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[28,4],[28,5]],"newRange":[[28,4],[28,4]],"oldText":"(","newText":""}},{"type":"change","content":{"oldRange":[[29,4],[29,5]],"newRange":[[29,4],[29,4]],"oldText":"(","newText":""}},{"type":"change","content":{"oldRange":[[30,4],[30,5]],"newRange":[[30,4],[30,4]],"oldText":"(","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[28,4],[28,4]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"},"570":{"range":[[29,4],[29,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"},"571":{"range":[[30,4],[30,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/champ/Git/cpen331/os161/kern/vm/vm.c","digestWhenLastPersisted":"34c965f299a108613760cc848f5577a1338ab45f","preferredLineEnding":"\n","nextMarkerId":598,"deserializer":"TextBuffer","version":5},{"id":"8056ed70f06d780bd5ff8c68dcfe46ed","text":"/*\n * Copyright (c) 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009\n *\tThe President and Fellows of Harvard College.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#ifndef _VM_H_\n#define _VM_H_\n\n/*\n * VM system-related definitions.\n *\n * You'll probably want to add stuff here.\n */\n\n#include <machine/vm.h>\n\n/* Fault-type arguments to vm_fault() */\n#define VM_FAULT_READ        0    /* A read was attempted */\n#define VM_FAULT_WRITE       1    /* A write was attempted */\n#define VM_FAULT_READONLY    2    /* A write to a readonly page was attempted*/\n\n\n/* Initialization function */\nvoid vm_bootstrap(void);\n\n/* Fault handling function called by trap code */\nint vm_fault(int faulttype, vaddr_t faultaddress);\n\n/* Allocate/free kernel heap pages (called by kmalloc/kfree) */\npaddr_t getppages(unsigned long npages);\nvaddr_t alloc_kpages(unsigned npages);\nvoid free_kpages(vaddr_t addr);\n\n/* TLB shootdown handling called from interprocessor_interrupt */\nvoid vm_tlbshootdown_all(void);\nvoid vm_tlbshootdown(const struct tlbshootdown *);\n\n\n#endif /* _VM_H_ */\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"105":{"range":{"start":{"row":37,"column":0},"end":{"row":37,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"106":{"range":{"start":{"row":53,"column":0},"end":{"row":54,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":53,"column":40},"end":{"row":53,"column":40}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":129,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[52,0],[52,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[52,0],[52,0]],"newRange":[[52,0],[53,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[53,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[52,0],[52,0]],"newRange":[[52,0],[52,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[54,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[54,0],[54,0]],"newRange":[[54,0],[54,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[53,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[54,0],[54,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[53,0],[53,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[58,31]],"oldText":"","newText":"\nint vm_fault(int faulttype, vaddr_t faultaddress);\nvoid vm_tlbshootdown_all(void);\nvoid vm_tlbshootdown(struct tlbshootdown *ts);\nvaddr_t alloc_kpages(unsigned npages);\nvoid free_kpages(vaddr_t addr);"}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[53,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[58,31],[58,31]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[52,0],[58,31]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[52,0],[58,31]],"newRange":[[52,0],[52,0]],"oldText":"\n\nint vm_fault(int faulttype, vaddr_t faultaddress);\nvoid vm_tlbshootdown_all(void);\nvoid vm_tlbshootdown(struct tlbshootdown *ts);\nvaddr_t alloc_kpages(unsigned npages);\nvoid free_kpages(vaddr_t addr);","newText":""}},{"type":"change","content":{"oldRange":[[51,50],[52,0]],"newRange":[[51,50],[51,50]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[51,50],[51,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[38,0],[38,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[37,0],[38,0]],"newRange":[[37,0],[37,0]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[37,0],[37,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,0],[39,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[40,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,0],[39,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,1]],"oldText":"","newText":"#"}},{"type":"change","content":{"oldRange":[[39,1],[39,1]],"newRange":[[39,1],[39,2]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[39,2],[39,2]],"newRange":[[39,2],[39,3]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[39,3],[39,3]],"newRange":[[39,3],[39,4]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[39,4],[39,4]],"newRange":[[39,4],[39,5]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[39,5],[39,5]],"newRange":[[39,5],[39,6]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[39,6],[39,6]],"newRange":[[39,6],[39,7]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[39,7],[39,7]],"newRange":[[39,7],[39,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[39,8],[39,8]],"newRange":[[39,8],[39,9]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[39,9],[39,9]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,9],[39,9]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,8],[39,9]],"newRange":[[39,8],[39,8]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[39,7],[39,8]],"newRange":[[39,7],[39,7]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[39,6],[39,7]],"newRange":[[39,6],[39,6]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[39,5],[39,6]],"newRange":[[39,5],[39,5]],"oldText":"d","newText":""}},{"type":"change","content":{"oldRange":[[39,5],[39,5]],"newRange":[[39,5],[39,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[39,6],[39,6]],"newRange":[[39,6],[39,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[39,7],[39,7]],"newRange":[[39,7],[39,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[39,8],[39,8]],"newRange":[[39,8],[39,9]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[39,9],[39,9]],"newRange":[[39,9],[39,10]],"oldText":"","newText":"<"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[39,10],[39,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,10],[39,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,10],[39,10]],"newRange":[[39,10],[39,11]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[39,11],[39,11]],"newRange":[[39,11],[39,12]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[39,12],[39,12]],"newRange":[[39,12],[39,13]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[39,13],[39,13]],"newRange":[[39,13],[39,14]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[39,13],[39,14]],"newRange":[[39,13],[39,13]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[39,12],[39,13]],"newRange":[[39,12],[39,12]],"oldText":"l","newText":""}},{"type":"change","content":{"oldRange":[[39,12],[39,12]],"newRange":[[39,12],[39,13]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[39,13],[39,13]],"newRange":[[39,13],[39,14]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[39,14],[39,14]],"newRange":[[39,14],[39,15]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[39,15],[39,15]],"newRange":[[39,15],[39,16]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[39,16],[39,16]],"newRange":[[39,16],[39,17]],"oldText":"","newText":"h"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[39,17],[39,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,17],[39,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,17],[39,17]],"newRange":[[39,17],[39,18]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[39,18],[39,18]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,18],[39,18]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,18],[39,18]],"newRange":[[39,18],[40,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,0],[40,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,1]],"oldText":"","newText":"#"}},{"type":"change","content":{"oldRange":[[40,1],[40,1]],"newRange":[[40,1],[40,2]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[40,2],[40,2]],"newRange":[[40,2],[40,3]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[40,3],[40,3]],"newRange":[[40,3],[40,4]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[40,4],[40,4]],"newRange":[[40,4],[40,5]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[40,5],[40,5]],"newRange":[[40,5],[40,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[40,6],[40,6]],"newRange":[[40,6],[40,7]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[40,7],[40,7]],"newRange":[[40,7],[40,8]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,8],[40,8]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,8],[40,8]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,7],[40,8]],"newRange":[[40,7],[40,7]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[40,6],[40,7]],"newRange":[[40,6],[40,6]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[40,6],[40,6]],"newRange":[[40,6],[40,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[40,7],[40,7]],"newRange":[[40,7],[40,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[40,8],[40,8]],"newRange":[[40,8],[40,9]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[40,9],[40,9]],"newRange":[[40,9],[40,10]],"oldText":"","newText":"<"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,10],[40,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,10],[40,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,10],[40,10]],"newRange":[[40,10],[40,11]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[40,11],[40,11]],"newRange":[[40,11],[40,12]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[40,12],[40,12]],"newRange":[[40,12],[40,13]],"oldText":"","newText":"l"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,13],[40,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,13],[40,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,13],[40,13]],"newRange":[[40,13],[40,14]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[40,14],[40,14]],"newRange":[[40,14],[40,15]],"oldText":"","newText":"h"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,15],[40,15]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,15],[40,15]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,15],[40,15]],"newRange":[[40,15],[40,16]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[40,16],[40,16]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[40,16],[40,16]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[40,16],[40,16]],"newRange":[[40,16],[41,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,0],[41,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[41,1]],"oldText":"","newText":"#"}},{"type":"change","content":{"oldRange":[[41,1],[41,1]],"newRange":[[41,1],[41,2]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[41,2],[41,2]],"newRange":[[41,2],[41,3]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[41,3],[41,3]],"newRange":[[41,3],[41,4]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[41,4],[41,4]],"newRange":[[41,4],[41,5]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[41,5],[41,5]],"newRange":[[41,5],[41,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[41,6],[41,6]],"newRange":[[41,6],[41,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[41,7],[41,7]],"newRange":[[41,7],[41,8]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[41,8],[41,8]],"newRange":[[41,8],[41,9]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,9],[41,9]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,9],[41,9]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,9],[41,9]],"newRange":[[41,9],[41,10]],"oldText":"","newText":"<"}},{"type":"change","content":{"oldRange":[[41,10],[41,10]],"newRange":[[41,10],[41,11]],"oldText":"","newText":"a"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,11],[41,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,11],[41,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,11],[41,11]],"newRange":[[41,11],[41,12]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[41,12],[41,12]],"newRange":[[41,12],[41,13]],"oldText":"","newText":"d"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,13],[41,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[41,13],[41,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[41,13],[41,13]],"newRange":[[41,13],[41,14]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[41,14],[41,14]],"newRange":[[41,14],[41,15]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[41,15],[41,15]],"newRange":[[41,15],[41,16]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[41,16],[41,16]],"newRange":[[41,16],[41,17]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[41,17],[41,17]],"newRange":[[41,17],[41,18]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[41,18],[41,18]],"newRange":[[41,18],[41,19]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[41,19],[41,19]],"newRange":[[41,19],[41,20]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[41,20],[41,20]],"newRange":[[41,20],[41,21]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[41,21],[41,21]],"newRange":[[41,21],[41,22]],"oldText":"","newText":">"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[41,22],[41,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[39,0],[41,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[39,0],[41,22]],"newRange":[[39,0],[39,0]],"oldText":"#include <types.h>\n#include <spl.h>\n#include <addrspace.h>","newText":""}},{"type":"change","content":{"oldRange":[[38,23],[39,0]],"newRange":[[38,23],[38,23]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[38,23],[38,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[38,23],[38,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[38,3]],"oldText":"","newText":"// "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[38,26],[38,26]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[38,26],[38,26]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[38,0],[38,3]],"newRange":[[38,0],[38,0]],"oldText":"// ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[38,23],[38,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[52,63],[52,63]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[52,63],[52,63]],"newRange":[[52,63],[53,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[53,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[53,0],[53,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[53,0],[53,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[54,31]],"oldText":"","newText":"paddr_t\ngetppages(unsigned long npages)"}},{"type":"change","content":{"oldRange":[[53,0],[53,0]],"newRange":[[53,0],[53,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[54,31],[54,31]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[53,7],[53,7]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[53,7],[54,0]],"newRange":[[53,7],[53,7]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[53,7],[53,7]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[53,7],[53,7]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[53,7],[53,7]],"newRange":[[53,7],[53,8]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[53,8],[53,8]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[53,39],[53,39]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[53,39],[53,39]],"newRange":[[53,39],[53,40]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[53,40],[53,40]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/champ/Git/cpen331/os161/kern/include/vm.h","digestWhenLastPersisted":"271866abef6483a753da87b357a27f960ecd1c18","preferredLineEnding":null,"nextMarkerId":108,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"PaneAxis","children":[{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":524,"softTabs":true,"firstVisibleScreenRow":55,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":525,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/champ/Git/cpen331/os161/kern/include/addrspace.h","bufferId":"413092bef1d95b2c9f32adab99596230","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":540,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":541,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/champ/Git/cpen331/os161/kern/include/vm.h","bufferId":"8056ed70f06d780bd5ff8c68dcfe46ed","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":441,"softTabs":false,"firstVisibleScreenRow":62,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":442,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/champ/Git/cpen331/os161/kern/arch/mips/vm/ram.c","bufferId":"eb686caef40a27ebc079c36d2e52fcb7","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/home/champ/Git/cpen331/os161/kern/arch/mips/vm/ram.c","focused":false,"flexScale":0.9948453608247423},{"deserializer":"Pane","id":487,"items":[{"deserializer":"TextEditor","id":389,"softTabs":false,"firstVisibleScreenRow":167,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":390,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/champ/Git/cpen331/os161/kern/vm/addrspace.c","bufferId":"f63bf30413194ca7eb1856128458bb44","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":536,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":537,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/champ/Git/cpen331/os161/kern/vm/vm.c","bufferId":"831a0e7f0a440127e0087f70baf1b0f9","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":413,"softTabs":true,"firstVisibleScreenRow":54,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":414,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/champ/Git/cpen331/os161/kern/main/main.c","bufferId":"9ce4d43f0479ef6803f261fb30989be6","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/home/champ/Git/cpen331/os161/kern/vm/vm.c","focused":true,"flexScale":1.0051546391752577}],"orientation":"horizontal","flexScale":1},"activePaneId":487},"packagesWithActiveGrammars":["language-c","language-hyperlink","language-todo"],"destroyedItemURIs":["/home/champ/Git/cpen331/os161/.ftpconfig","/home/champ/Git/cpen331/os161/.ftpconfig","/home/champ/Git/cpen331/os161/kern/arch/mips/syscall/syscall.c","/home/champ/Git/cpen331/os161/kern/lib/array.c","/home/champ/.atom/keymap.cson","/home/champ/Git/cpen331/os161/kern/arch/mips/locore/trap.c","/home/champ/Git/cpen331/os161/kern/thread/threadlist.c","/home/champ/Git/cpen331/os161/kern/syscall/runprogram.c","/home/champ/Git/cpen331/os161/kern/include/syscall.h","/home/champ/Git/cpen331/os161/userland/testbin/argtest/argtest.c","/home/champ/Git/cpen331/os161/kern/syscall/sys_fork.c","/home/champ/Git/cpen331/os161/kern/syscall/sys_waitpid.c","/home/champ/Git/cpen331/os161/kern/syscall/sys_execv.c","/home/champ/Git/cpen331/os161/kern/syscall/sys_exit.c","atom://config","atom://timecop","/home/champ/Git/cpen331/os161/kern/dev/lamebus/lamebus.c","/home/champ/Git/cpen331/os161/kern/arch/sys161/dev/lamebus_machdep.c","/home/champ/Git/cpen331/os161/kern/arch/sys161/main/start.S","/home/champ/Git/cpen331/os161/kern/arch/mips/vm/dumbvm.c","/home/champ/Git/cpen331/os161/kern/vm/kmalloc.c","/home/champ/Git/cpen331/os161/kern/arch/mips/include/vm.h","/home/champ/Git/cpen331/os161/kern/include/proc.h","/home/champ/Git/cpen331/os161/kern/main/menu.c","/home/champ/Git/cpen331/os161/kern/arch/mips/vm/dumbvm.c","/home/champ/Git/cpen331/os161/kern/proc/proc.c","atom://config/updates"]},"packageStates":{"atom-cscope":{},"fuzzy-finder":{"/home/champ/Git/cpen331/os161/kern/include/addrspace.h":1459539405225,"/home/champ/Git/cpen331/os161/kern/include/vm.h":1459538452985,"/home/champ/Git/cpen331/os161/kern/arch/mips/vm/ram.c":1459621173578,"/home/champ/Git/cpen331/os161/kern/vm/addrspace.c":1459621489111,"/home/champ/Git/cpen331/os161/kern/vm/vm.c":1459621544703,"/home/champ/Git/cpen331/os161/kern/main/main.c":1459551664884},"metrics":{"sessionLength":143572501},"tabs":[{},{}],"tree-view":{"directoryExpansionStates":{"/home/champ/Git/cpen331/os161":{"isExpanded":false,"entries":{}},"/home/champ/Git/crows":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},".idea":{"isExpanded":false,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}},"opulence":{"isExpanded":false,"entries":{}},"res":{"isExpanded":false,"entries":{}},"src":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/champ/Git/cpen331/os161","hasFocus":false,"attached":false,"scrollLeft":0,"scrollTop":0,"width":0},"keybinding-resolver":{},"find-and-replace":{"findOptions":{"findPattern":"curproc_getas","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["_num","ram_steal","alloc_kpages","curproc","curproc_getas"],"replaceHistory":[],"pathsHistory":[]},"php-debug":{"deserializer":"GlobalContext","data":{"breakpoints":[],"watchpoints":[]}}},"fullScreen":false}